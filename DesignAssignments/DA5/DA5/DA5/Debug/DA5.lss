
DA5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000182  00800100  00001188  0000121c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001188  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800282  00800282  0000139e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000139e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  0000143c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b12  00000000  00000000  0000154c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c2c  00000000  00000000  0000305e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a8e  00000000  00000000  00003c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000280  00000000  00000000  00004718  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005fa  00000000  00000000  00004998  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000975  00000000  00000000  00004f92  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00005907  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e8       	ldi	r30, 0x88	; 136
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 38       	cpi	r26, 0x82	; 130
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a2 e8       	ldi	r26, 0x82	; 130
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ab 3a       	cpi	r26, 0xAB	; 171
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 0b 01 	call	0x216	; 0x216 <main>
      9e:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
 volatile bool status = false;


 //adc functions
 void adc_init(void){
	 ADMUX = (0<<REFS1)|    // Reference Selection Bits
      a6:	85 e4       	ldi	r24, 0x45	; 69
      a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	 (1<<REFS0)|    // AVcc - external cap at AREF
	 (0<<ADLAR)|    // ADC Left Adjust Result
	 (1<<MUX2)|     // Analog Channel Selection Bits
	 (0<<MUX1)|     // ADC4 (PC4 PIN27)
	 (1<<MUX0);
	 ADCSRA = (1<<ADEN)|    // ADC ENable
      ac:	85 e8       	ldi	r24, 0x85	; 133
      ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
      b2:	08 95       	ret

000000b4 <__vector_1>:
	 }
 }

 //	Interrupt on IRQ pin
 ISR(INT0_vect)
 {
      b4:	1f 92       	push	r1
      b6:	0f 92       	push	r0
      b8:	0f b6       	in	r0, 0x3f	; 63
      ba:	0f 92       	push	r0
      bc:	11 24       	eor	r1, r1
      be:	8f 93       	push	r24
	 message_received = true;
      c0:	81 e0       	ldi	r24, 0x01	; 1
      c2:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <message_received>
 }
      c6:	8f 91       	pop	r24
      c8:	0f 90       	pop	r0
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	0f 90       	pop	r0
      ce:	1f 90       	pop	r1
      d0:	18 95       	reti

000000d2 <print_config>:

 void print_config(void)
 {
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	1f 92       	push	r1
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
	 uint8_t data;
	 printf("Startup successful\n\n nRF24L01+ configured as:\n");
      dc:	86 e2       	ldi	r24, 0x26	; 38
      de:	91 e0       	ldi	r25, 0x01	; 1
      e0:	0e 94 ba 05 	call	0xb74	; 0xb74 <puts>
	 printf("-------------------------------------------\n");
      e4:	84 e5       	ldi	r24, 0x54	; 84
      e6:	91 e0       	ldi	r25, 0x01	; 1
      e8:	0e 94 ba 05 	call	0xb74	; 0xb74 <puts>
	 nrf24_read(CONFIG,&data,1);
      ec:	41 e0       	ldi	r20, 0x01	; 1
      ee:	50 e0       	ldi	r21, 0x00	; 0
      f0:	be 01       	movw	r22, r28
      f2:	6f 5f       	subi	r22, 0xFF	; 255
      f4:	7f 4f       	sbci	r23, 0xFF	; 255
      f6:	80 e0       	ldi	r24, 0x00	; 0
      f8:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("CONFIG		0x%x\n",data);
      fc:	89 81       	ldd	r24, Y+1	; 0x01
      fe:	1f 92       	push	r1
     100:	8f 93       	push	r24
     102:	80 e8       	ldi	r24, 0x80	; 128
     104:	91 e0       	ldi	r25, 0x01	; 1
     106:	9f 93       	push	r25
     108:	8f 93       	push	r24
     10a:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(EN_AA,&data,1);
     10e:	41 e0       	ldi	r20, 0x01	; 1
     110:	50 e0       	ldi	r21, 0x00	; 0
     112:	be 01       	movw	r22, r28
     114:	6f 5f       	subi	r22, 0xFF	; 255
     116:	7f 4f       	sbci	r23, 0xFF	; 255
     118:	81 e0       	ldi	r24, 0x01	; 1
     11a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("EN_AA			0x%x\n",data);
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	1f 92       	push	r1
     122:	8f 93       	push	r24
     124:	8e e8       	ldi	r24, 0x8E	; 142
     126:	91 e0       	ldi	r25, 0x01	; 1
     128:	9f 93       	push	r25
     12a:	8f 93       	push	r24
     12c:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(EN_RXADDR,&data,1);
     130:	41 e0       	ldi	r20, 0x01	; 1
     132:	50 e0       	ldi	r21, 0x00	; 0
     134:	be 01       	movw	r22, r28
     136:	6f 5f       	subi	r22, 0xFF	; 255
     138:	7f 4f       	sbci	r23, 0xFF	; 255
     13a:	82 e0       	ldi	r24, 0x02	; 2
     13c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("EN_RXADDR		0x%x\n",data);
     140:	89 81       	ldd	r24, Y+1	; 0x01
     142:	1f 92       	push	r1
     144:	8f 93       	push	r24
     146:	8c e9       	ldi	r24, 0x9C	; 156
     148:	91 e0       	ldi	r25, 0x01	; 1
     14a:	9f 93       	push	r25
     14c:	8f 93       	push	r24
     14e:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(SETUP_RETR,&data,1);
     152:	41 e0       	ldi	r20, 0x01	; 1
     154:	50 e0       	ldi	r21, 0x00	; 0
     156:	be 01       	movw	r22, r28
     158:	6f 5f       	subi	r22, 0xFF	; 255
     15a:	7f 4f       	sbci	r23, 0xFF	; 255
     15c:	84 e0       	ldi	r24, 0x04	; 4
     15e:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("SETUP_RETR		0x%x\n",data);
     162:	89 81       	ldd	r24, Y+1	; 0x01
     164:	1f 92       	push	r1
     166:	8f 93       	push	r24
     168:	8d ea       	ldi	r24, 0xAD	; 173
     16a:	91 e0       	ldi	r25, 0x01	; 1
     16c:	9f 93       	push	r25
     16e:	8f 93       	push	r24
     170:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(RF_CH,&data,1);
     174:	41 e0       	ldi	r20, 0x01	; 1
     176:	50 e0       	ldi	r21, 0x00	; 0
     178:	be 01       	movw	r22, r28
     17a:	6f 5f       	subi	r22, 0xFF	; 255
     17c:	7f 4f       	sbci	r23, 0xFF	; 255
     17e:	85 e0       	ldi	r24, 0x05	; 5
     180:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("RF_CH			0x%x\n",data);
     184:	89 81       	ldd	r24, Y+1	; 0x01
     186:	1f 92       	push	r1
     188:	8f 93       	push	r24
     18a:	8f eb       	ldi	r24, 0xBF	; 191
     18c:	91 e0       	ldi	r25, 0x01	; 1
     18e:	9f 93       	push	r25
     190:	8f 93       	push	r24
     192:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(RF_SETUP,&data,1);
     196:	41 e0       	ldi	r20, 0x01	; 1
     198:	50 e0       	ldi	r21, 0x00	; 0
     19a:	be 01       	movw	r22, r28
     19c:	6f 5f       	subi	r22, 0xFF	; 255
     19e:	7f 4f       	sbci	r23, 0xFF	; 255
     1a0:	86 e0       	ldi	r24, 0x06	; 6
     1a2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("RF_SETUP		0x%x\n",data);
     1a6:	89 81       	ldd	r24, Y+1	; 0x01
     1a8:	1f 92       	push	r1
     1aa:	8f 93       	push	r24
     1ac:	8d ec       	ldi	r24, 0xCD	; 205
     1ae:	91 e0       	ldi	r25, 0x01	; 1
     1b0:	9f 93       	push	r25
     1b2:	8f 93       	push	r24
     1b4:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(STATUS,&data,1);
     1b8:	41 e0       	ldi	r20, 0x01	; 1
     1ba:	50 e0       	ldi	r21, 0x00	; 0
     1bc:	be 01       	movw	r22, r28
     1be:	6f 5f       	subi	r22, 0xFF	; 255
     1c0:	7f 4f       	sbci	r23, 0xFF	; 255
     1c2:	87 e0       	ldi	r24, 0x07	; 7
     1c4:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("STATUS		0x%x\n",data);
     1c8:	89 81       	ldd	r24, Y+1	; 0x01
     1ca:	1f 92       	push	r1
     1cc:	8f 93       	push	r24
     1ce:	8d ed       	ldi	r24, 0xDD	; 221
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	9f 93       	push	r25
     1d4:	8f 93       	push	r24
     1d6:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 nrf24_read(FEATURE,&data,1);
     1da:	41 e0       	ldi	r20, 0x01	; 1
     1dc:	50 e0       	ldi	r21, 0x00	; 0
     1de:	be 01       	movw	r22, r28
     1e0:	6f 5f       	subi	r22, 0xFF	; 255
     1e2:	7f 4f       	sbci	r23, 0xFF	; 255
     1e4:	8d e1       	ldi	r24, 0x1D	; 29
     1e6:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	 printf("FEATURE		0x%x\n",data);
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	1f 92       	push	r1
     1ee:	8f 93       	push	r24
     1f0:	8b ee       	ldi	r24, 0xEB	; 235
     1f2:	91 e0       	ldi	r25, 0x01	; 1
     1f4:	9f 93       	push	r25
     1f6:	8f 93       	push	r24
     1f8:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
	 printf("-------------------------------------------\n\n");
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	f8 94       	cli
     200:	de bf       	out	0x3e, r29	; 62
     202:	0f be       	out	0x3f, r0	; 63
     204:	cd bf       	out	0x3d, r28	; 61
     206:	8a ef       	ldi	r24, 0xFA	; 250
     208:	91 e0       	ldi	r25, 0x01	; 1
     20a:	0e 94 ba 05 	call	0xb74	; 0xb74 <puts>
 }
     20e:	0f 90       	pop	r0
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	08 95       	ret

00000216 <main>:
	 (0<<ADPS1)|
	 (1<<ADPS0);
 }

 int main(void)
 {
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	cd b7       	in	r28, 0x3d	; 61
     21c:	de b7       	in	r29, 0x3e	; 62
     21e:	aa 97       	sbiw	r28, 0x2a	; 42
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	f8 94       	cli
     224:	de bf       	out	0x3e, r29	; 62
     226:	0f be       	out	0x3f, r0	; 63
     228:	cd bf       	out	0x3d, r28	; 61
	 //	Set cliche message to send (message cannot exceed 32 characters)
	 char tx_message[32];				// Define string array
	 strcpy(tx_message,"Hello World!");	// Copy string into array
     22a:	8d e0       	ldi	r24, 0x0D	; 13
     22c:	e7 e2       	ldi	r30, 0x27	; 39
     22e:	f2 e0       	ldi	r31, 0x02	; 2
     230:	de 01       	movw	r26, r28
     232:	11 96       	adiw	r26, 0x01	; 1
     234:	01 90       	ld	r0, Z+
     236:	0d 92       	st	X+, r0
     238:	8a 95       	dec	r24
     23a:	e1 f7       	brne	.-8      	; 0x234 <main+0x1e>
	 char dummy[10];
	 //	Initialize UART
	 uart_init();
     23c:	0e 94 29 04 	call	0x852	; 0x852 <uart_init>
	 adc_init();        //Setup the ADC
     240:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	 
	 //	Initialize nRF24L01+ and print configuration info
	 nrf24_init();
     244:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <nrf24_init>
	 print_config();
     248:	0e 94 69 00 	call	0xd2	; 0xd2 <print_config>
	 
	 //	Start listening to incoming messages
	 nrf24_start_listening();
     24c:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <nrf24_start_listening>

	 strcpy(tx_message,"GOOD");	// Copy string into array
     250:	85 e0       	ldi	r24, 0x05	; 5
     252:	e4 e3       	ldi	r30, 0x34	; 52
     254:	f2 e0       	ldi	r31, 0x02	; 2
     256:	de 01       	movw	r26, r28
     258:	11 96       	adiw	r26, 0x01	; 1
     25a:	01 90       	ld	r0, Z+
     25c:	0d 92       	st	X+, r0
     25e:	8a 95       	dec	r24
     260:	e1 f7       	brne	.-8      	; 0x25a <main+0x44>
	 nrf24_send_message(tx_message);
     262:	ce 01       	movw	r24, r28
     264:	01 96       	adiw	r24, 0x01	; 1
     266:	0e 94 04 03 	call	0x608	; 0x608 <nrf24_send_message>
	 
	 while (1)
	 {
		 _delay_ms(150);
		 ADCSRA|=(1<<ADSC);	//start conversion
     26a:	0a e7       	ldi	r16, 0x7A	; 122
     26c:	10 e0       	ldi	r17, 0x00	; 0
		 while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
		 
		 ADCSRA |= (1<<ADIF);
		 int a = ADCL;
     26e:	0f 2e       	mov	r0, r31
     270:	f8 e7       	ldi	r31, 0x78	; 120
     272:	cf 2e       	mov	r12, r31
     274:	d1 2c       	mov	r13, r1
     276:	f0 2d       	mov	r31, r0
		 a = a | (ADCH<<8);
     278:	0f 2e       	mov	r0, r31
     27a:	f9 e7       	ldi	r31, 0x79	; 121
     27c:	ef 2e       	mov	r14, r31
     27e:	f1 2c       	mov	r15, r1
     280:	f0 2d       	mov	r31, r0
		 itoa(a, dummy, 10);
		 if (message_received)
		 {
			 //	Message received, print it
			 message_received = false;
			 printf("Received message: %s\n",nrf24_read_message());
     282:	0f 2e       	mov	r0, r31
     284:	f9 e3       	ldi	r31, 0x39	; 57
     286:	af 2e       	mov	r10, r31
     288:	f2 e0       	ldi	r31, 0x02	; 2
     28a:	bf 2e       	mov	r11, r31
     28c:	f0 2d       	mov	r31, r0
			 //	Send message as response
			 _delay_ms(500);
			 status = nrf24_send_message(dummy);
     28e:	99 24       	eor	r9, r9
     290:	93 94       	inc	r9
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     292:	2f ef       	ldi	r18, 0xFF	; 255
     294:	82 e5       	ldi	r24, 0x52	; 82
     296:	97 e0       	ldi	r25, 0x07	; 7
     298:	21 50       	subi	r18, 0x01	; 1
     29a:	80 40       	sbci	r24, 0x00	; 0
     29c:	90 40       	sbci	r25, 0x00	; 0
     29e:	e1 f7       	brne	.-8      	; 0x298 <main+0x82>
     2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <main+0x8c>
     2a2:	00 00       	nop
	 nrf24_send_message(tx_message);
	 
	 while (1)
	 {
		 _delay_ms(150);
		 ADCSRA|=(1<<ADSC);	//start conversion
     2a4:	f8 01       	movw	r30, r16
     2a6:	80 81       	ld	r24, Z
     2a8:	80 64       	ori	r24, 0x40	; 64
     2aa:	80 83       	st	Z, r24
		 while((ADCSRA&(1<<ADIF))==0);//wait for conversion to finish
     2ac:	f8 01       	movw	r30, r16
     2ae:	80 81       	ld	r24, Z
     2b0:	84 ff       	sbrs	r24, 4
     2b2:	fc cf       	rjmp	.-8      	; 0x2ac <main+0x96>
		 
		 ADCSRA |= (1<<ADIF);
     2b4:	80 81       	ld	r24, Z
     2b6:	80 61       	ori	r24, 0x10	; 16
     2b8:	80 83       	st	Z, r24
		 int a = ADCL;
     2ba:	f6 01       	movw	r30, r12
     2bc:	60 81       	ld	r22, Z
		 a = a | (ADCH<<8);
     2be:	f7 01       	movw	r30, r14
     2c0:	80 81       	ld	r24, Z
		 a = a*.488;
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	78 2b       	or	r23, r24
     2c6:	07 2e       	mov	r0, r23
     2c8:	00 0c       	add	r0, r0
     2ca:	88 0b       	sbc	r24, r24
     2cc:	99 0b       	sbc	r25, r25
     2ce:	0e 94 74 04 	call	0x8e8	; 0x8e8 <__floatsisf>
     2d2:	23 e2       	ldi	r18, 0x23	; 35
     2d4:	3b ed       	ldi	r19, 0xDB	; 219
     2d6:	49 ef       	ldi	r20, 0xF9	; 249
     2d8:	5e e3       	ldi	r21, 0x3E	; 62
     2da:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__mulsf3>
     2de:	0e 94 3c 04 	call	0x878	; 0x878 <__fixsfsi>
		 a = a* (9/5) + 32;
		 itoa(a, dummy, 10);
     2e2:	cb 01       	movw	r24, r22
     2e4:	80 96       	adiw	r24, 0x20	; 32
     2e6:	4a e0       	ldi	r20, 0x0A	; 10
     2e8:	50 e0       	ldi	r21, 0x00	; 0
     2ea:	be 01       	movw	r22, r28
     2ec:	6f 5d       	subi	r22, 0xDF	; 223
     2ee:	7f 4f       	sbci	r23, 0xFF	; 255
     2f0:	0e 94 74 05 	call	0xae8	; 0xae8 <itoa>
		 if (message_received)
     2f4:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <message_received>
     2f8:	88 23       	and	r24, r24
     2fa:	59 f2       	breq	.-106    	; 0x292 <main+0x7c>
		 {
			 //	Message received, print it
			 message_received = false;
     2fc:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <message_received>
			 printf("Received message: %s\n",nrf24_read_message());
     300:	0e 94 c1 03 	call	0x782	; 0x782 <nrf24_read_message>
     304:	9f 93       	push	r25
     306:	8f 93       	push	r24
     308:	bf 92       	push	r11
     30a:	af 92       	push	r10
     30c:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
     310:	ff ef       	ldi	r31, 0xFF	; 255
     312:	29 e6       	ldi	r18, 0x69	; 105
     314:	88 e1       	ldi	r24, 0x18	; 24
     316:	f1 50       	subi	r31, 0x01	; 1
     318:	20 40       	sbci	r18, 0x00	; 0
     31a:	80 40       	sbci	r24, 0x00	; 0
     31c:	e1 f7       	brne	.-8      	; 0x316 <main+0x100>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x10a>
     320:	00 00       	nop
			 //	Send message as response
			 _delay_ms(500);
			 status = nrf24_send_message(dummy);
     322:	ce 01       	movw	r24, r28
     324:	81 96       	adiw	r24, 0x21	; 33
     326:	0e 94 04 03 	call	0x608	; 0x608 <nrf24_send_message>
     32a:	99 2d       	mov	r25, r9
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	0f 90       	pop	r0
     332:	0f 90       	pop	r0
     334:	81 11       	cpse	r24, r1
     336:	01 c0       	rjmp	.+2      	; 0x33a <main+0x124>
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <__data_end>
			 if (status == true) printf("Message sent successfully\n");
     33e:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <__data_end>
     342:	88 23       	and	r24, r24
     344:	09 f4       	brne	.+2      	; 0x348 <main+0x132>
     346:	a5 cf       	rjmp	.-182    	; 0x292 <main+0x7c>
     348:	8f e4       	ldi	r24, 0x4F	; 79
     34a:	92 e0       	ldi	r25, 0x02	; 2
     34c:	0e 94 ba 05 	call	0xb74	; 0xb74 <puts>
     350:	a0 cf       	rjmp	.-192    	; 0x292 <main+0x7c>

00000352 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
     352:	df 92       	push	r13
     354:	ef 92       	push	r14
     356:	ff 92       	push	r15
     358:	0f 93       	push	r16
     35a:	1f 93       	push	r17
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	7b 01       	movw	r14, r22
     362:	8a 01       	movw	r16, r20
     364:	2a 98       	cbi	0x05, 2	; 5
     366:	0e 94 08 04 	call	0x810	; 0x810 <spi_exchange>
     36a:	d8 2e       	mov	r13, r24
     36c:	01 15       	cp	r16, r1
     36e:	11 05       	cpc	r17, r1
     370:	51 f0       	breq	.+20     	; 0x386 <nrf24_send_spi+0x34>
     372:	e7 01       	movw	r28, r14
     374:	0e 0d       	add	r16, r14
     376:	1f 1d       	adc	r17, r15
     378:	88 81       	ld	r24, Y
     37a:	0e 94 08 04 	call	0x810	; 0x810 <spi_exchange>
     37e:	89 93       	st	Y+, r24
     380:	c0 17       	cp	r28, r16
     382:	d1 07       	cpc	r29, r17
     384:	c9 f7       	brne	.-14     	; 0x378 <nrf24_send_spi+0x26>
     386:	2a 9a       	sbi	0x05, 2	; 5
     388:	8d 2d       	mov	r24, r13
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	1f 91       	pop	r17
     390:	0f 91       	pop	r16
     392:	ff 90       	pop	r15
     394:	ef 90       	pop	r14
     396:	df 90       	pop	r13
     398:	08 95       	ret

0000039a <nrf24_write>:
     39a:	80 62       	ori	r24, 0x20	; 32
     39c:	0e 94 a9 01 	call	0x352	; 0x352 <nrf24_send_spi>
     3a0:	08 95       	ret

000003a2 <nrf24_read>:
     3a2:	0e 94 a9 01 	call	0x352	; 0x352 <nrf24_send_spi>
     3a6:	08 95       	ret

000003a8 <nrf24_init>:
     3a8:	0f 93       	push	r16
     3aa:	1f 93       	push	r17
     3ac:	cf 93       	push	r28
     3ae:	df 93       	push	r29
     3b0:	1f 92       	push	r1
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
     3b6:	f8 94       	cli
     3b8:	e9 e6       	ldi	r30, 0x69	; 105
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	82 60       	ori	r24, 0x02	; 2
     3c0:	80 83       	st	Z, r24
     3c2:	e8 9a       	sbi	0x1d, 0	; 29
     3c4:	78 94       	sei
     3c6:	21 9a       	sbi	0x04, 1	; 4
     3c8:	22 9a       	sbi	0x04, 2	; 4
     3ca:	2a 9a       	sbi	0x05, 2	; 5
     3cc:	29 98       	cbi	0x05, 1	; 5
     3ce:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <spi_master_init>
     3d2:	2f ef       	ldi	r18, 0xFF	; 255
     3d4:	81 ee       	ldi	r24, 0xE1	; 225
     3d6:	94 e0       	ldi	r25, 0x04	; 4
     3d8:	21 50       	subi	r18, 0x01	; 1
     3da:	80 40       	sbci	r24, 0x00	; 0
     3dc:	90 40       	sbci	r25, 0x00	; 0
     3de:	e1 f7       	brne	.-8      	; 0x3d8 <nrf24_init+0x30>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <nrf24_init+0x3a>
     3e2:	00 00       	nop
     3e4:	0f e3       	ldi	r16, 0x3F	; 63
     3e6:	00 93 a4 02 	sts	0x02A4, r16	; 0x8002a4 <data>
     3ea:	41 e0       	ldi	r20, 0x01	; 1
     3ec:	50 e0       	ldi	r21, 0x00	; 0
     3ee:	64 ea       	ldi	r22, 0xA4	; 164
     3f0:	72 e0       	ldi	r23, 0x02	; 2
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     3f8:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <data>
     3fc:	41 e0       	ldi	r20, 0x01	; 1
     3fe:	50 e0       	ldi	r21, 0x00	; 0
     400:	64 ea       	ldi	r22, 0xA4	; 164
     402:	72 e0       	ldi	r23, 0x02	; 2
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     40a:	80 ef       	ldi	r24, 0xF0	; 240
     40c:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     410:	41 e0       	ldi	r20, 0x01	; 1
     412:	50 e0       	ldi	r21, 0x00	; 0
     414:	64 ea       	ldi	r22, 0xA4	; 164
     416:	72 e0       	ldi	r23, 0x02	; 2
     418:	84 e0       	ldi	r24, 0x04	; 4
     41a:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     41e:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <data>
     422:	41 e0       	ldi	r20, 0x01	; 1
     424:	50 e0       	ldi	r21, 0x00	; 0
     426:	64 ea       	ldi	r22, 0xA4	; 164
     428:	72 e0       	ldi	r23, 0x02	; 2
     42a:	82 e0       	ldi	r24, 0x02	; 2
     42c:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     430:	84 e7       	ldi	r24, 0x74	; 116
     432:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     436:	41 e0       	ldi	r20, 0x01	; 1
     438:	50 e0       	ldi	r21, 0x00	; 0
     43a:	64 ea       	ldi	r22, 0xA4	; 164
     43c:	72 e0       	ldi	r23, 0x02	; 2
     43e:	85 e0       	ldi	r24, 0x05	; 5
     440:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     444:	8e e0       	ldi	r24, 0x0E	; 14
     446:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     44a:	41 e0       	ldi	r20, 0x01	; 1
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	64 ea       	ldi	r22, 0xA4	; 164
     450:	72 e0       	ldi	r23, 0x02	; 2
     452:	86 e0       	ldi	r24, 0x06	; 6
     454:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     458:	10 e7       	ldi	r17, 0x70	; 112
     45a:	10 93 a4 02 	sts	0x02A4, r17	; 0x8002a4 <data>
     45e:	41 e0       	ldi	r20, 0x01	; 1
     460:	50 e0       	ldi	r21, 0x00	; 0
     462:	64 ea       	ldi	r22, 0xA4	; 164
     464:	72 e0       	ldi	r23, 0x02	; 2
     466:	87 e0       	ldi	r24, 0x07	; 7
     468:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     46c:	00 93 a4 02 	sts	0x02A4, r16	; 0x8002a4 <data>
     470:	41 e0       	ldi	r20, 0x01	; 1
     472:	50 e0       	ldi	r21, 0x00	; 0
     474:	64 ea       	ldi	r22, 0xA4	; 164
     476:	72 e0       	ldi	r23, 0x02	; 2
     478:	8c e1       	ldi	r24, 0x1C	; 28
     47a:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     47e:	84 e0       	ldi	r24, 0x04	; 4
     480:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     484:	41 e0       	ldi	r20, 0x01	; 1
     486:	50 e0       	ldi	r21, 0x00	; 0
     488:	64 ea       	ldi	r22, 0xA4	; 164
     48a:	72 e0       	ldi	r23, 0x02	; 2
     48c:	8d e1       	ldi	r24, 0x1D	; 29
     48e:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     492:	19 83       	std	Y+1, r17	; 0x01
     494:	40 e0       	ldi	r20, 0x00	; 0
     496:	50 e0       	ldi	r21, 0x00	; 0
     498:	60 e0       	ldi	r22, 0x00	; 0
     49a:	70 e0       	ldi	r23, 0x00	; 0
     49c:	82 ee       	ldi	r24, 0xE2	; 226
     49e:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	60 e0       	ldi	r22, 0x00	; 0
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	81 ee       	ldi	r24, 0xE1	; 225
     4ac:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     4b0:	45 e0       	ldi	r20, 0x05	; 5
     4b2:	50 e0       	ldi	r21, 0x00	; 0
     4b4:	65 e0       	ldi	r22, 0x05	; 5
     4b6:	71 e0       	ldi	r23, 0x01	; 1
     4b8:	8a e0       	ldi	r24, 0x0A	; 10
     4ba:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     4be:	45 e0       	ldi	r20, 0x05	; 5
     4c0:	50 e0       	ldi	r21, 0x00	; 0
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	71 e0       	ldi	r23, 0x01	; 1
     4c6:	80 e1       	ldi	r24, 0x10	; 16
     4c8:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     4cc:	41 e0       	ldi	r20, 0x01	; 1
     4ce:	50 e0       	ldi	r21, 0x00	; 0
     4d0:	be 01       	movw	r22, r28
     4d2:	6f 5f       	subi	r22, 0xFF	; 255
     4d4:	7f 4f       	sbci	r23, 0xFF	; 255
     4d6:	82 e0       	ldi	r24, 0x02	; 2
     4d8:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     4dc:	89 81       	ldd	r24, Y+1	; 0x01
     4de:	81 60       	ori	r24, 0x01	; 1
     4e0:	89 83       	std	Y+1, r24	; 0x01
     4e2:	41 e0       	ldi	r20, 0x01	; 1
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	be 01       	movw	r22, r28
     4e8:	6f 5f       	subi	r22, 0xFF	; 255
     4ea:	7f 4f       	sbci	r23, 0xFF	; 255
     4ec:	82 e0       	ldi	r24, 0x02	; 2
     4ee:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     4f2:	0f 90       	pop	r0
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	1f 91       	pop	r17
     4fa:	0f 91       	pop	r16
     4fc:	08 95       	ret

000004fe <nrf24_state>:
     4fe:	1f 93       	push	r17
     500:	cf 93       	push	r28
     502:	df 93       	push	r29
     504:	1f 92       	push	r1
     506:	cd b7       	in	r28, 0x3d	; 61
     508:	de b7       	in	r29, 0x3e	; 62
     50a:	18 2f       	mov	r17, r24
     50c:	41 e0       	ldi	r20, 0x01	; 1
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	be 01       	movw	r22, r28
     512:	6f 5f       	subi	r22, 0xFF	; 255
     514:	7f 4f       	sbci	r23, 0xFF	; 255
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
     51c:	13 30       	cpi	r17, 0x03	; 3
     51e:	71 f1       	breq	.+92     	; 0x57c <nrf24_state+0x7e>
     520:	28 f4       	brcc	.+10     	; 0x52c <nrf24_state+0x2e>
     522:	11 30       	cpi	r17, 0x01	; 1
     524:	59 f0       	breq	.+22     	; 0x53c <nrf24_state+0x3e>
     526:	12 30       	cpi	r17, 0x02	; 2
     528:	e9 f0       	breq	.+58     	; 0x564 <nrf24_state+0x66>
     52a:	5e c0       	rjmp	.+188    	; 0x5e8 <nrf24_state+0xea>
     52c:	15 30       	cpi	r17, 0x05	; 5
     52e:	09 f4       	brne	.+2      	; 0x532 <nrf24_state+0x34>
     530:	47 c0       	rjmp	.+142    	; 0x5c0 <nrf24_state+0xc2>
     532:	d0 f1       	brcs	.+116    	; 0x5a8 <nrf24_state+0xaa>
     534:	16 30       	cpi	r17, 0x06	; 6
     536:	09 f4       	brne	.+2      	; 0x53a <nrf24_state+0x3c>
     538:	45 c0       	rjmp	.+138    	; 0x5c4 <nrf24_state+0xc6>
     53a:	56 c0       	rjmp	.+172    	; 0x5e8 <nrf24_state+0xea>
     53c:	89 81       	ldd	r24, Y+1	; 0x01
     53e:	81 fd       	sbrc	r24, 1
     540:	53 c0       	rjmp	.+166    	; 0x5e8 <nrf24_state+0xea>
     542:	82 60       	ori	r24, 0x02	; 2
     544:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     548:	41 e0       	ldi	r20, 0x01	; 1
     54a:	50 e0       	ldi	r21, 0x00	; 0
     54c:	64 ea       	ldi	r22, 0xA4	; 164
     54e:	72 e0       	ldi	r23, 0x02	; 2
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     556:	8f e3       	ldi	r24, 0x3F	; 63
     558:	9f e1       	ldi	r25, 0x1F	; 31
     55a:	01 97       	sbiw	r24, 0x01	; 1
     55c:	f1 f7       	brne	.-4      	; 0x55a <nrf24_state+0x5c>
     55e:	00 c0       	rjmp	.+0      	; 0x560 <nrf24_state+0x62>
     560:	00 00       	nop
     562:	42 c0       	rjmp	.+132    	; 0x5e8 <nrf24_state+0xea>
     564:	89 81       	ldd	r24, Y+1	; 0x01
     566:	8d 7f       	andi	r24, 0xFD	; 253
     568:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     56c:	41 e0       	ldi	r20, 0x01	; 1
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	64 ea       	ldi	r22, 0xA4	; 164
     572:	72 e0       	ldi	r23, 0x02	; 2
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     57a:	36 c0       	rjmp	.+108    	; 0x5e8 <nrf24_state+0xea>
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	81 60       	ori	r24, 0x01	; 1
     580:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     584:	41 e0       	ldi	r20, 0x01	; 1
     586:	50 e0       	ldi	r21, 0x00	; 0
     588:	64 ea       	ldi	r22, 0xA4	; 164
     58a:	72 e0       	ldi	r23, 0x02	; 2
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     592:	80 e7       	ldi	r24, 0x70	; 112
     594:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     598:	41 e0       	ldi	r20, 0x01	; 1
     59a:	50 e0       	ldi	r21, 0x00	; 0
     59c:	64 ea       	ldi	r22, 0xA4	; 164
     59e:	72 e0       	ldi	r23, 0x02	; 2
     5a0:	87 e0       	ldi	r24, 0x07	; 7
     5a2:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     5a6:	20 c0       	rjmp	.+64     	; 0x5e8 <nrf24_state+0xea>
     5a8:	89 81       	ldd	r24, Y+1	; 0x01
     5aa:	8e 7f       	andi	r24, 0xFE	; 254
     5ac:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     5b0:	41 e0       	ldi	r20, 0x01	; 1
     5b2:	50 e0       	ldi	r21, 0x00	; 0
     5b4:	64 ea       	ldi	r22, 0xA4	; 164
     5b6:	72 e0       	ldi	r23, 0x02	; 2
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     5be:	14 c0       	rjmp	.+40     	; 0x5e8 <nrf24_state+0xea>
     5c0:	29 98       	cbi	0x05, 1	; 5
     5c2:	12 c0       	rjmp	.+36     	; 0x5e8 <nrf24_state+0xea>
     5c4:	89 81       	ldd	r24, Y+1	; 0x01
     5c6:	8e 7f       	andi	r24, 0xFE	; 254
     5c8:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     5cc:	41 e0       	ldi	r20, 0x01	; 1
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	64 ea       	ldi	r22, 0xA4	; 164
     5d2:	72 e0       	ldi	r23, 0x02	; 2
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     5da:	29 9a       	sbi	0x05, 1	; 5
     5dc:	87 e5       	ldi	r24, 0x57	; 87
     5de:	92 e0       	ldi	r25, 0x02	; 2
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	f1 f7       	brne	.-4      	; 0x5e0 <nrf24_state+0xe2>
     5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <nrf24_state+0xe8>
     5e6:	00 00       	nop
     5e8:	0f 90       	pop	r0
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	08 95       	ret

000005f2 <nrf24_start_listening>:
     5f2:	83 e0       	ldi	r24, 0x03	; 3
     5f4:	0e 94 7f 02 	call	0x4fe	; 0x4fe <nrf24_state>
     5f8:	29 9a       	sbi	0x05, 1	; 5
     5fa:	87 e5       	ldi	r24, 0x57	; 87
     5fc:	92 e0       	ldi	r25, 0x02	; 2
     5fe:	01 97       	sbiw	r24, 0x01	; 1
     600:	f1 f7       	brne	.-4      	; 0x5fe <nrf24_start_listening+0xc>
     602:	00 c0       	rjmp	.+0      	; 0x604 <nrf24_start_listening+0x12>
     604:	00 00       	nop
     606:	08 95       	ret

00000608 <nrf24_send_message>:
     608:	cf 92       	push	r12
     60a:	df 92       	push	r13
     60c:	ef 92       	push	r14
     60e:	ff 92       	push	r15
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
     61c:	a0 97       	sbiw	r28, 0x20	; 32
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	f8 94       	cli
     622:	de bf       	out	0x3e, r29	; 62
     624:	0f be       	out	0x3f, r0	; 63
     626:	cd bf       	out	0x3d, r28	; 61
     628:	6c 01       	movw	r12, r24
     62a:	68 94       	set
     62c:	ff 24       	eor	r15, r15
     62e:	f5 f8       	bld	r15, 5
     630:	ce 01       	movw	r24, r28
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	fc 01       	movw	r30, r24
     636:	2f 2d       	mov	r18, r15
     638:	11 92       	st	Z+, r1
     63a:	2a 95       	dec	r18
     63c:	e9 f7       	brne	.-6      	; 0x638 <nrf24_send_message+0x30>
     63e:	b6 01       	movw	r22, r12
     640:	0e 94 6d 05 	call	0xada	; 0xada <strcpy>
     644:	f6 01       	movw	r30, r12
     646:	01 90       	ld	r0, Z+
     648:	00 20       	and	r0, r0
     64a:	e9 f7       	brne	.-6      	; 0x646 <nrf24_send_message+0x3e>
     64c:	31 97       	sbiw	r30, 0x01	; 1
     64e:	8f 01       	movw	r16, r30
     650:	0c 19       	sub	r16, r12
     652:	1d 09       	sbc	r17, r13
     654:	84 e0       	ldi	r24, 0x04	; 4
     656:	0e 94 7f 02 	call	0x4fe	; 0x4fe <nrf24_state>
     65a:	40 e0       	ldi	r20, 0x00	; 0
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	60 e0       	ldi	r22, 0x00	; 0
     660:	70 e0       	ldi	r23, 0x00	; 0
     662:	82 ee       	ldi	r24, 0xE2	; 226
     664:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     668:	40 e0       	ldi	r20, 0x00	; 0
     66a:	50 e0       	ldi	r21, 0x00	; 0
     66c:	60 e0       	ldi	r22, 0x00	; 0
     66e:	70 e0       	ldi	r23, 0x00	; 0
     670:	81 ee       	ldi	r24, 0xE1	; 225
     672:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     676:	f0 92 a4 02 	sts	0x02A4, r15	; 0x8002a4 <data>
     67a:	41 e0       	ldi	r20, 0x01	; 1
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	64 ea       	ldi	r22, 0xA4	; 164
     680:	72 e0       	ldi	r23, 0x02	; 2
     682:	87 e0       	ldi	r24, 0x07	; 7
     684:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     688:	41 e0       	ldi	r20, 0x01	; 1
     68a:	50 e0       	ldi	r21, 0x00	; 0
     68c:	64 ea       	ldi	r22, 0xA4	; 164
     68e:	72 e0       	ldi	r23, 0x02	; 2
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
     696:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
     69a:	80 64       	ori	r24, 0x40	; 64
     69c:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     6a0:	41 e0       	ldi	r20, 0x01	; 1
     6a2:	50 e0       	ldi	r21, 0x00	; 0
     6a4:	64 ea       	ldi	r22, 0xA4	; 164
     6a6:	72 e0       	ldi	r23, 0x02	; 2
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     6ae:	2a 98       	cbi	0x05, 2	; 5
     6b0:	80 eb       	ldi	r24, 0xB0	; 176
     6b2:	0e 94 03 04 	call	0x806	; 0x806 <spi_send>
     6b6:	ef ef       	ldi	r30, 0xFF	; 255
     6b8:	e0 0f       	add	r30, r16
     6ba:	00 23       	and	r16, r16
     6bc:	81 f0       	breq	.+32     	; 0x6de <nrf24_send_message+0xd6>
     6be:	86 01       	movw	r16, r12
     6c0:	ee 2e       	mov	r14, r30
     6c2:	f1 2c       	mov	r15, r1
     6c4:	f7 01       	movw	r30, r14
     6c6:	31 96       	adiw	r30, 0x01	; 1
     6c8:	76 01       	movw	r14, r12
     6ca:	ee 0e       	add	r14, r30
     6cc:	ff 1e       	adc	r15, r31
     6ce:	f8 01       	movw	r30, r16
     6d0:	81 91       	ld	r24, Z+
     6d2:	8f 01       	movw	r16, r30
     6d4:	0e 94 03 04 	call	0x806	; 0x806 <spi_send>
     6d8:	0e 15       	cp	r16, r14
     6da:	1f 05       	cpc	r17, r15
     6dc:	c1 f7       	brne	.-16     	; 0x6ce <nrf24_send_message+0xc6>
     6de:	80 e0       	ldi	r24, 0x00	; 0
     6e0:	0e 94 03 04 	call	0x806	; 0x806 <spi_send>
     6e4:	2a 9a       	sbi	0x05, 2	; 5
     6e6:	29 9a       	sbi	0x05, 1	; 5
     6e8:	f0 e5       	ldi	r31, 0x50	; 80
     6ea:	fa 95       	dec	r31
     6ec:	f1 f7       	brne	.-4      	; 0x6ea <nrf24_send_message+0xe2>
     6ee:	29 98       	cbi	0x05, 1	; 5
     6f0:	41 e0       	ldi	r20, 0x01	; 1
     6f2:	50 e0       	ldi	r21, 0x00	; 0
     6f4:	64 ea       	ldi	r22, 0xA4	; 164
     6f6:	72 e0       	ldi	r23, 0x02	; 2
     6f8:	87 e0       	ldi	r24, 0x07	; 7
     6fa:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
     6fe:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
     702:	85 fd       	sbrc	r24, 5
     704:	0b c0       	rjmp	.+22     	; 0x71c <nrf24_send_message+0x114>
     706:	41 e0       	ldi	r20, 0x01	; 1
     708:	50 e0       	ldi	r21, 0x00	; 0
     70a:	64 ea       	ldi	r22, 0xA4	; 164
     70c:	72 e0       	ldi	r23, 0x02	; 2
     70e:	87 e0       	ldi	r24, 0x07	; 7
     710:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
     714:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
     718:	85 ff       	sbrs	r24, 5
     71a:	f5 cf       	rjmp	.-22     	; 0x706 <nrf24_send_message+0xfe>
     71c:	ce 01       	movw	r24, r28
     71e:	01 96       	adiw	r24, 0x01	; 1
     720:	9f 93       	push	r25
     722:	8f 93       	push	r24
     724:	89 e6       	ldi	r24, 0x69	; 105
     726:	92 e0       	ldi	r25, 0x02	; 2
     728:	9f 93       	push	r25
     72a:	8f 93       	push	r24
     72c:	0e 94 a4 05 	call	0xb48	; 0xb48 <printf>
     730:	41 e0       	ldi	r20, 0x01	; 1
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	64 ea       	ldi	r22, 0xA4	; 164
     736:	72 e0       	ldi	r23, 0x02	; 2
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
     73e:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
     742:	8f 7b       	andi	r24, 0xBF	; 191
     744:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
     748:	41 e0       	ldi	r20, 0x01	; 1
     74a:	50 e0       	ldi	r21, 0x00	; 0
     74c:	64 ea       	ldi	r22, 0xA4	; 164
     74e:	72 e0       	ldi	r23, 0x02	; 2
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
     756:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <nrf24_start_listening>
     75a:	0f 90       	pop	r0
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	0f 90       	pop	r0
     762:	81 e0       	ldi	r24, 0x01	; 1
     764:	a0 96       	adiw	r28, 0x20	; 32
     766:	0f b6       	in	r0, 0x3f	; 63
     768:	f8 94       	cli
     76a:	de bf       	out	0x3e, r29	; 62
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	cd bf       	out	0x3d, r28	; 61
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	1f 91       	pop	r17
     776:	0f 91       	pop	r16
     778:	ff 90       	pop	r15
     77a:	ef 90       	pop	r14
     77c:	df 90       	pop	r13
     77e:	cf 90       	pop	r12
     780:	08 95       	ret

00000782 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
     782:	80 e2       	ldi	r24, 0x20	; 32
     784:	e4 e8       	ldi	r30, 0x84	; 132
     786:	f2 e0       	ldi	r31, 0x02	; 2
     788:	df 01       	movw	r26, r30
     78a:	1d 92       	st	X+, r1
     78c:	8a 95       	dec	r24
     78e:	e9 f7       	brne	.-6      	; 0x78a <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	64 ea       	ldi	r22, 0xA4	; 164
     796:	72 e0       	ldi	r23, 0x02	; 2
     798:	80 e6       	ldi	r24, 0x60	; 96
     79a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
     79e:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <data>
     7a2:	44 23       	and	r20, r20
     7a4:	41 f0       	breq	.+16     	; 0x7b6 <nrf24_read_message+0x34>
     7a6:	50 e0       	ldi	r21, 0x00	; 0
     7a8:	4f 5f       	subi	r20, 0xFF	; 255
     7aa:	5f 4f       	sbci	r21, 0xFF	; 255
     7ac:	64 e8       	ldi	r22, 0x84	; 132
     7ae:	72 e0       	ldi	r23, 0x02	; 2
     7b0:	81 e6       	ldi	r24, 0x61	; 97
     7b2:	0e 94 a9 01 	call	0x352	; 0x352 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
     7b6:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <rx_message.2167>
     7ba:	88 23       	and	r24, r24
     7bc:	69 f0       	breq	.+26     	; 0x7d8 <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
     7be:	80 e4       	ldi	r24, 0x40	; 64
     7c0:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
		nrf24_write(STATUS,&data,1);
     7c4:	41 e0       	ldi	r20, 0x01	; 1
     7c6:	50 e0       	ldi	r21, 0x00	; 0
     7c8:	64 ea       	ldi	r22, 0xA4	; 164
     7ca:	72 e0       	ldi	r23, 0x02	; 2
     7cc:	87 e0       	ldi	r24, 0x07	; 7
     7ce:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
		
		return rx_message;
     7d2:	84 e8       	ldi	r24, 0x84	; 132
     7d4:	92 e0       	ldi	r25, 0x02	; 2
     7d6:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
     7d8:	80 e4       	ldi	r24, 0x40	; 64
     7da:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
	nrf24_write(STATUS,&data,1);
     7de:	41 e0       	ldi	r20, 0x01	; 1
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	64 ea       	ldi	r22, 0xA4	; 164
     7e4:	72 e0       	ldi	r23, 0x02	; 2
     7e6:	87 e0       	ldi	r24, 0x07	; 7
     7e8:	0e 94 cd 01 	call	0x39a	; 0x39a <nrf24_write>
	
	return "failed";
     7ec:	8b e7       	ldi	r24, 0x7B	; 123
     7ee:	92 e0       	ldi	r25, 0x02	; 2
}
     7f0:	08 95       	ret

000007f2 <spi_master_init>:
	loop_until_bit_is_set(SPSR, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
     7f2:	24 98       	cbi	0x04, 4	; 4
     7f4:	84 b1       	in	r24, 0x04	; 4
     7f6:	88 62       	ori	r24, 0x28	; 40
     7f8:	84 b9       	out	0x04, r24	; 4
     7fa:	80 e5       	ldi	r24, 0x50	; 80
     7fc:	8c bd       	out	0x2c, r24	; 44
     7fe:	8d b5       	in	r24, 0x2d	; 45
     800:	81 60       	ori	r24, 0x01	; 1
     802:	8d bd       	out	0x2d, r24	; 45
     804:	08 95       	ret

00000806 <spi_send>:
     806:	8e bd       	out	0x2e, r24	; 46
     808:	0d b4       	in	r0, 0x2d	; 45
     80a:	07 fe       	sbrs	r0, 7
     80c:	fd cf       	rjmp	.-6      	; 0x808 <spi_send+0x2>
     80e:	08 95       	ret

00000810 <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR = send_data;
     810:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
     812:	0d b4       	in	r0, 0x2d	; 45
     814:	07 fe       	sbrs	r0, 7
     816:	fd cf       	rjmp	.-6      	; 0x812 <spi_exchange+0x2>
	return SPDR;
     818:	8e b5       	in	r24, 0x2e	; 46
}
     81a:	08 95       	ret

0000081c <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
     81c:	cf 93       	push	r28
     81e:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     820:	8a 30       	cpi	r24, 0x0A	; 10
     822:	19 f4       	brne	.+6      	; 0x82a <uart_putchar+0xe>
		uart_putchar('\r', stream);
     824:	8d e0       	ldi	r24, 0x0D	; 13
     826:	0e 94 0e 04 	call	0x81c	; 0x81c <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     82a:	e0 ec       	ldi	r30, 0xC0	; 192
     82c:	f0 e0       	ldi	r31, 0x00	; 0
     82e:	80 81       	ld	r24, Z
     830:	85 ff       	sbrs	r24, 5
     832:	fd cf       	rjmp	.-6      	; 0x82e <uart_putchar+0x12>
	UDR0 = c;
     834:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	cf 91       	pop	r28
     83e:	08 95       	ret

00000840 <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     840:	e0 ec       	ldi	r30, 0xC0	; 192
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	80 81       	ld	r24, Z
     846:	88 23       	and	r24, r24
     848:	ec f7       	brge	.-6      	; 0x844 <uart_getchar+0x4>
	return UDR0;
     84a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	08 95       	ret

00000852 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
     852:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    UBRR0L = MYUBRR;
     856:	87 e6       	ldi	r24, 0x67	; 103
     858:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     85c:	88 e1       	ldi	r24, 0x18	; 24
     85e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    
    stdout = &mystdout;
     862:	e5 ea       	ldi	r30, 0xA5	; 165
     864:	f2 e0       	ldi	r31, 0x02	; 2
     866:	88 e1       	ldi	r24, 0x18	; 24
     868:	91 e0       	ldi	r25, 0x01	; 1
     86a:	93 83       	std	Z+3, r25	; 0x03
     86c:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
     86e:	8a e0       	ldi	r24, 0x0A	; 10
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	91 83       	std	Z+1, r25	; 0x01
     874:	80 83       	st	Z, r24
     876:	08 95       	ret

00000878 <__fixsfsi>:
     878:	0e 94 43 04 	call	0x886	; 0x886 <__fixunssfsi>
     87c:	68 94       	set
     87e:	b1 11       	cpse	r27, r1
     880:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_szero>
     884:	08 95       	ret

00000886 <__fixunssfsi>:
     886:	0e 94 b7 04 	call	0x96e	; 0x96e <__fp_splitA>
     88a:	88 f0       	brcs	.+34     	; 0x8ae <__fixunssfsi+0x28>
     88c:	9f 57       	subi	r25, 0x7F	; 127
     88e:	98 f0       	brcs	.+38     	; 0x8b6 <__fixunssfsi+0x30>
     890:	b9 2f       	mov	r27, r25
     892:	99 27       	eor	r25, r25
     894:	b7 51       	subi	r27, 0x17	; 23
     896:	b0 f0       	brcs	.+44     	; 0x8c4 <__fixunssfsi+0x3e>
     898:	e1 f0       	breq	.+56     	; 0x8d2 <__fixunssfsi+0x4c>
     89a:	66 0f       	add	r22, r22
     89c:	77 1f       	adc	r23, r23
     89e:	88 1f       	adc	r24, r24
     8a0:	99 1f       	adc	r25, r25
     8a2:	1a f0       	brmi	.+6      	; 0x8aa <__fixunssfsi+0x24>
     8a4:	ba 95       	dec	r27
     8a6:	c9 f7       	brne	.-14     	; 0x89a <__fixunssfsi+0x14>
     8a8:	14 c0       	rjmp	.+40     	; 0x8d2 <__fixunssfsi+0x4c>
     8aa:	b1 30       	cpi	r27, 0x01	; 1
     8ac:	91 f0       	breq	.+36     	; 0x8d2 <__fixunssfsi+0x4c>
     8ae:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__fp_zero>
     8b2:	b1 e0       	ldi	r27, 0x01	; 1
     8b4:	08 95       	ret
     8b6:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_zero>
     8ba:	67 2f       	mov	r22, r23
     8bc:	78 2f       	mov	r23, r24
     8be:	88 27       	eor	r24, r24
     8c0:	b8 5f       	subi	r27, 0xF8	; 248
     8c2:	39 f0       	breq	.+14     	; 0x8d2 <__fixunssfsi+0x4c>
     8c4:	b9 3f       	cpi	r27, 0xF9	; 249
     8c6:	cc f3       	brlt	.-14     	; 0x8ba <__fixunssfsi+0x34>
     8c8:	86 95       	lsr	r24
     8ca:	77 95       	ror	r23
     8cc:	67 95       	ror	r22
     8ce:	b3 95       	inc	r27
     8d0:	d9 f7       	brne	.-10     	; 0x8c8 <__fixunssfsi+0x42>
     8d2:	3e f4       	brtc	.+14     	; 0x8e2 <__fixunssfsi+0x5c>
     8d4:	90 95       	com	r25
     8d6:	80 95       	com	r24
     8d8:	70 95       	com	r23
     8da:	61 95       	neg	r22
     8dc:	7f 4f       	sbci	r23, 0xFF	; 255
     8de:	8f 4f       	sbci	r24, 0xFF	; 255
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	08 95       	ret

000008e4 <__floatunsisf>:
     8e4:	e8 94       	clt
     8e6:	09 c0       	rjmp	.+18     	; 0x8fa <__floatsisf+0x12>

000008e8 <__floatsisf>:
     8e8:	97 fb       	bst	r25, 7
     8ea:	3e f4       	brtc	.+14     	; 0x8fa <__floatsisf+0x12>
     8ec:	90 95       	com	r25
     8ee:	80 95       	com	r24
     8f0:	70 95       	com	r23
     8f2:	61 95       	neg	r22
     8f4:	7f 4f       	sbci	r23, 0xFF	; 255
     8f6:	8f 4f       	sbci	r24, 0xFF	; 255
     8f8:	9f 4f       	sbci	r25, 0xFF	; 255
     8fa:	99 23       	and	r25, r25
     8fc:	a9 f0       	breq	.+42     	; 0x928 <__stack+0x29>
     8fe:	f9 2f       	mov	r31, r25
     900:	96 e9       	ldi	r25, 0x96	; 150
     902:	bb 27       	eor	r27, r27
     904:	93 95       	inc	r25
     906:	f6 95       	lsr	r31
     908:	87 95       	ror	r24
     90a:	77 95       	ror	r23
     90c:	67 95       	ror	r22
     90e:	b7 95       	ror	r27
     910:	f1 11       	cpse	r31, r1
     912:	f8 cf       	rjmp	.-16     	; 0x904 <__stack+0x5>
     914:	fa f4       	brpl	.+62     	; 0x954 <__stack+0x55>
     916:	bb 0f       	add	r27, r27
     918:	11 f4       	brne	.+4      	; 0x91e <__stack+0x1f>
     91a:	60 ff       	sbrs	r22, 0
     91c:	1b c0       	rjmp	.+54     	; 0x954 <__stack+0x55>
     91e:	6f 5f       	subi	r22, 0xFF	; 255
     920:	7f 4f       	sbci	r23, 0xFF	; 255
     922:	8f 4f       	sbci	r24, 0xFF	; 255
     924:	9f 4f       	sbci	r25, 0xFF	; 255
     926:	16 c0       	rjmp	.+44     	; 0x954 <__stack+0x55>
     928:	88 23       	and	r24, r24
     92a:	11 f0       	breq	.+4      	; 0x930 <__stack+0x31>
     92c:	96 e9       	ldi	r25, 0x96	; 150
     92e:	11 c0       	rjmp	.+34     	; 0x952 <__stack+0x53>
     930:	77 23       	and	r23, r23
     932:	21 f0       	breq	.+8      	; 0x93c <__stack+0x3d>
     934:	9e e8       	ldi	r25, 0x8E	; 142
     936:	87 2f       	mov	r24, r23
     938:	76 2f       	mov	r23, r22
     93a:	05 c0       	rjmp	.+10     	; 0x946 <__stack+0x47>
     93c:	66 23       	and	r22, r22
     93e:	71 f0       	breq	.+28     	; 0x95c <__stack+0x5d>
     940:	96 e8       	ldi	r25, 0x86	; 134
     942:	86 2f       	mov	r24, r22
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	2a f0       	brmi	.+10     	; 0x954 <__stack+0x55>
     94a:	9a 95       	dec	r25
     94c:	66 0f       	add	r22, r22
     94e:	77 1f       	adc	r23, r23
     950:	88 1f       	adc	r24, r24
     952:	da f7       	brpl	.-10     	; 0x94a <__stack+0x4b>
     954:	88 0f       	add	r24, r24
     956:	96 95       	lsr	r25
     958:	87 95       	ror	r24
     95a:	97 f9       	bld	r25, 7
     95c:	08 95       	ret

0000095e <__fp_split3>:
     95e:	57 fd       	sbrc	r21, 7
     960:	90 58       	subi	r25, 0x80	; 128
     962:	44 0f       	add	r20, r20
     964:	55 1f       	adc	r21, r21
     966:	59 f0       	breq	.+22     	; 0x97e <__fp_splitA+0x10>
     968:	5f 3f       	cpi	r21, 0xFF	; 255
     96a:	71 f0       	breq	.+28     	; 0x988 <__fp_splitA+0x1a>
     96c:	47 95       	ror	r20

0000096e <__fp_splitA>:
     96e:	88 0f       	add	r24, r24
     970:	97 fb       	bst	r25, 7
     972:	99 1f       	adc	r25, r25
     974:	61 f0       	breq	.+24     	; 0x98e <__fp_splitA+0x20>
     976:	9f 3f       	cpi	r25, 0xFF	; 255
     978:	79 f0       	breq	.+30     	; 0x998 <__fp_splitA+0x2a>
     97a:	87 95       	ror	r24
     97c:	08 95       	ret
     97e:	12 16       	cp	r1, r18
     980:	13 06       	cpc	r1, r19
     982:	14 06       	cpc	r1, r20
     984:	55 1f       	adc	r21, r21
     986:	f2 cf       	rjmp	.-28     	; 0x96c <__fp_split3+0xe>
     988:	46 95       	lsr	r20
     98a:	f1 df       	rcall	.-30     	; 0x96e <__fp_splitA>
     98c:	08 c0       	rjmp	.+16     	; 0x99e <__fp_splitA+0x30>
     98e:	16 16       	cp	r1, r22
     990:	17 06       	cpc	r1, r23
     992:	18 06       	cpc	r1, r24
     994:	99 1f       	adc	r25, r25
     996:	f1 cf       	rjmp	.-30     	; 0x97a <__fp_splitA+0xc>
     998:	86 95       	lsr	r24
     99a:	71 05       	cpc	r23, r1
     99c:	61 05       	cpc	r22, r1
     99e:	08 94       	sec
     9a0:	08 95       	ret

000009a2 <__fp_zero>:
     9a2:	e8 94       	clt

000009a4 <__fp_szero>:
     9a4:	bb 27       	eor	r27, r27
     9a6:	66 27       	eor	r22, r22
     9a8:	77 27       	eor	r23, r23
     9aa:	cb 01       	movw	r24, r22
     9ac:	97 f9       	bld	r25, 7
     9ae:	08 95       	ret

000009b0 <__mulsf3>:
     9b0:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__mulsf3x>
     9b4:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_round>
     9b8:	0e 94 4e 05 	call	0xa9c	; 0xa9c <__fp_pscA>
     9bc:	38 f0       	brcs	.+14     	; 0x9cc <__mulsf3+0x1c>
     9be:	0e 94 55 05 	call	0xaaa	; 0xaaa <__fp_pscB>
     9c2:	20 f0       	brcs	.+8      	; 0x9cc <__mulsf3+0x1c>
     9c4:	95 23       	and	r25, r21
     9c6:	11 f0       	breq	.+4      	; 0x9cc <__mulsf3+0x1c>
     9c8:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__fp_inf>
     9cc:	0c 94 4b 05 	jmp	0xa96	; 0xa96 <__fp_nan>
     9d0:	11 24       	eor	r1, r1
     9d2:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_szero>

000009d6 <__mulsf3x>:
     9d6:	0e 94 af 04 	call	0x95e	; 0x95e <__fp_split3>
     9da:	70 f3       	brcs	.-36     	; 0x9b8 <__mulsf3+0x8>

000009dc <__mulsf3_pse>:
     9dc:	95 9f       	mul	r25, r21
     9de:	c1 f3       	breq	.-16     	; 0x9d0 <__mulsf3+0x20>
     9e0:	95 0f       	add	r25, r21
     9e2:	50 e0       	ldi	r21, 0x00	; 0
     9e4:	55 1f       	adc	r21, r21
     9e6:	62 9f       	mul	r22, r18
     9e8:	f0 01       	movw	r30, r0
     9ea:	72 9f       	mul	r23, r18
     9ec:	bb 27       	eor	r27, r27
     9ee:	f0 0d       	add	r31, r0
     9f0:	b1 1d       	adc	r27, r1
     9f2:	63 9f       	mul	r22, r19
     9f4:	aa 27       	eor	r26, r26
     9f6:	f0 0d       	add	r31, r0
     9f8:	b1 1d       	adc	r27, r1
     9fa:	aa 1f       	adc	r26, r26
     9fc:	64 9f       	mul	r22, r20
     9fe:	66 27       	eor	r22, r22
     a00:	b0 0d       	add	r27, r0
     a02:	a1 1d       	adc	r26, r1
     a04:	66 1f       	adc	r22, r22
     a06:	82 9f       	mul	r24, r18
     a08:	22 27       	eor	r18, r18
     a0a:	b0 0d       	add	r27, r0
     a0c:	a1 1d       	adc	r26, r1
     a0e:	62 1f       	adc	r22, r18
     a10:	73 9f       	mul	r23, r19
     a12:	b0 0d       	add	r27, r0
     a14:	a1 1d       	adc	r26, r1
     a16:	62 1f       	adc	r22, r18
     a18:	83 9f       	mul	r24, r19
     a1a:	a0 0d       	add	r26, r0
     a1c:	61 1d       	adc	r22, r1
     a1e:	22 1f       	adc	r18, r18
     a20:	74 9f       	mul	r23, r20
     a22:	33 27       	eor	r19, r19
     a24:	a0 0d       	add	r26, r0
     a26:	61 1d       	adc	r22, r1
     a28:	23 1f       	adc	r18, r19
     a2a:	84 9f       	mul	r24, r20
     a2c:	60 0d       	add	r22, r0
     a2e:	21 1d       	adc	r18, r1
     a30:	82 2f       	mov	r24, r18
     a32:	76 2f       	mov	r23, r22
     a34:	6a 2f       	mov	r22, r26
     a36:	11 24       	eor	r1, r1
     a38:	9f 57       	subi	r25, 0x7F	; 127
     a3a:	50 40       	sbci	r21, 0x00	; 0
     a3c:	9a f0       	brmi	.+38     	; 0xa64 <__mulsf3_pse+0x88>
     a3e:	f1 f0       	breq	.+60     	; 0xa7c <__mulsf3_pse+0xa0>
     a40:	88 23       	and	r24, r24
     a42:	4a f0       	brmi	.+18     	; 0xa56 <__mulsf3_pse+0x7a>
     a44:	ee 0f       	add	r30, r30
     a46:	ff 1f       	adc	r31, r31
     a48:	bb 1f       	adc	r27, r27
     a4a:	66 1f       	adc	r22, r22
     a4c:	77 1f       	adc	r23, r23
     a4e:	88 1f       	adc	r24, r24
     a50:	91 50       	subi	r25, 0x01	; 1
     a52:	50 40       	sbci	r21, 0x00	; 0
     a54:	a9 f7       	brne	.-22     	; 0xa40 <__mulsf3_pse+0x64>
     a56:	9e 3f       	cpi	r25, 0xFE	; 254
     a58:	51 05       	cpc	r21, r1
     a5a:	80 f0       	brcs	.+32     	; 0xa7c <__mulsf3_pse+0xa0>
     a5c:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__fp_inf>
     a60:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_szero>
     a64:	5f 3f       	cpi	r21, 0xFF	; 255
     a66:	e4 f3       	brlt	.-8      	; 0xa60 <__mulsf3_pse+0x84>
     a68:	98 3e       	cpi	r25, 0xE8	; 232
     a6a:	d4 f3       	brlt	.-12     	; 0xa60 <__mulsf3_pse+0x84>
     a6c:	86 95       	lsr	r24
     a6e:	77 95       	ror	r23
     a70:	67 95       	ror	r22
     a72:	b7 95       	ror	r27
     a74:	f7 95       	ror	r31
     a76:	e7 95       	ror	r30
     a78:	9f 5f       	subi	r25, 0xFF	; 255
     a7a:	c1 f7       	brne	.-16     	; 0xa6c <__mulsf3_pse+0x90>
     a7c:	fe 2b       	or	r31, r30
     a7e:	88 0f       	add	r24, r24
     a80:	91 1d       	adc	r25, r1
     a82:	96 95       	lsr	r25
     a84:	87 95       	ror	r24
     a86:	97 f9       	bld	r25, 7
     a88:	08 95       	ret

00000a8a <__fp_inf>:
     a8a:	97 f9       	bld	r25, 7
     a8c:	9f 67       	ori	r25, 0x7F	; 127
     a8e:	80 e8       	ldi	r24, 0x80	; 128
     a90:	70 e0       	ldi	r23, 0x00	; 0
     a92:	60 e0       	ldi	r22, 0x00	; 0
     a94:	08 95       	ret

00000a96 <__fp_nan>:
     a96:	9f ef       	ldi	r25, 0xFF	; 255
     a98:	80 ec       	ldi	r24, 0xC0	; 192
     a9a:	08 95       	ret

00000a9c <__fp_pscA>:
     a9c:	00 24       	eor	r0, r0
     a9e:	0a 94       	dec	r0
     aa0:	16 16       	cp	r1, r22
     aa2:	17 06       	cpc	r1, r23
     aa4:	18 06       	cpc	r1, r24
     aa6:	09 06       	cpc	r0, r25
     aa8:	08 95       	ret

00000aaa <__fp_pscB>:
     aaa:	00 24       	eor	r0, r0
     aac:	0a 94       	dec	r0
     aae:	12 16       	cp	r1, r18
     ab0:	13 06       	cpc	r1, r19
     ab2:	14 06       	cpc	r1, r20
     ab4:	05 06       	cpc	r0, r21
     ab6:	08 95       	ret

00000ab8 <__fp_round>:
     ab8:	09 2e       	mov	r0, r25
     aba:	03 94       	inc	r0
     abc:	00 0c       	add	r0, r0
     abe:	11 f4       	brne	.+4      	; 0xac4 <__fp_round+0xc>
     ac0:	88 23       	and	r24, r24
     ac2:	52 f0       	brmi	.+20     	; 0xad8 <__fp_round+0x20>
     ac4:	bb 0f       	add	r27, r27
     ac6:	40 f4       	brcc	.+16     	; 0xad8 <__fp_round+0x20>
     ac8:	bf 2b       	or	r27, r31
     aca:	11 f4       	brne	.+4      	; 0xad0 <__fp_round+0x18>
     acc:	60 ff       	sbrs	r22, 0
     ace:	04 c0       	rjmp	.+8      	; 0xad8 <__fp_round+0x20>
     ad0:	6f 5f       	subi	r22, 0xFF	; 255
     ad2:	7f 4f       	sbci	r23, 0xFF	; 255
     ad4:	8f 4f       	sbci	r24, 0xFF	; 255
     ad6:	9f 4f       	sbci	r25, 0xFF	; 255
     ad8:	08 95       	ret

00000ada <strcpy>:
     ada:	fb 01       	movw	r30, r22
     adc:	dc 01       	movw	r26, r24
     ade:	01 90       	ld	r0, Z+
     ae0:	0d 92       	st	X+, r0
     ae2:	00 20       	and	r0, r0
     ae4:	e1 f7       	brne	.-8      	; 0xade <strcpy+0x4>
     ae6:	08 95       	ret

00000ae8 <itoa>:
     ae8:	45 32       	cpi	r20, 0x25	; 37
     aea:	51 05       	cpc	r21, r1
     aec:	20 f4       	brcc	.+8      	; 0xaf6 <itoa+0xe>
     aee:	42 30       	cpi	r20, 0x02	; 2
     af0:	10 f0       	brcs	.+4      	; 0xaf6 <itoa+0xe>
     af2:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__itoa_ncheck>
     af6:	fb 01       	movw	r30, r22
     af8:	10 82       	st	Z, r1
     afa:	cb 01       	movw	r24, r22
     afc:	08 95       	ret

00000afe <__itoa_ncheck>:
     afe:	bb 27       	eor	r27, r27
     b00:	4a 30       	cpi	r20, 0x0A	; 10
     b02:	31 f4       	brne	.+12     	; 0xb10 <__itoa_ncheck+0x12>
     b04:	99 23       	and	r25, r25
     b06:	22 f4       	brpl	.+8      	; 0xb10 <__itoa_ncheck+0x12>
     b08:	bd e2       	ldi	r27, 0x2D	; 45
     b0a:	90 95       	com	r25
     b0c:	81 95       	neg	r24
     b0e:	9f 4f       	sbci	r25, 0xFF	; 255
     b10:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <__utoa_common>

00000b14 <__utoa_ncheck>:
     b14:	bb 27       	eor	r27, r27

00000b16 <__utoa_common>:
     b16:	fb 01       	movw	r30, r22
     b18:	55 27       	eor	r21, r21
     b1a:	aa 27       	eor	r26, r26
     b1c:	88 0f       	add	r24, r24
     b1e:	99 1f       	adc	r25, r25
     b20:	aa 1f       	adc	r26, r26
     b22:	a4 17       	cp	r26, r20
     b24:	10 f0       	brcs	.+4      	; 0xb2a <__utoa_common+0x14>
     b26:	a4 1b       	sub	r26, r20
     b28:	83 95       	inc	r24
     b2a:	50 51       	subi	r21, 0x10	; 16
     b2c:	b9 f7       	brne	.-18     	; 0xb1c <__utoa_common+0x6>
     b2e:	a0 5d       	subi	r26, 0xD0	; 208
     b30:	aa 33       	cpi	r26, 0x3A	; 58
     b32:	08 f0       	brcs	.+2      	; 0xb36 <__utoa_common+0x20>
     b34:	a9 5d       	subi	r26, 0xD9	; 217
     b36:	a1 93       	st	Z+, r26
     b38:	00 97       	sbiw	r24, 0x00	; 0
     b3a:	79 f7       	brne	.-34     	; 0xb1a <__utoa_common+0x4>
     b3c:	b1 11       	cpse	r27, r1
     b3e:	b1 93       	st	Z+, r27
     b40:	11 92       	st	Z+, r1
     b42:	cb 01       	movw	r24, r22
     b44:	0c 94 e1 07 	jmp	0xfc2	; 0xfc2 <strrev>

00000b48 <printf>:
     b48:	a0 e0       	ldi	r26, 0x00	; 0
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 9b 08 	jmp	0x1136	; 0x1136 <__prologue_saves__+0x20>
     b54:	ae 01       	movw	r20, r28
     b56:	4b 5f       	subi	r20, 0xFB	; 251
     b58:	5f 4f       	sbci	r21, 0xFF	; 255
     b5a:	fa 01       	movw	r30, r20
     b5c:	61 91       	ld	r22, Z+
     b5e:	71 91       	ld	r23, Z+
     b60:	af 01       	movw	r20, r30
     b62:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <__iob+0x2>
     b66:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <__iob+0x3>
     b6a:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <vfprintf>
     b6e:	e2 e0       	ldi	r30, 0x02	; 2
     b70:	0c 94 b7 08 	jmp	0x116e	; 0x116e <__epilogue_restores__+0x20>

00000b74 <puts>:
     b74:	0f 93       	push	r16
     b76:	1f 93       	push	r17
     b78:	cf 93       	push	r28
     b7a:	df 93       	push	r29
     b7c:	e0 91 a7 02 	lds	r30, 0x02A7	; 0x8002a7 <__iob+0x2>
     b80:	f0 91 a8 02 	lds	r31, 0x02A8	; 0x8002a8 <__iob+0x3>
     b84:	23 81       	ldd	r18, Z+3	; 0x03
     b86:	21 ff       	sbrs	r18, 1
     b88:	1b c0       	rjmp	.+54     	; 0xbc0 <puts+0x4c>
     b8a:	8c 01       	movw	r16, r24
     b8c:	d0 e0       	ldi	r29, 0x00	; 0
     b8e:	c0 e0       	ldi	r28, 0x00	; 0
     b90:	f8 01       	movw	r30, r16
     b92:	81 91       	ld	r24, Z+
     b94:	8f 01       	movw	r16, r30
     b96:	60 91 a7 02 	lds	r22, 0x02A7	; 0x8002a7 <__iob+0x2>
     b9a:	70 91 a8 02 	lds	r23, 0x02A8	; 0x8002a8 <__iob+0x3>
     b9e:	db 01       	movw	r26, r22
     ba0:	18 96       	adiw	r26, 0x08	; 8
     ba2:	ed 91       	ld	r30, X+
     ba4:	fc 91       	ld	r31, X
     ba6:	19 97       	sbiw	r26, 0x09	; 9
     ba8:	88 23       	and	r24, r24
     baa:	31 f0       	breq	.+12     	; 0xbb8 <puts+0x44>
     bac:	09 95       	icall
     bae:	89 2b       	or	r24, r25
     bb0:	79 f3       	breq	.-34     	; 0xb90 <puts+0x1c>
     bb2:	df ef       	ldi	r29, 0xFF	; 255
     bb4:	cf ef       	ldi	r28, 0xFF	; 255
     bb6:	ec cf       	rjmp	.-40     	; 0xb90 <puts+0x1c>
     bb8:	8a e0       	ldi	r24, 0x0A	; 10
     bba:	09 95       	icall
     bbc:	89 2b       	or	r24, r25
     bbe:	19 f0       	breq	.+6      	; 0xbc6 <puts+0x52>
     bc0:	8f ef       	ldi	r24, 0xFF	; 255
     bc2:	9f ef       	ldi	r25, 0xFF	; 255
     bc4:	02 c0       	rjmp	.+4      	; 0xbca <puts+0x56>
     bc6:	8d 2f       	mov	r24, r29
     bc8:	9c 2f       	mov	r25, r28
     bca:	df 91       	pop	r29
     bcc:	cf 91       	pop	r28
     bce:	1f 91       	pop	r17
     bd0:	0f 91       	pop	r16
     bd2:	08 95       	ret

00000bd4 <vfprintf>:
     bd4:	ab e0       	ldi	r26, 0x0B	; 11
     bd6:	b0 e0       	ldi	r27, 0x00	; 0
     bd8:	e0 ef       	ldi	r30, 0xF0	; 240
     bda:	f5 e0       	ldi	r31, 0x05	; 5
     bdc:	0c 94 8b 08 	jmp	0x1116	; 0x1116 <__prologue_saves__>
     be0:	6c 01       	movw	r12, r24
     be2:	7b 01       	movw	r14, r22
     be4:	8a 01       	movw	r16, r20
     be6:	fc 01       	movw	r30, r24
     be8:	17 82       	std	Z+7, r1	; 0x07
     bea:	16 82       	std	Z+6, r1	; 0x06
     bec:	83 81       	ldd	r24, Z+3	; 0x03
     bee:	81 ff       	sbrs	r24, 1
     bf0:	cc c1       	rjmp	.+920    	; 0xf8a <vfprintf+0x3b6>
     bf2:	ce 01       	movw	r24, r28
     bf4:	01 96       	adiw	r24, 0x01	; 1
     bf6:	3c 01       	movw	r6, r24
     bf8:	f6 01       	movw	r30, r12
     bfa:	93 81       	ldd	r25, Z+3	; 0x03
     bfc:	f7 01       	movw	r30, r14
     bfe:	93 fd       	sbrc	r25, 3
     c00:	85 91       	lpm	r24, Z+
     c02:	93 ff       	sbrs	r25, 3
     c04:	81 91       	ld	r24, Z+
     c06:	7f 01       	movw	r14, r30
     c08:	88 23       	and	r24, r24
     c0a:	09 f4       	brne	.+2      	; 0xc0e <vfprintf+0x3a>
     c0c:	ba c1       	rjmp	.+884    	; 0xf82 <vfprintf+0x3ae>
     c0e:	85 32       	cpi	r24, 0x25	; 37
     c10:	39 f4       	brne	.+14     	; 0xc20 <vfprintf+0x4c>
     c12:	93 fd       	sbrc	r25, 3
     c14:	85 91       	lpm	r24, Z+
     c16:	93 ff       	sbrs	r25, 3
     c18:	81 91       	ld	r24, Z+
     c1a:	7f 01       	movw	r14, r30
     c1c:	85 32       	cpi	r24, 0x25	; 37
     c1e:	29 f4       	brne	.+10     	; 0xc2a <vfprintf+0x56>
     c20:	b6 01       	movw	r22, r12
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     c28:	e7 cf       	rjmp	.-50     	; 0xbf8 <vfprintf+0x24>
     c2a:	91 2c       	mov	r9, r1
     c2c:	21 2c       	mov	r2, r1
     c2e:	31 2c       	mov	r3, r1
     c30:	ff e1       	ldi	r31, 0x1F	; 31
     c32:	f3 15       	cp	r31, r3
     c34:	d8 f0       	brcs	.+54     	; 0xc6c <vfprintf+0x98>
     c36:	8b 32       	cpi	r24, 0x2B	; 43
     c38:	79 f0       	breq	.+30     	; 0xc58 <vfprintf+0x84>
     c3a:	38 f4       	brcc	.+14     	; 0xc4a <vfprintf+0x76>
     c3c:	80 32       	cpi	r24, 0x20	; 32
     c3e:	79 f0       	breq	.+30     	; 0xc5e <vfprintf+0x8a>
     c40:	83 32       	cpi	r24, 0x23	; 35
     c42:	a1 f4       	brne	.+40     	; 0xc6c <vfprintf+0x98>
     c44:	23 2d       	mov	r18, r3
     c46:	20 61       	ori	r18, 0x10	; 16
     c48:	1d c0       	rjmp	.+58     	; 0xc84 <vfprintf+0xb0>
     c4a:	8d 32       	cpi	r24, 0x2D	; 45
     c4c:	61 f0       	breq	.+24     	; 0xc66 <vfprintf+0x92>
     c4e:	80 33       	cpi	r24, 0x30	; 48
     c50:	69 f4       	brne	.+26     	; 0xc6c <vfprintf+0x98>
     c52:	23 2d       	mov	r18, r3
     c54:	21 60       	ori	r18, 0x01	; 1
     c56:	16 c0       	rjmp	.+44     	; 0xc84 <vfprintf+0xb0>
     c58:	83 2d       	mov	r24, r3
     c5a:	82 60       	ori	r24, 0x02	; 2
     c5c:	38 2e       	mov	r3, r24
     c5e:	e3 2d       	mov	r30, r3
     c60:	e4 60       	ori	r30, 0x04	; 4
     c62:	3e 2e       	mov	r3, r30
     c64:	2a c0       	rjmp	.+84     	; 0xcba <vfprintf+0xe6>
     c66:	f3 2d       	mov	r31, r3
     c68:	f8 60       	ori	r31, 0x08	; 8
     c6a:	1d c0       	rjmp	.+58     	; 0xca6 <vfprintf+0xd2>
     c6c:	37 fc       	sbrc	r3, 7
     c6e:	2d c0       	rjmp	.+90     	; 0xcca <vfprintf+0xf6>
     c70:	20 ed       	ldi	r18, 0xD0	; 208
     c72:	28 0f       	add	r18, r24
     c74:	2a 30       	cpi	r18, 0x0A	; 10
     c76:	40 f0       	brcs	.+16     	; 0xc88 <vfprintf+0xb4>
     c78:	8e 32       	cpi	r24, 0x2E	; 46
     c7a:	b9 f4       	brne	.+46     	; 0xcaa <vfprintf+0xd6>
     c7c:	36 fc       	sbrc	r3, 6
     c7e:	81 c1       	rjmp	.+770    	; 0xf82 <vfprintf+0x3ae>
     c80:	23 2d       	mov	r18, r3
     c82:	20 64       	ori	r18, 0x40	; 64
     c84:	32 2e       	mov	r3, r18
     c86:	19 c0       	rjmp	.+50     	; 0xcba <vfprintf+0xe6>
     c88:	36 fe       	sbrs	r3, 6
     c8a:	06 c0       	rjmp	.+12     	; 0xc98 <vfprintf+0xc4>
     c8c:	8a e0       	ldi	r24, 0x0A	; 10
     c8e:	98 9e       	mul	r9, r24
     c90:	20 0d       	add	r18, r0
     c92:	11 24       	eor	r1, r1
     c94:	92 2e       	mov	r9, r18
     c96:	11 c0       	rjmp	.+34     	; 0xcba <vfprintf+0xe6>
     c98:	ea e0       	ldi	r30, 0x0A	; 10
     c9a:	2e 9e       	mul	r2, r30
     c9c:	20 0d       	add	r18, r0
     c9e:	11 24       	eor	r1, r1
     ca0:	22 2e       	mov	r2, r18
     ca2:	f3 2d       	mov	r31, r3
     ca4:	f0 62       	ori	r31, 0x20	; 32
     ca6:	3f 2e       	mov	r3, r31
     ca8:	08 c0       	rjmp	.+16     	; 0xcba <vfprintf+0xe6>
     caa:	8c 36       	cpi	r24, 0x6C	; 108
     cac:	21 f4       	brne	.+8      	; 0xcb6 <vfprintf+0xe2>
     cae:	83 2d       	mov	r24, r3
     cb0:	80 68       	ori	r24, 0x80	; 128
     cb2:	38 2e       	mov	r3, r24
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0xe6>
     cb6:	88 36       	cpi	r24, 0x68	; 104
     cb8:	41 f4       	brne	.+16     	; 0xcca <vfprintf+0xf6>
     cba:	f7 01       	movw	r30, r14
     cbc:	93 fd       	sbrc	r25, 3
     cbe:	85 91       	lpm	r24, Z+
     cc0:	93 ff       	sbrs	r25, 3
     cc2:	81 91       	ld	r24, Z+
     cc4:	7f 01       	movw	r14, r30
     cc6:	81 11       	cpse	r24, r1
     cc8:	b3 cf       	rjmp	.-154    	; 0xc30 <vfprintf+0x5c>
     cca:	98 2f       	mov	r25, r24
     ccc:	9f 7d       	andi	r25, 0xDF	; 223
     cce:	95 54       	subi	r25, 0x45	; 69
     cd0:	93 30       	cpi	r25, 0x03	; 3
     cd2:	28 f4       	brcc	.+10     	; 0xcde <vfprintf+0x10a>
     cd4:	0c 5f       	subi	r16, 0xFC	; 252
     cd6:	1f 4f       	sbci	r17, 0xFF	; 255
     cd8:	9f e3       	ldi	r25, 0x3F	; 63
     cda:	99 83       	std	Y+1, r25	; 0x01
     cdc:	0d c0       	rjmp	.+26     	; 0xcf8 <vfprintf+0x124>
     cde:	83 36       	cpi	r24, 0x63	; 99
     ce0:	31 f0       	breq	.+12     	; 0xcee <vfprintf+0x11a>
     ce2:	83 37       	cpi	r24, 0x73	; 115
     ce4:	71 f0       	breq	.+28     	; 0xd02 <vfprintf+0x12e>
     ce6:	83 35       	cpi	r24, 0x53	; 83
     ce8:	09 f0       	breq	.+2      	; 0xcec <vfprintf+0x118>
     cea:	59 c0       	rjmp	.+178    	; 0xd9e <vfprintf+0x1ca>
     cec:	21 c0       	rjmp	.+66     	; 0xd30 <vfprintf+0x15c>
     cee:	f8 01       	movw	r30, r16
     cf0:	80 81       	ld	r24, Z
     cf2:	89 83       	std	Y+1, r24	; 0x01
     cf4:	0e 5f       	subi	r16, 0xFE	; 254
     cf6:	1f 4f       	sbci	r17, 0xFF	; 255
     cf8:	88 24       	eor	r8, r8
     cfa:	83 94       	inc	r8
     cfc:	91 2c       	mov	r9, r1
     cfe:	53 01       	movw	r10, r6
     d00:	13 c0       	rjmp	.+38     	; 0xd28 <vfprintf+0x154>
     d02:	28 01       	movw	r4, r16
     d04:	f2 e0       	ldi	r31, 0x02	; 2
     d06:	4f 0e       	add	r4, r31
     d08:	51 1c       	adc	r5, r1
     d0a:	f8 01       	movw	r30, r16
     d0c:	a0 80       	ld	r10, Z
     d0e:	b1 80       	ldd	r11, Z+1	; 0x01
     d10:	36 fe       	sbrs	r3, 6
     d12:	03 c0       	rjmp	.+6      	; 0xd1a <vfprintf+0x146>
     d14:	69 2d       	mov	r22, r9
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <vfprintf+0x14a>
     d1a:	6f ef       	ldi	r22, 0xFF	; 255
     d1c:	7f ef       	ldi	r23, 0xFF	; 255
     d1e:	c5 01       	movw	r24, r10
     d20:	0e 94 d6 07 	call	0xfac	; 0xfac <strnlen>
     d24:	4c 01       	movw	r8, r24
     d26:	82 01       	movw	r16, r4
     d28:	f3 2d       	mov	r31, r3
     d2a:	ff 77       	andi	r31, 0x7F	; 127
     d2c:	3f 2e       	mov	r3, r31
     d2e:	16 c0       	rjmp	.+44     	; 0xd5c <vfprintf+0x188>
     d30:	28 01       	movw	r4, r16
     d32:	22 e0       	ldi	r18, 0x02	; 2
     d34:	42 0e       	add	r4, r18
     d36:	51 1c       	adc	r5, r1
     d38:	f8 01       	movw	r30, r16
     d3a:	a0 80       	ld	r10, Z
     d3c:	b1 80       	ldd	r11, Z+1	; 0x01
     d3e:	36 fe       	sbrs	r3, 6
     d40:	03 c0       	rjmp	.+6      	; 0xd48 <vfprintf+0x174>
     d42:	69 2d       	mov	r22, r9
     d44:	70 e0       	ldi	r23, 0x00	; 0
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <vfprintf+0x178>
     d48:	6f ef       	ldi	r22, 0xFF	; 255
     d4a:	7f ef       	ldi	r23, 0xFF	; 255
     d4c:	c5 01       	movw	r24, r10
     d4e:	0e 94 cb 07 	call	0xf96	; 0xf96 <strnlen_P>
     d52:	4c 01       	movw	r8, r24
     d54:	f3 2d       	mov	r31, r3
     d56:	f0 68       	ori	r31, 0x80	; 128
     d58:	3f 2e       	mov	r3, r31
     d5a:	82 01       	movw	r16, r4
     d5c:	33 fc       	sbrc	r3, 3
     d5e:	1b c0       	rjmp	.+54     	; 0xd96 <vfprintf+0x1c2>
     d60:	82 2d       	mov	r24, r2
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	88 16       	cp	r8, r24
     d66:	99 06       	cpc	r9, r25
     d68:	b0 f4       	brcc	.+44     	; 0xd96 <vfprintf+0x1c2>
     d6a:	b6 01       	movw	r22, r12
     d6c:	80 e2       	ldi	r24, 0x20	; 32
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     d74:	2a 94       	dec	r2
     d76:	f4 cf       	rjmp	.-24     	; 0xd60 <vfprintf+0x18c>
     d78:	f5 01       	movw	r30, r10
     d7a:	37 fc       	sbrc	r3, 7
     d7c:	85 91       	lpm	r24, Z+
     d7e:	37 fe       	sbrs	r3, 7
     d80:	81 91       	ld	r24, Z+
     d82:	5f 01       	movw	r10, r30
     d84:	b6 01       	movw	r22, r12
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     d8c:	21 10       	cpse	r2, r1
     d8e:	2a 94       	dec	r2
     d90:	21 e0       	ldi	r18, 0x01	; 1
     d92:	82 1a       	sub	r8, r18
     d94:	91 08       	sbc	r9, r1
     d96:	81 14       	cp	r8, r1
     d98:	91 04       	cpc	r9, r1
     d9a:	71 f7       	brne	.-36     	; 0xd78 <vfprintf+0x1a4>
     d9c:	e8 c0       	rjmp	.+464    	; 0xf6e <vfprintf+0x39a>
     d9e:	84 36       	cpi	r24, 0x64	; 100
     da0:	11 f0       	breq	.+4      	; 0xda6 <vfprintf+0x1d2>
     da2:	89 36       	cpi	r24, 0x69	; 105
     da4:	41 f5       	brne	.+80     	; 0xdf6 <vfprintf+0x222>
     da6:	f8 01       	movw	r30, r16
     da8:	37 fe       	sbrs	r3, 7
     daa:	07 c0       	rjmp	.+14     	; 0xdba <vfprintf+0x1e6>
     dac:	60 81       	ld	r22, Z
     dae:	71 81       	ldd	r23, Z+1	; 0x01
     db0:	82 81       	ldd	r24, Z+2	; 0x02
     db2:	93 81       	ldd	r25, Z+3	; 0x03
     db4:	0c 5f       	subi	r16, 0xFC	; 252
     db6:	1f 4f       	sbci	r17, 0xFF	; 255
     db8:	08 c0       	rjmp	.+16     	; 0xdca <vfprintf+0x1f6>
     dba:	60 81       	ld	r22, Z
     dbc:	71 81       	ldd	r23, Z+1	; 0x01
     dbe:	07 2e       	mov	r0, r23
     dc0:	00 0c       	add	r0, r0
     dc2:	88 0b       	sbc	r24, r24
     dc4:	99 0b       	sbc	r25, r25
     dc6:	0e 5f       	subi	r16, 0xFE	; 254
     dc8:	1f 4f       	sbci	r17, 0xFF	; 255
     dca:	f3 2d       	mov	r31, r3
     dcc:	ff 76       	andi	r31, 0x6F	; 111
     dce:	3f 2e       	mov	r3, r31
     dd0:	97 ff       	sbrs	r25, 7
     dd2:	09 c0       	rjmp	.+18     	; 0xde6 <vfprintf+0x212>
     dd4:	90 95       	com	r25
     dd6:	80 95       	com	r24
     dd8:	70 95       	com	r23
     dda:	61 95       	neg	r22
     ddc:	7f 4f       	sbci	r23, 0xFF	; 255
     dde:	8f 4f       	sbci	r24, 0xFF	; 255
     de0:	9f 4f       	sbci	r25, 0xFF	; 255
     de2:	f0 68       	ori	r31, 0x80	; 128
     de4:	3f 2e       	mov	r3, r31
     de6:	2a e0       	ldi	r18, 0x0A	; 10
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	a3 01       	movw	r20, r6
     dec:	0e 94 2d 08 	call	0x105a	; 0x105a <__ultoa_invert>
     df0:	88 2e       	mov	r8, r24
     df2:	86 18       	sub	r8, r6
     df4:	45 c0       	rjmp	.+138    	; 0xe80 <vfprintf+0x2ac>
     df6:	85 37       	cpi	r24, 0x75	; 117
     df8:	31 f4       	brne	.+12     	; 0xe06 <vfprintf+0x232>
     dfa:	23 2d       	mov	r18, r3
     dfc:	2f 7e       	andi	r18, 0xEF	; 239
     dfe:	b2 2e       	mov	r11, r18
     e00:	2a e0       	ldi	r18, 0x0A	; 10
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	25 c0       	rjmp	.+74     	; 0xe50 <vfprintf+0x27c>
     e06:	93 2d       	mov	r25, r3
     e08:	99 7f       	andi	r25, 0xF9	; 249
     e0a:	b9 2e       	mov	r11, r25
     e0c:	8f 36       	cpi	r24, 0x6F	; 111
     e0e:	c1 f0       	breq	.+48     	; 0xe40 <vfprintf+0x26c>
     e10:	18 f4       	brcc	.+6      	; 0xe18 <vfprintf+0x244>
     e12:	88 35       	cpi	r24, 0x58	; 88
     e14:	79 f0       	breq	.+30     	; 0xe34 <vfprintf+0x260>
     e16:	b5 c0       	rjmp	.+362    	; 0xf82 <vfprintf+0x3ae>
     e18:	80 37       	cpi	r24, 0x70	; 112
     e1a:	19 f0       	breq	.+6      	; 0xe22 <vfprintf+0x24e>
     e1c:	88 37       	cpi	r24, 0x78	; 120
     e1e:	21 f0       	breq	.+8      	; 0xe28 <vfprintf+0x254>
     e20:	b0 c0       	rjmp	.+352    	; 0xf82 <vfprintf+0x3ae>
     e22:	e9 2f       	mov	r30, r25
     e24:	e0 61       	ori	r30, 0x10	; 16
     e26:	be 2e       	mov	r11, r30
     e28:	b4 fe       	sbrs	r11, 4
     e2a:	0d c0       	rjmp	.+26     	; 0xe46 <vfprintf+0x272>
     e2c:	fb 2d       	mov	r31, r11
     e2e:	f4 60       	ori	r31, 0x04	; 4
     e30:	bf 2e       	mov	r11, r31
     e32:	09 c0       	rjmp	.+18     	; 0xe46 <vfprintf+0x272>
     e34:	34 fe       	sbrs	r3, 4
     e36:	0a c0       	rjmp	.+20     	; 0xe4c <vfprintf+0x278>
     e38:	29 2f       	mov	r18, r25
     e3a:	26 60       	ori	r18, 0x06	; 6
     e3c:	b2 2e       	mov	r11, r18
     e3e:	06 c0       	rjmp	.+12     	; 0xe4c <vfprintf+0x278>
     e40:	28 e0       	ldi	r18, 0x08	; 8
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	05 c0       	rjmp	.+10     	; 0xe50 <vfprintf+0x27c>
     e46:	20 e1       	ldi	r18, 0x10	; 16
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <vfprintf+0x27c>
     e4c:	20 e1       	ldi	r18, 0x10	; 16
     e4e:	32 e0       	ldi	r19, 0x02	; 2
     e50:	f8 01       	movw	r30, r16
     e52:	b7 fe       	sbrs	r11, 7
     e54:	07 c0       	rjmp	.+14     	; 0xe64 <vfprintf+0x290>
     e56:	60 81       	ld	r22, Z
     e58:	71 81       	ldd	r23, Z+1	; 0x01
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	0c 5f       	subi	r16, 0xFC	; 252
     e60:	1f 4f       	sbci	r17, 0xFF	; 255
     e62:	06 c0       	rjmp	.+12     	; 0xe70 <vfprintf+0x29c>
     e64:	60 81       	ld	r22, Z
     e66:	71 81       	ldd	r23, Z+1	; 0x01
     e68:	80 e0       	ldi	r24, 0x00	; 0
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	0e 5f       	subi	r16, 0xFE	; 254
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
     e70:	a3 01       	movw	r20, r6
     e72:	0e 94 2d 08 	call	0x105a	; 0x105a <__ultoa_invert>
     e76:	88 2e       	mov	r8, r24
     e78:	86 18       	sub	r8, r6
     e7a:	fb 2d       	mov	r31, r11
     e7c:	ff 77       	andi	r31, 0x7F	; 127
     e7e:	3f 2e       	mov	r3, r31
     e80:	36 fe       	sbrs	r3, 6
     e82:	0d c0       	rjmp	.+26     	; 0xe9e <vfprintf+0x2ca>
     e84:	23 2d       	mov	r18, r3
     e86:	2e 7f       	andi	r18, 0xFE	; 254
     e88:	a2 2e       	mov	r10, r18
     e8a:	89 14       	cp	r8, r9
     e8c:	58 f4       	brcc	.+22     	; 0xea4 <vfprintf+0x2d0>
     e8e:	34 fe       	sbrs	r3, 4
     e90:	0b c0       	rjmp	.+22     	; 0xea8 <vfprintf+0x2d4>
     e92:	32 fc       	sbrc	r3, 2
     e94:	09 c0       	rjmp	.+18     	; 0xea8 <vfprintf+0x2d4>
     e96:	83 2d       	mov	r24, r3
     e98:	8e 7e       	andi	r24, 0xEE	; 238
     e9a:	a8 2e       	mov	r10, r24
     e9c:	05 c0       	rjmp	.+10     	; 0xea8 <vfprintf+0x2d4>
     e9e:	b8 2c       	mov	r11, r8
     ea0:	a3 2c       	mov	r10, r3
     ea2:	03 c0       	rjmp	.+6      	; 0xeaa <vfprintf+0x2d6>
     ea4:	b8 2c       	mov	r11, r8
     ea6:	01 c0       	rjmp	.+2      	; 0xeaa <vfprintf+0x2d6>
     ea8:	b9 2c       	mov	r11, r9
     eaa:	a4 fe       	sbrs	r10, 4
     eac:	0f c0       	rjmp	.+30     	; 0xecc <vfprintf+0x2f8>
     eae:	fe 01       	movw	r30, r28
     eb0:	e8 0d       	add	r30, r8
     eb2:	f1 1d       	adc	r31, r1
     eb4:	80 81       	ld	r24, Z
     eb6:	80 33       	cpi	r24, 0x30	; 48
     eb8:	21 f4       	brne	.+8      	; 0xec2 <vfprintf+0x2ee>
     eba:	9a 2d       	mov	r25, r10
     ebc:	99 7e       	andi	r25, 0xE9	; 233
     ebe:	a9 2e       	mov	r10, r25
     ec0:	09 c0       	rjmp	.+18     	; 0xed4 <vfprintf+0x300>
     ec2:	a2 fe       	sbrs	r10, 2
     ec4:	06 c0       	rjmp	.+12     	; 0xed2 <vfprintf+0x2fe>
     ec6:	b3 94       	inc	r11
     ec8:	b3 94       	inc	r11
     eca:	04 c0       	rjmp	.+8      	; 0xed4 <vfprintf+0x300>
     ecc:	8a 2d       	mov	r24, r10
     ece:	86 78       	andi	r24, 0x86	; 134
     ed0:	09 f0       	breq	.+2      	; 0xed4 <vfprintf+0x300>
     ed2:	b3 94       	inc	r11
     ed4:	a3 fc       	sbrc	r10, 3
     ed6:	11 c0       	rjmp	.+34     	; 0xefa <vfprintf+0x326>
     ed8:	a0 fe       	sbrs	r10, 0
     eda:	06 c0       	rjmp	.+12     	; 0xee8 <vfprintf+0x314>
     edc:	b2 14       	cp	r11, r2
     ede:	88 f4       	brcc	.+34     	; 0xf02 <vfprintf+0x32e>
     ee0:	28 0c       	add	r2, r8
     ee2:	92 2c       	mov	r9, r2
     ee4:	9b 18       	sub	r9, r11
     ee6:	0e c0       	rjmp	.+28     	; 0xf04 <vfprintf+0x330>
     ee8:	b2 14       	cp	r11, r2
     eea:	60 f4       	brcc	.+24     	; 0xf04 <vfprintf+0x330>
     eec:	b6 01       	movw	r22, r12
     eee:	80 e2       	ldi	r24, 0x20	; 32
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     ef6:	b3 94       	inc	r11
     ef8:	f7 cf       	rjmp	.-18     	; 0xee8 <vfprintf+0x314>
     efa:	b2 14       	cp	r11, r2
     efc:	18 f4       	brcc	.+6      	; 0xf04 <vfprintf+0x330>
     efe:	2b 18       	sub	r2, r11
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <vfprintf+0x332>
     f02:	98 2c       	mov	r9, r8
     f04:	21 2c       	mov	r2, r1
     f06:	a4 fe       	sbrs	r10, 4
     f08:	10 c0       	rjmp	.+32     	; 0xf2a <vfprintf+0x356>
     f0a:	b6 01       	movw	r22, r12
     f0c:	80 e3       	ldi	r24, 0x30	; 48
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f14:	a2 fe       	sbrs	r10, 2
     f16:	17 c0       	rjmp	.+46     	; 0xf46 <vfprintf+0x372>
     f18:	a1 fc       	sbrc	r10, 1
     f1a:	03 c0       	rjmp	.+6      	; 0xf22 <vfprintf+0x34e>
     f1c:	88 e7       	ldi	r24, 0x78	; 120
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	02 c0       	rjmp	.+4      	; 0xf26 <vfprintf+0x352>
     f22:	88 e5       	ldi	r24, 0x58	; 88
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	b6 01       	movw	r22, r12
     f28:	0c c0       	rjmp	.+24     	; 0xf42 <vfprintf+0x36e>
     f2a:	8a 2d       	mov	r24, r10
     f2c:	86 78       	andi	r24, 0x86	; 134
     f2e:	59 f0       	breq	.+22     	; 0xf46 <vfprintf+0x372>
     f30:	a1 fe       	sbrs	r10, 1
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <vfprintf+0x364>
     f34:	8b e2       	ldi	r24, 0x2B	; 43
     f36:	01 c0       	rjmp	.+2      	; 0xf3a <vfprintf+0x366>
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	a7 fc       	sbrc	r10, 7
     f3c:	8d e2       	ldi	r24, 0x2D	; 45
     f3e:	b6 01       	movw	r22, r12
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f46:	89 14       	cp	r8, r9
     f48:	38 f4       	brcc	.+14     	; 0xf58 <vfprintf+0x384>
     f4a:	b6 01       	movw	r22, r12
     f4c:	80 e3       	ldi	r24, 0x30	; 48
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f54:	9a 94       	dec	r9
     f56:	f7 cf       	rjmp	.-18     	; 0xf46 <vfprintf+0x372>
     f58:	8a 94       	dec	r8
     f5a:	f3 01       	movw	r30, r6
     f5c:	e8 0d       	add	r30, r8
     f5e:	f1 1d       	adc	r31, r1
     f60:	80 81       	ld	r24, Z
     f62:	b6 01       	movw	r22, r12
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f6a:	81 10       	cpse	r8, r1
     f6c:	f5 cf       	rjmp	.-22     	; 0xf58 <vfprintf+0x384>
     f6e:	22 20       	and	r2, r2
     f70:	09 f4       	brne	.+2      	; 0xf74 <vfprintf+0x3a0>
     f72:	42 ce       	rjmp	.-892    	; 0xbf8 <vfprintf+0x24>
     f74:	b6 01       	movw	r22, r12
     f76:	80 e2       	ldi	r24, 0x20	; 32
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <fputc>
     f7e:	2a 94       	dec	r2
     f80:	f6 cf       	rjmp	.-20     	; 0xf6e <vfprintf+0x39a>
     f82:	f6 01       	movw	r30, r12
     f84:	86 81       	ldd	r24, Z+6	; 0x06
     f86:	97 81       	ldd	r25, Z+7	; 0x07
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <vfprintf+0x3ba>
     f8a:	8f ef       	ldi	r24, 0xFF	; 255
     f8c:	9f ef       	ldi	r25, 0xFF	; 255
     f8e:	2b 96       	adiw	r28, 0x0b	; 11
     f90:	e2 e1       	ldi	r30, 0x12	; 18
     f92:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__epilogue_restores__>

00000f96 <strnlen_P>:
     f96:	fc 01       	movw	r30, r24
     f98:	05 90       	lpm	r0, Z+
     f9a:	61 50       	subi	r22, 0x01	; 1
     f9c:	70 40       	sbci	r23, 0x00	; 0
     f9e:	01 10       	cpse	r0, r1
     fa0:	d8 f7       	brcc	.-10     	; 0xf98 <strnlen_P+0x2>
     fa2:	80 95       	com	r24
     fa4:	90 95       	com	r25
     fa6:	8e 0f       	add	r24, r30
     fa8:	9f 1f       	adc	r25, r31
     faa:	08 95       	ret

00000fac <strnlen>:
     fac:	fc 01       	movw	r30, r24
     fae:	61 50       	subi	r22, 0x01	; 1
     fb0:	70 40       	sbci	r23, 0x00	; 0
     fb2:	01 90       	ld	r0, Z+
     fb4:	01 10       	cpse	r0, r1
     fb6:	d8 f7       	brcc	.-10     	; 0xfae <strnlen+0x2>
     fb8:	80 95       	com	r24
     fba:	90 95       	com	r25
     fbc:	8e 0f       	add	r24, r30
     fbe:	9f 1f       	adc	r25, r31
     fc0:	08 95       	ret

00000fc2 <strrev>:
     fc2:	dc 01       	movw	r26, r24
     fc4:	fc 01       	movw	r30, r24
     fc6:	67 2f       	mov	r22, r23
     fc8:	71 91       	ld	r23, Z+
     fca:	77 23       	and	r23, r23
     fcc:	e1 f7       	brne	.-8      	; 0xfc6 <strrev+0x4>
     fce:	32 97       	sbiw	r30, 0x02	; 2
     fd0:	04 c0       	rjmp	.+8      	; 0xfda <strrev+0x18>
     fd2:	7c 91       	ld	r23, X
     fd4:	6d 93       	st	X+, r22
     fd6:	70 83       	st	Z, r23
     fd8:	62 91       	ld	r22, -Z
     fda:	ae 17       	cp	r26, r30
     fdc:	bf 07       	cpc	r27, r31
     fde:	c8 f3       	brcs	.-14     	; 0xfd2 <strrev+0x10>
     fe0:	08 95       	ret

00000fe2 <fputc>:
     fe2:	0f 93       	push	r16
     fe4:	1f 93       	push	r17
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	fb 01       	movw	r30, r22
     fec:	23 81       	ldd	r18, Z+3	; 0x03
     fee:	21 fd       	sbrc	r18, 1
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <fputc+0x16>
     ff2:	8f ef       	ldi	r24, 0xFF	; 255
     ff4:	9f ef       	ldi	r25, 0xFF	; 255
     ff6:	2c c0       	rjmp	.+88     	; 0x1050 <fputc+0x6e>
     ff8:	22 ff       	sbrs	r18, 2
     ffa:	16 c0       	rjmp	.+44     	; 0x1028 <fputc+0x46>
     ffc:	46 81       	ldd	r20, Z+6	; 0x06
     ffe:	57 81       	ldd	r21, Z+7	; 0x07
    1000:	24 81       	ldd	r18, Z+4	; 0x04
    1002:	35 81       	ldd	r19, Z+5	; 0x05
    1004:	42 17       	cp	r20, r18
    1006:	53 07       	cpc	r21, r19
    1008:	44 f4       	brge	.+16     	; 0x101a <fputc+0x38>
    100a:	a0 81       	ld	r26, Z
    100c:	b1 81       	ldd	r27, Z+1	; 0x01
    100e:	9d 01       	movw	r18, r26
    1010:	2f 5f       	subi	r18, 0xFF	; 255
    1012:	3f 4f       	sbci	r19, 0xFF	; 255
    1014:	31 83       	std	Z+1, r19	; 0x01
    1016:	20 83       	st	Z, r18
    1018:	8c 93       	st	X, r24
    101a:	26 81       	ldd	r18, Z+6	; 0x06
    101c:	37 81       	ldd	r19, Z+7	; 0x07
    101e:	2f 5f       	subi	r18, 0xFF	; 255
    1020:	3f 4f       	sbci	r19, 0xFF	; 255
    1022:	37 83       	std	Z+7, r19	; 0x07
    1024:	26 83       	std	Z+6, r18	; 0x06
    1026:	14 c0       	rjmp	.+40     	; 0x1050 <fputc+0x6e>
    1028:	8b 01       	movw	r16, r22
    102a:	ec 01       	movw	r28, r24
    102c:	fb 01       	movw	r30, r22
    102e:	00 84       	ldd	r0, Z+8	; 0x08
    1030:	f1 85       	ldd	r31, Z+9	; 0x09
    1032:	e0 2d       	mov	r30, r0
    1034:	09 95       	icall
    1036:	89 2b       	or	r24, r25
    1038:	e1 f6       	brne	.-72     	; 0xff2 <fputc+0x10>
    103a:	d8 01       	movw	r26, r16
    103c:	16 96       	adiw	r26, 0x06	; 6
    103e:	8d 91       	ld	r24, X+
    1040:	9c 91       	ld	r25, X
    1042:	17 97       	sbiw	r26, 0x07	; 7
    1044:	01 96       	adiw	r24, 0x01	; 1
    1046:	17 96       	adiw	r26, 0x07	; 7
    1048:	9c 93       	st	X, r25
    104a:	8e 93       	st	-X, r24
    104c:	16 97       	sbiw	r26, 0x06	; 6
    104e:	ce 01       	movw	r24, r28
    1050:	df 91       	pop	r29
    1052:	cf 91       	pop	r28
    1054:	1f 91       	pop	r17
    1056:	0f 91       	pop	r16
    1058:	08 95       	ret

0000105a <__ultoa_invert>:
    105a:	fa 01       	movw	r30, r20
    105c:	aa 27       	eor	r26, r26
    105e:	28 30       	cpi	r18, 0x08	; 8
    1060:	51 f1       	breq	.+84     	; 0x10b6 <__ultoa_invert+0x5c>
    1062:	20 31       	cpi	r18, 0x10	; 16
    1064:	81 f1       	breq	.+96     	; 0x10c6 <__ultoa_invert+0x6c>
    1066:	e8 94       	clt
    1068:	6f 93       	push	r22
    106a:	6e 7f       	andi	r22, 0xFE	; 254
    106c:	6e 5f       	subi	r22, 0xFE	; 254
    106e:	7f 4f       	sbci	r23, 0xFF	; 255
    1070:	8f 4f       	sbci	r24, 0xFF	; 255
    1072:	9f 4f       	sbci	r25, 0xFF	; 255
    1074:	af 4f       	sbci	r26, 0xFF	; 255
    1076:	b1 e0       	ldi	r27, 0x01	; 1
    1078:	3e d0       	rcall	.+124    	; 0x10f6 <__ultoa_invert+0x9c>
    107a:	b4 e0       	ldi	r27, 0x04	; 4
    107c:	3c d0       	rcall	.+120    	; 0x10f6 <__ultoa_invert+0x9c>
    107e:	67 0f       	add	r22, r23
    1080:	78 1f       	adc	r23, r24
    1082:	89 1f       	adc	r24, r25
    1084:	9a 1f       	adc	r25, r26
    1086:	a1 1d       	adc	r26, r1
    1088:	68 0f       	add	r22, r24
    108a:	79 1f       	adc	r23, r25
    108c:	8a 1f       	adc	r24, r26
    108e:	91 1d       	adc	r25, r1
    1090:	a1 1d       	adc	r26, r1
    1092:	6a 0f       	add	r22, r26
    1094:	71 1d       	adc	r23, r1
    1096:	81 1d       	adc	r24, r1
    1098:	91 1d       	adc	r25, r1
    109a:	a1 1d       	adc	r26, r1
    109c:	20 d0       	rcall	.+64     	; 0x10de <__ultoa_invert+0x84>
    109e:	09 f4       	brne	.+2      	; 0x10a2 <__ultoa_invert+0x48>
    10a0:	68 94       	set
    10a2:	3f 91       	pop	r19
    10a4:	2a e0       	ldi	r18, 0x0A	; 10
    10a6:	26 9f       	mul	r18, r22
    10a8:	11 24       	eor	r1, r1
    10aa:	30 19       	sub	r19, r0
    10ac:	30 5d       	subi	r19, 0xD0	; 208
    10ae:	31 93       	st	Z+, r19
    10b0:	de f6       	brtc	.-74     	; 0x1068 <__ultoa_invert+0xe>
    10b2:	cf 01       	movw	r24, r30
    10b4:	08 95       	ret
    10b6:	46 2f       	mov	r20, r22
    10b8:	47 70       	andi	r20, 0x07	; 7
    10ba:	40 5d       	subi	r20, 0xD0	; 208
    10bc:	41 93       	st	Z+, r20
    10be:	b3 e0       	ldi	r27, 0x03	; 3
    10c0:	0f d0       	rcall	.+30     	; 0x10e0 <__ultoa_invert+0x86>
    10c2:	c9 f7       	brne	.-14     	; 0x10b6 <__ultoa_invert+0x5c>
    10c4:	f6 cf       	rjmp	.-20     	; 0x10b2 <__ultoa_invert+0x58>
    10c6:	46 2f       	mov	r20, r22
    10c8:	4f 70       	andi	r20, 0x0F	; 15
    10ca:	40 5d       	subi	r20, 0xD0	; 208
    10cc:	4a 33       	cpi	r20, 0x3A	; 58
    10ce:	18 f0       	brcs	.+6      	; 0x10d6 <__ultoa_invert+0x7c>
    10d0:	49 5d       	subi	r20, 0xD9	; 217
    10d2:	31 fd       	sbrc	r19, 1
    10d4:	40 52       	subi	r20, 0x20	; 32
    10d6:	41 93       	st	Z+, r20
    10d8:	02 d0       	rcall	.+4      	; 0x10de <__ultoa_invert+0x84>
    10da:	a9 f7       	brne	.-22     	; 0x10c6 <__ultoa_invert+0x6c>
    10dc:	ea cf       	rjmp	.-44     	; 0x10b2 <__ultoa_invert+0x58>
    10de:	b4 e0       	ldi	r27, 0x04	; 4
    10e0:	a6 95       	lsr	r26
    10e2:	97 95       	ror	r25
    10e4:	87 95       	ror	r24
    10e6:	77 95       	ror	r23
    10e8:	67 95       	ror	r22
    10ea:	ba 95       	dec	r27
    10ec:	c9 f7       	brne	.-14     	; 0x10e0 <__ultoa_invert+0x86>
    10ee:	00 97       	sbiw	r24, 0x00	; 0
    10f0:	61 05       	cpc	r22, r1
    10f2:	71 05       	cpc	r23, r1
    10f4:	08 95       	ret
    10f6:	9b 01       	movw	r18, r22
    10f8:	ac 01       	movw	r20, r24
    10fa:	0a 2e       	mov	r0, r26
    10fc:	06 94       	lsr	r0
    10fe:	57 95       	ror	r21
    1100:	47 95       	ror	r20
    1102:	37 95       	ror	r19
    1104:	27 95       	ror	r18
    1106:	ba 95       	dec	r27
    1108:	c9 f7       	brne	.-14     	; 0x10fc <__ultoa_invert+0xa2>
    110a:	62 0f       	add	r22, r18
    110c:	73 1f       	adc	r23, r19
    110e:	84 1f       	adc	r24, r20
    1110:	95 1f       	adc	r25, r21
    1112:	a0 1d       	adc	r26, r0
    1114:	08 95       	ret

00001116 <__prologue_saves__>:
    1116:	2f 92       	push	r2
    1118:	3f 92       	push	r3
    111a:	4f 92       	push	r4
    111c:	5f 92       	push	r5
    111e:	6f 92       	push	r6
    1120:	7f 92       	push	r7
    1122:	8f 92       	push	r8
    1124:	9f 92       	push	r9
    1126:	af 92       	push	r10
    1128:	bf 92       	push	r11
    112a:	cf 92       	push	r12
    112c:	df 92       	push	r13
    112e:	ef 92       	push	r14
    1130:	ff 92       	push	r15
    1132:	0f 93       	push	r16
    1134:	1f 93       	push	r17
    1136:	cf 93       	push	r28
    1138:	df 93       	push	r29
    113a:	cd b7       	in	r28, 0x3d	; 61
    113c:	de b7       	in	r29, 0x3e	; 62
    113e:	ca 1b       	sub	r28, r26
    1140:	db 0b       	sbc	r29, r27
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
    114c:	09 94       	ijmp

0000114e <__epilogue_restores__>:
    114e:	2a 88       	ldd	r2, Y+18	; 0x12
    1150:	39 88       	ldd	r3, Y+17	; 0x11
    1152:	48 88       	ldd	r4, Y+16	; 0x10
    1154:	5f 84       	ldd	r5, Y+15	; 0x0f
    1156:	6e 84       	ldd	r6, Y+14	; 0x0e
    1158:	7d 84       	ldd	r7, Y+13	; 0x0d
    115a:	8c 84       	ldd	r8, Y+12	; 0x0c
    115c:	9b 84       	ldd	r9, Y+11	; 0x0b
    115e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1160:	b9 84       	ldd	r11, Y+9	; 0x09
    1162:	c8 84       	ldd	r12, Y+8	; 0x08
    1164:	df 80       	ldd	r13, Y+7	; 0x07
    1166:	ee 80       	ldd	r14, Y+6	; 0x06
    1168:	fd 80       	ldd	r15, Y+5	; 0x05
    116a:	0c 81       	ldd	r16, Y+4	; 0x04
    116c:	1b 81       	ldd	r17, Y+3	; 0x03
    116e:	aa 81       	ldd	r26, Y+2	; 0x02
    1170:	b9 81       	ldd	r27, Y+1	; 0x01
    1172:	ce 0f       	add	r28, r30
    1174:	d1 1d       	adc	r29, r1
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
    1180:	ed 01       	movw	r28, r26
    1182:	08 95       	ret

00001184 <_exit>:
    1184:	f8 94       	cli

00001186 <__stop_program>:
    1186:	ff cf       	rjmp	.-2      	; 0x1186 <__stop_program>
