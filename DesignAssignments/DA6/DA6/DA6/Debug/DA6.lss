
DA6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  0000184c  000018e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000184c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800138  00800138  00001918  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001918  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001974  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  000019b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000119f  00000000  00000000  00001a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000939  00000000  00000000  00002c33  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000986  00000000  00000000  0000356c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  00003ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000559  00000000  00000000  000040c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000678  00000000  00000000  00004619  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004c91  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec e4       	ldi	r30, 0x4C	; 76
     17e:	f8 e1       	ldi	r31, 0x18	; 24
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a8 33       	cpi	r26, 0x38	; 56
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a8 e3       	ldi	r26, 0x38	; 56
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a0 35       	cpi	r26, 0x50	; 80
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <main>
     1a0:	0c 94 24 0c 	jmp	0x1848	; 0x1848 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <I2C_Init>:
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     1a8:	88 e4       	ldi	r24, 0x48	; 72
     1aa:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     1ae:	08 95       	ret

000001b0 <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     1b0:	94 ea       	ldi	r25, 0xA4	; 164
     1b2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     1b6:	ec eb       	ldi	r30, 0xBC	; 188
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	90 81       	ld	r25, Z
     1bc:	99 23       	and	r25, r25
     1be:	ec f7       	brge	.-6      	; 0x1ba <I2C_Repeated_Start+0xa>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     1c0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     1c4:	98 7f       	andi	r25, 0xF8	; 248
     1c6:	90 31       	cpi	r25, 0x10	; 16
     1c8:	99 f4       	brne	.+38     	; 0x1f0 <I2C_Repeated_Start+0x40>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
     1ca:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     1ce:	84 e8       	ldi	r24, 0x84	; 132
     1d0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     1d4:	ec eb       	ldi	r30, 0xBC	; 188
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	80 81       	ld	r24, Z
     1da:	88 23       	and	r24, r24
     1dc:	ec f7       	brge	.-6      	; 0x1d8 <I2C_Repeated_Start+0x28>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     1de:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     1e2:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     1e4:	80 34       	cpi	r24, 0x40	; 64
     1e6:	31 f0       	breq	.+12     	; 0x1f4 <I2C_Repeated_Start+0x44>
	return 1;												/* If yes then return 1 to indicate ack received */ 
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     1e8:	80 32       	cpi	r24, 0x20	; 32
     1ea:	31 f0       	breq	.+12     	; 0x1f8 <I2C_Repeated_Start+0x48>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     1ec:	83 e0       	ldi	r24, 0x03	; 3
     1ee:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     1f0:	80 e0       	ldi	r24, 0x00	; 0
     1f2:	08 95       	ret
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */ 
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     1f8:	82 e0       	ldi	r24, 0x02	; 2
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     1fa:	08 95       	ret

000001fc <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
     1fc:	84 e9       	ldi	r24, 0x94	; 148
     1fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(TWCR & (1<<TWSTO));								/* Wait until stop condition execution */ 
     202:	ec eb       	ldi	r30, 0xBC	; 188
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	80 81       	ld	r24, Z
     208:	84 fd       	sbrc	r24, 4
     20a:	fd cf       	rjmp	.-6      	; 0x206 <I2C_Stop+0xa>
}
     20c:	08 95       	ret

0000020e <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
     20e:	bf 92       	push	r11
     210:	cf 92       	push	r12
     212:	df 92       	push	r13
     214:	ef 92       	push	r14
     216:	ff 92       	push	r15
     218:	0f 93       	push	r16
     21a:	1f 93       	push	r17
     21c:	cf 93       	push	r28
     21e:	df 93       	push	r29
     220:	b8 2e       	mov	r11, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     222:	cc eb       	ldi	r28, 0xBC	; 188
     224:	d0 e0       	ldi	r29, 0x00	; 0
     226:	0f 2e       	mov	r0, r31
     228:	f4 ea       	ldi	r31, 0xA4	; 164
     22a:	df 2e       	mov	r13, r31
     22c:	f0 2d       	mov	r31, r0
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     22e:	09 eb       	ldi	r16, 0xB9	; 185
     230:	10 e0       	ldi	r17, 0x00	; 0
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     232:	0f 2e       	mov	r0, r31
     234:	fb eb       	ldi	r31, 0xBB	; 187
     236:	ef 2e       	mov	r14, r31
     238:	f1 2c       	mov	r15, r1
     23a:	f0 2d       	mov	r31, r0
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     23c:	0f 2e       	mov	r0, r31
     23e:	f4 e8       	ldi	r31, 0x84	; 132
     240:	cf 2e       	mov	r12, r31
     242:	f0 2d       	mov	r31, r0
void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     244:	d8 82       	st	Y, r13
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
     246:	88 81       	ld	r24, Y
     248:	88 23       	and	r24, r24
     24a:	ec f7       	brge	.-6      	; 0x246 <I2C_Start_Wait+0x38>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     24c:	f8 01       	movw	r30, r16
     24e:	80 81       	ld	r24, Z
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
     250:	88 7f       	andi	r24, 0xF8	; 248
     252:	88 30       	cpi	r24, 0x08	; 8
     254:	b9 f7       	brne	.-18     	; 0x244 <I2C_Start_Wait+0x36>
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     256:	f7 01       	movw	r30, r14
     258:	b0 82       	st	Z, r11
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     25a:	c8 82       	st	Y, r12
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
     25c:	88 81       	ld	r24, Y
     25e:	88 23       	and	r24, r24
     260:	ec f7       	brge	.-6      	; 0x25c <I2C_Start_Wait+0x4e>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
     262:	f8 01       	movw	r30, r16
     264:	80 81       	ld	r24, Z
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
     266:	88 7f       	andi	r24, 0xF8	; 248
     268:	88 31       	cpi	r24, 0x18	; 24
     26a:	19 f0       	breq	.+6      	; 0x272 <I2C_Start_Wait+0x64>
		{
			I2C_Stop();										/* If not then generate stop condition */
     26c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
			continue;										/* continue with start loop again */
     270:	e9 cf       	rjmp	.-46     	; 0x244 <I2C_Start_Wait+0x36>
		}
		break;												/* If yes then break loop */
	}
}
     272:	df 91       	pop	r29
     274:	cf 91       	pop	r28
     276:	1f 91       	pop	r17
     278:	0f 91       	pop	r16
     27a:	ff 90       	pop	r15
     27c:	ef 90       	pop	r14
     27e:	df 90       	pop	r13
     280:	cf 90       	pop	r12
     282:	bf 90       	pop	r11
     284:	08 95       	ret

00000286 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
     286:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     28a:	84 e8       	ldi	r24, 0x84	; 132
     28c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     290:	ec eb       	ldi	r30, 0xBC	; 188
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	80 81       	ld	r24, Z
     296:	88 23       	and	r24, r24
     298:	ec f7       	brge	.-6      	; 0x294 <I2C_Write+0xe>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
     29a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     29e:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     2a0:	88 32       	cpi	r24, 0x28	; 40
     2a2:	21 f0       	breq	.+8      	; 0x2ac <I2C_Write+0x26>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     2a4:	80 33       	cpi	r24, 0x30	; 48
     2a6:	21 f0       	breq	.+8      	; 0x2b0 <I2C_Write+0x2a>
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     2a8:	82 e0       	ldi	r24, 0x02	; 2
     2aa:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
     2b0:	81 e0       	ldi	r24, 0x01	; 1
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
}
     2b2:	08 95       	ret

000002b4 <I2C_Read_Ack>:

char I2C_Read_Ack()										/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     2b4:	84 ec       	ldi	r24, 0xC4	; 196
     2b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     2ba:	ec eb       	ldi	r30, 0xBC	; 188
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	80 81       	ld	r24, Z
     2c0:	88 23       	and	r24, r24
     2c2:	ec f7       	brge	.-6      	; 0x2be <I2C_Read_Ack+0xa>
	return TWDR;											/* Return received data */
     2c4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}	
     2c8:	08 95       	ret

000002ca <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     2ca:	84 e8       	ldi	r24, 0x84	; 132
     2cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     2d0:	ec eb       	ldi	r30, 0xBC	; 188
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	80 81       	ld	r24, Z
     2d6:	88 23       	and	r24, r24
     2d8:	ec f7       	brge	.-6      	; 0x2d4 <I2C_Read_Nack+0xa>
	return TWDR;											/* Return received data */
     2da:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}	
     2de:	08 95       	ret

000002e0 <init_uart>:
void uart_puts(char *s){
	while(*s){
		uart_putc(*s);
		s++;
	}
}
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	9c 01       	movw	r18, r24
     2e4:	40 e0       	ldi	r20, 0x00	; 0
     2e6:	50 e0       	ldi	r21, 0x00	; 0
     2e8:	60 e4       	ldi	r22, 0x40	; 64
     2ea:	72 e4       	ldi	r23, 0x42	; 66
     2ec:	8f e0       	ldi	r24, 0x0F	; 15
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	0e 94 a7 08 	call	0x114e	; 0x114e <__udivmodsi4>
     2f4:	83 2f       	mov	r24, r19
     2f6:	99 27       	eor	r25, r25
     2f8:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     2fc:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     300:	e1 ec       	ldi	r30, 0xC1	; 193
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	80 81       	ld	r24, Z
     306:	88 69       	ori	r24, 0x98	; 152
     308:	80 83       	st	Z, r24
     30a:	e2 ec       	ldi	r30, 0xC2	; 194
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	8e 60       	ori	r24, 0x0E	; 14
     312:	80 83       	st	Z, r24
     314:	08 95       	ret

00000316 <init_MPU6050>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     316:	2f ef       	ldi	r18, 0xFF	; 255
     318:	82 e5       	ldi	r24, 0x52	; 82
     31a:	97 e0       	ldi	r25, 0x07	; 7
     31c:	21 50       	subi	r18, 0x01	; 1
     31e:	80 40       	sbci	r24, 0x00	; 0
     320:	90 40       	sbci	r25, 0x00	; 0
     322:	e1 f7       	brne	.-8      	; 0x31c <init_MPU6050+0x6>
     324:	00 c0       	rjmp	.+0      	; 0x326 <init_MPU6050+0x10>
     326:	00 00       	nop

void init_MPU6050()/* Gyro initialization function */
{
	_delay_ms(150);/* Power up time >100ms */
	I2C_Start_Wait(0xD0);/* Start with device write address */
     328:	80 ed       	ldi	r24, 0xD0	; 208
     32a:	0e 94 07 01 	call	0x20e	; 0x20e <I2C_Start_Wait>
	I2C_Write(SMPLRT_DIV);/* Write to sample rate register */
     32e:	89 e1       	ldi	r24, 0x19	; 25
     330:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Write(0x07);/* 1KHz sample rate */
     334:	87 e0       	ldi	r24, 0x07	; 7
     336:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Stop();
     33a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
	I2C_Start_Wait(0xD0);
     33e:	80 ed       	ldi	r24, 0xD0	; 208
     340:	0e 94 07 01 	call	0x20e	; 0x20e <I2C_Start_Wait>
	I2C_Write(PWR_MGMT_1);/* Write to power management register */
     344:	8b e6       	ldi	r24, 0x6B	; 107
     346:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Write(0x01);/* X axis gyroscope reference frequency */
     34a:	81 e0       	ldi	r24, 0x01	; 1
     34c:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Stop();
     350:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
	I2C_Start_Wait(0xD0);
     354:	80 ed       	ldi	r24, 0xD0	; 208
     356:	0e 94 07 01 	call	0x20e	; 0x20e <I2C_Start_Wait>
	I2C_Write(CONFIG);/* Write to Configuration register */
     35a:	8a e1       	ldi	r24, 0x1A	; 26
     35c:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Write(0x00);/* Fs = 8KHz */
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Stop();
     366:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
	I2C_Start_Wait(0xD0);
     36a:	80 ed       	ldi	r24, 0xD0	; 208
     36c:	0e 94 07 01 	call	0x20e	; 0x20e <I2C_Start_Wait>
	I2C_Write(GYRO_CONFIG);/* Write to Gyro configuration register */
     370:	8b e1       	ldi	r24, 0x1B	; 27
     372:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Write(0x18);/* Full scale range +/-2000 degree/C */
     376:	88 e1       	ldi	r24, 0x18	; 24
     378:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Stop();
     37c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
	I2C_Start_Wait(0xD0);
     380:	80 ed       	ldi	r24, 0xD0	; 208
     382:	0e 94 07 01 	call	0x20e	; 0x20e <I2C_Start_Wait>
	I2C_Write(INT_ENABLE);/* Write to interrupt enable register */
     386:	88 e3       	ldi	r24, 0x38	; 56
     388:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Write(0x01);
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Stop();
     392:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
     396:	08 95       	ret

00000398 <MPU_Start_Loc>:
	}
	
void MPU_Start_Loc(){
	I2C_Start_Wait(0xD0);/* I2C start with device write address */
     398:	80 ed       	ldi	r24, 0xD0	; 208
     39a:	0e 94 07 01 	call	0x20e	; 0x20e <I2C_Start_Wait>
	I2C_Write(ACCEL_XOUT_H);/* Write start location address from where to read */
     39e:	8b e3       	ldi	r24, 0x3B	; 59
     3a0:	0e 94 43 01 	call	0x286	; 0x286 <I2C_Write>
	I2C_Repeated_Start(0xD1);/* I2C start with device read address */
     3a4:	81 ed       	ldi	r24, 0xD1	; 209
     3a6:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <I2C_Repeated_Start>
     3aa:	08 95       	ret

000003ac <Read_RawValue>:
	}
		
void Read_RawValue(void){
     3ac:	cf 93       	push	r28
     3ae:	8f e3       	ldi	r24, 0x3F	; 63
     3b0:	9c e9       	ldi	r25, 0x9C	; 156
     3b2:	01 97       	sbiw	r24, 0x01	; 1
     3b4:	f1 f7       	brne	.-4      	; 0x3b2 <Read_RawValue+0x6>
     3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <Read_RawValue+0xc>
     3b8:	00 00       	nop
	_delay_ms(10);
	MPU_Start_Loc();/* Read Gyro values */
     3ba:	0e 94 cc 01 	call	0x398	; 0x398 <MPU_Start_Loc>
	Acc_x=(((int)I2C_Read_Ack()<<8)|(int)I2C_Read_Ack());//.. Read other registers
     3be:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     3c2:	c8 2f       	mov	r28, r24
     3c4:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     3c8:	6c 2f       	mov	r22, r28
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	76 2f       	mov	r23, r22
     3ce:	66 27       	eor	r22, r22
     3d0:	68 2b       	or	r22, r24
     3d2:	07 2e       	mov	r0, r23
     3d4:	00 0c       	add	r0, r0
     3d6:	88 0b       	sbc	r24, r24
     3d8:	99 0b       	sbc	r25, r25
     3da:	0e 94 31 04 	call	0x862	; 0x862 <__floatsisf>
     3de:	60 93 48 01 	sts	0x0148, r22	; 0x800148 <Acc_x>
     3e2:	70 93 49 01 	sts	0x0149, r23	; 0x800149 <Acc_x+0x1>
     3e6:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <Acc_x+0x2>
     3ea:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <Acc_x+0x3>
	Acc_y=(((int)I2C_Read_Ack()<<8)|(int)I2C_Read_Ack());
     3ee:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     3f2:	c8 2f       	mov	r28, r24
     3f4:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     3f8:	6c 2f       	mov	r22, r28
     3fa:	70 e0       	ldi	r23, 0x00	; 0
     3fc:	76 2f       	mov	r23, r22
     3fe:	66 27       	eor	r22, r22
     400:	68 2b       	or	r22, r24
     402:	07 2e       	mov	r0, r23
     404:	00 0c       	add	r0, r0
     406:	88 0b       	sbc	r24, r24
     408:	99 0b       	sbc	r25, r25
     40a:	0e 94 31 04 	call	0x862	; 0x862 <__floatsisf>
     40e:	60 93 40 01 	sts	0x0140, r22	; 0x800140 <Acc_y>
     412:	70 93 41 01 	sts	0x0141, r23	; 0x800141 <Acc_y+0x1>
     416:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <Acc_y+0x2>
     41a:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <Acc_y+0x3>
	Acc_z=(((int)I2C_Read_Ack()<<8)|(int)I2C_Read_Ack());
     41e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     422:	c8 2f       	mov	r28, r24
     424:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     428:	6c 2f       	mov	r22, r28
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	76 2f       	mov	r23, r22
     42e:	66 27       	eor	r22, r22
     430:	68 2b       	or	r22, r24
     432:	07 2e       	mov	r0, r23
     434:	00 0c       	add	r0, r0
     436:	88 0b       	sbc	r24, r24
     438:	99 0b       	sbc	r25, r25
     43a:	0e 94 31 04 	call	0x862	; 0x862 <__floatsisf>
     43e:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <__data_end>
     442:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <__data_end+0x1>
     446:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end+0x2>
     44a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x3>
	Gyro_x=(((int)I2C_Read_Ack()<<8)|(int)I2C_Read_Ack());
     44e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     452:	c8 2f       	mov	r28, r24
     454:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     458:	6c 2f       	mov	r22, r28
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	76 2f       	mov	r23, r22
     45e:	66 27       	eor	r22, r22
     460:	68 2b       	or	r22, r24
     462:	07 2e       	mov	r0, r23
     464:	00 0c       	add	r0, r0
     466:	88 0b       	sbc	r24, r24
     468:	99 0b       	sbc	r25, r25
     46a:	0e 94 31 04 	call	0x862	; 0x862 <__floatsisf>
     46e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <Gyro_x>
     472:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <Gyro_x+0x1>
     476:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <Gyro_x+0x2>
     47a:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <Gyro_x+0x3>
	Gyro_y=(((int)I2C_Read_Ack()<<8)|(int)I2C_Read_Ack());
     47e:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     482:	c8 2f       	mov	r28, r24
     484:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     488:	6c 2f       	mov	r22, r28
     48a:	70 e0       	ldi	r23, 0x00	; 0
     48c:	76 2f       	mov	r23, r22
     48e:	66 27       	eor	r22, r22
     490:	68 2b       	or	r22, r24
     492:	07 2e       	mov	r0, r23
     494:	00 0c       	add	r0, r0
     496:	88 0b       	sbc	r24, r24
     498:	99 0b       	sbc	r25, r25
     49a:	0e 94 31 04 	call	0x862	; 0x862 <__floatsisf>
     49e:	60 93 4c 01 	sts	0x014C, r22	; 0x80014c <Gyro_y>
     4a2:	70 93 4d 01 	sts	0x014D, r23	; 0x80014d <Gyro_y+0x1>
     4a6:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <Gyro_y+0x2>
     4aa:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <Gyro_y+0x3>
	Gyro_z=(((int)I2C_Read_Ack()<<8)|(int)I2C_Read_Nack());
     4ae:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <I2C_Read_Ack>
     4b2:	c8 2f       	mov	r28, r24
     4b4:	0e 94 65 01 	call	0x2ca	; 0x2ca <I2C_Read_Nack>
     4b8:	6c 2f       	mov	r22, r28
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	76 2f       	mov	r23, r22
     4be:	66 27       	eor	r22, r22
     4c0:	68 2b       	or	r22, r24
     4c2:	07 2e       	mov	r0, r23
     4c4:	00 0c       	add	r0, r0
     4c6:	88 0b       	sbc	r24, r24
     4c8:	99 0b       	sbc	r25, r25
     4ca:	0e 94 31 04 	call	0x862	; 0x862 <__floatsisf>
     4ce:	60 93 44 01 	sts	0x0144, r22	; 0x800144 <Gyro_z>
     4d2:	70 93 45 01 	sts	0x0145, r23	; 0x800145 <Gyro_z+0x1>
     4d6:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <Gyro_z+0x2>
     4da:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <Gyro_z+0x3>
	I2C_Stop();
     4de:	0e 94 fe 00 	call	0x1fc	; 0x1fc <I2C_Stop>
	}
     4e2:	cf 91       	pop	r28
     4e4:	08 95       	ret

000004e6 <main>:


int main(void){
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	e2 97       	sbiw	r28, 0x32	; 50
     4f0:	0f b6       	in	r0, 0x3f	; 63
     4f2:	f8 94       	cli
     4f4:	de bf       	out	0x3e, r29	; 62
     4f6:	0f be       	out	0x3f, r0	; 63
     4f8:	cd bf       	out	0x3d, r28	; 61
	char buffer[20], float_[10];
	float Xa,Ya,Za,Xg,Yg,Zg;
	
	I2C_Init();
     4fa:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <I2C_Init>
	init_MPU6050();
     4fe:	0e 94 8b 01 	call	0x316	; 0x316 <init_MPU6050>
	init_uart(9600);
     502:	80 e8       	ldi	r24, 0x80	; 128
     504:	95 e2       	ldi	r25, 0x25	; 37
     506:	0e 94 70 01 	call	0x2e0	; 0x2e0 <init_uart>
     50a:	2f ef       	ldi	r18, 0xFF	; 255
     50c:	82 e5       	ldi	r24, 0x52	; 82
     50e:	97 e0       	ldi	r25, 0x07	; 7
     510:	21 50       	subi	r18, 0x01	; 1
     512:	80 40       	sbci	r24, 0x00	; 0
     514:	90 40       	sbci	r25, 0x00	; 0
     516:	e1 f7       	brne	.-8      	; 0x510 <main+0x2a>
     518:	00 c0       	rjmp	.+0      	; 0x51a <main+0x34>
     51a:	00 00       	nop
		Za = Acc_z/16384.0;	
		Xg = Gyro_x/16.4;	
		Yg = Gyro_y/16.4;	
		Zg = Gyro_z/16.4;

		dtostrf( Xa, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     51c:	7e 01       	movw	r14, r28
     51e:	25 e1       	ldi	r18, 0x15	; 21
     520:	e2 0e       	add	r14, r18
     522:	f1 1c       	adc	r15, r1
		sprintf(buffer,"%s, Xa \n ",float_);
     524:	0f 2e       	mov	r0, r31
     526:	f0 e0       	ldi	r31, 0x00	; 0
     528:	2f 2e       	mov	r2, r31
     52a:	f1 e0       	ldi	r31, 0x01	; 1
     52c:	3f 2e       	mov	r3, r31
     52e:	f0 2d       	mov	r31, r0
     530:	ce 01       	movw	r24, r28
     532:	01 96       	adiw	r24, 0x01	; 1
     534:	6c 01       	movw	r12, r24
		dtostrf( Ya, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
		sprintf(buffer,"%s, Ya \n",float_);
		USART_SendString(buffer);
		
		dtostrf( Za, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
		sprintf(buffer,"%s, Za \n",float_);
     536:	0f 2e       	mov	r0, r31
     538:	f3 e1       	ldi	r31, 0x13	; 19
     53a:	4f 2e       	mov	r4, r31
     53c:	f1 e0       	ldi	r31, 0x01	; 1
     53e:	5f 2e       	mov	r5, r31
     540:	f0 2d       	mov	r31, r0
		USART_SendString(buffer);
		
		dtostrf( Xg, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
		sprintf(buffer,"%s, Xg \n",float_);
     542:	0f 2e       	mov	r0, r31
     544:	fc e1       	ldi	r31, 0x1C	; 28
     546:	6f 2e       	mov	r6, r31
     548:	f1 e0       	ldi	r31, 0x01	; 1
     54a:	7f 2e       	mov	r7, r31
     54c:	f0 2d       	mov	r31, r0
		USART_SendString(buffer);
		
		dtostrf( Yg, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
		sprintf(buffer,"%s, Yg \n",float_);
     54e:	0f 2e       	mov	r0, r31
     550:	f5 e2       	ldi	r31, 0x25	; 37
     552:	8f 2e       	mov	r8, r31
     554:	f1 e0       	ldi	r31, 0x01	; 1
     556:	9f 2e       	mov	r9, r31
     558:	f0 2d       	mov	r31, r0
		USART_SendString(buffer);
		
		dtostrf( Zg, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
		sprintf(buffer,"%s, Zg \n",float_);
     55a:	0f 2e       	mov	r0, r31
     55c:	fe e2       	ldi	r31, 0x2E	; 46
     55e:	af 2e       	mov	r10, r31
     560:	f1 e0       	ldi	r31, 0x01	; 1
     562:	bf 2e       	mov	r11, r31
     564:	f0 2d       	mov	r31, r0
     566:	9f ef       	ldi	r25, 0xFF	; 255
     568:	22 e5       	ldi	r18, 0x52	; 82
     56a:	87 e0       	ldi	r24, 0x07	; 7
     56c:	91 50       	subi	r25, 0x01	; 1
     56e:	20 40       	sbci	r18, 0x00	; 0
     570:	80 40       	sbci	r24, 0x00	; 0
     572:	e1 f7       	brne	.-8      	; 0x56c <main+0x86>
     574:	00 c0       	rjmp	.+0      	; 0x576 <main+0x90>
     576:	00 00       	nop
	init_MPU6050();
	init_uart(9600);
	_delay_ms(150);
	while(1){
		_delay_ms(150);
		Read_RawValue();
     578:	0e 94 d6 01 	call	0x3ac	; 0x3ac <Read_RawValue>
		Xa = Acc_x/16384.0;								/* Divide raw value by sensitivity scale factor to get real values */
		Ya = Acc_y/16384.0;	
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	40 e8       	ldi	r20, 0x80	; 128
     582:	58 e3       	ldi	r21, 0x38	; 56
     584:	60 91 40 01 	lds	r22, 0x0140	; 0x800140 <Acc_y>
     588:	70 91 41 01 	lds	r23, 0x0141	; 0x800141 <Acc_y+0x1>
     58c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <Acc_y+0x2>
     590:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <Acc_y+0x3>
     594:	0e 94 bd 04 	call	0x97a	; 0x97a <__mulsf3>
     598:	6f 8f       	std	Y+31, r22	; 0x1f
     59a:	78 a3       	std	Y+32, r23	; 0x20
     59c:	89 a3       	std	Y+33, r24	; 0x21
     59e:	9a a3       	std	Y+34, r25	; 0x22
		Za = Acc_z/16384.0;	
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	40 e8       	ldi	r20, 0x80	; 128
     5a6:	58 e3       	ldi	r21, 0x38	; 56
     5a8:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <__data_end>
     5ac:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <__data_end+0x1>
     5b0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end+0x2>
     5b4:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x3>
     5b8:	0e 94 bd 04 	call	0x97a	; 0x97a <__mulsf3>
     5bc:	6b a3       	std	Y+35, r22	; 0x23
     5be:	7c a3       	std	Y+36, r23	; 0x24
     5c0:	8d a3       	std	Y+37, r24	; 0x25
     5c2:	9e a3       	std	Y+38, r25	; 0x26
		Xg = Gyro_x/16.4;	
     5c4:	23 e3       	ldi	r18, 0x33	; 51
     5c6:	33 e3       	ldi	r19, 0x33	; 51
     5c8:	43 e8       	ldi	r20, 0x83	; 131
     5ca:	51 e4       	ldi	r21, 0x41	; 65
     5cc:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <Gyro_x>
     5d0:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <Gyro_x+0x1>
     5d4:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <Gyro_x+0x2>
     5d8:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <Gyro_x+0x3>
     5dc:	0e 94 bd 03 	call	0x77a	; 0x77a <__divsf3>
     5e0:	6f a3       	std	Y+39, r22	; 0x27
     5e2:	78 a7       	std	Y+40, r23	; 0x28
     5e4:	89 a7       	std	Y+41, r24	; 0x29
     5e6:	9a a7       	std	Y+42, r25	; 0x2a
		Yg = Gyro_y/16.4;	
     5e8:	23 e3       	ldi	r18, 0x33	; 51
     5ea:	33 e3       	ldi	r19, 0x33	; 51
     5ec:	43 e8       	ldi	r20, 0x83	; 131
     5ee:	51 e4       	ldi	r21, 0x41	; 65
     5f0:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <Gyro_y>
     5f4:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <Gyro_y+0x1>
     5f8:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <Gyro_y+0x2>
     5fc:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <Gyro_y+0x3>
     600:	0e 94 bd 03 	call	0x77a	; 0x77a <__divsf3>
     604:	6b a7       	std	Y+43, r22	; 0x2b
     606:	7c a7       	std	Y+44, r23	; 0x2c
     608:	8d a7       	std	Y+45, r24	; 0x2d
     60a:	9e a7       	std	Y+46, r25	; 0x2e
		Zg = Gyro_z/16.4;
     60c:	23 e3       	ldi	r18, 0x33	; 51
     60e:	33 e3       	ldi	r19, 0x33	; 51
     610:	43 e8       	ldi	r20, 0x83	; 131
     612:	51 e4       	ldi	r21, 0x41	; 65
     614:	60 91 44 01 	lds	r22, 0x0144	; 0x800144 <Gyro_z>
     618:	70 91 45 01 	lds	r23, 0x0145	; 0x800145 <Gyro_z+0x1>
     61c:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <Gyro_z+0x2>
     620:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <Gyro_z+0x3>
     624:	0e 94 bd 03 	call	0x77a	; 0x77a <__divsf3>
     628:	6f a7       	std	Y+47, r22	; 0x2f
     62a:	78 ab       	std	Y+48, r23	; 0x30
     62c:	89 ab       	std	Y+49, r24	; 0x31
     62e:	9a ab       	std	Y+50, r25	; 0x32

		dtostrf( Xa, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e8       	ldi	r20, 0x80	; 128
     636:	58 e3       	ldi	r21, 0x38	; 56
     638:	60 91 48 01 	lds	r22, 0x0148	; 0x800148 <Acc_x>
     63c:	70 91 49 01 	lds	r23, 0x0149	; 0x800149 <Acc_x+0x1>
     640:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <Acc_x+0x2>
     644:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <Acc_x+0x3>
     648:	0e 94 bd 04 	call	0x97a	; 0x97a <__mulsf3>
     64c:	87 01       	movw	r16, r14
     64e:	22 e0       	ldi	r18, 0x02	; 2
     650:	43 e0       	ldi	r20, 0x03	; 3
     652:	0e 94 00 09 	call	0x1200	; 0x1200 <dtostrf>
		sprintf(buffer,"%s, Xa \n ",float_);
     656:	ff 92       	push	r15
     658:	ef 92       	push	r14
     65a:	3f 92       	push	r3
     65c:	2f 92       	push	r2
     65e:	df 92       	push	r13
     660:	cf 92       	push	r12
     662:	0e 94 4a 0a 	call	0x1494	; 0x1494 <sprintf>
		USART_SendString(buffer);
     666:	c6 01       	movw	r24, r12
     668:	0e 94 ae 03 	call	0x75c	; 0x75c <USART_SendString>

		dtostrf( Ya, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     66c:	22 e0       	ldi	r18, 0x02	; 2
     66e:	43 e0       	ldi	r20, 0x03	; 3
     670:	6f 8d       	ldd	r22, Y+31	; 0x1f
     672:	78 a1       	ldd	r23, Y+32	; 0x20
     674:	89 a1       	ldd	r24, Y+33	; 0x21
     676:	9a a1       	ldd	r25, Y+34	; 0x22
     678:	0e 94 00 09 	call	0x1200	; 0x1200 <dtostrf>
		sprintf(buffer,"%s, Ya \n",float_);
     67c:	ff 92       	push	r15
     67e:	ef 92       	push	r14
     680:	8a e0       	ldi	r24, 0x0A	; 10
     682:	91 e0       	ldi	r25, 0x01	; 1
     684:	9f 93       	push	r25
     686:	8f 93       	push	r24
     688:	df 92       	push	r13
     68a:	cf 92       	push	r12
     68c:	0e 94 4a 0a 	call	0x1494	; 0x1494 <sprintf>
		USART_SendString(buffer);
     690:	c6 01       	movw	r24, r12
     692:	0e 94 ae 03 	call	0x75c	; 0x75c <USART_SendString>
		
		dtostrf( Za, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     696:	22 e0       	ldi	r18, 0x02	; 2
     698:	43 e0       	ldi	r20, 0x03	; 3
     69a:	6b a1       	ldd	r22, Y+35	; 0x23
     69c:	7c a1       	ldd	r23, Y+36	; 0x24
     69e:	8d a1       	ldd	r24, Y+37	; 0x25
     6a0:	9e a1       	ldd	r25, Y+38	; 0x26
     6a2:	0e 94 00 09 	call	0x1200	; 0x1200 <dtostrf>
		sprintf(buffer,"%s, Za \n",float_);
     6a6:	ff 92       	push	r15
     6a8:	ef 92       	push	r14
     6aa:	5f 92       	push	r5
     6ac:	4f 92       	push	r4
     6ae:	df 92       	push	r13
     6b0:	cf 92       	push	r12
     6b2:	0e 94 4a 0a 	call	0x1494	; 0x1494 <sprintf>
		USART_SendString(buffer);
     6b6:	c6 01       	movw	r24, r12
     6b8:	0e 94 ae 03 	call	0x75c	; 0x75c <USART_SendString>
		
		dtostrf( Xg, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     6bc:	22 e0       	ldi	r18, 0x02	; 2
     6be:	43 e0       	ldi	r20, 0x03	; 3
     6c0:	6f a1       	ldd	r22, Y+39	; 0x27
     6c2:	78 a5       	ldd	r23, Y+40	; 0x28
     6c4:	89 a5       	ldd	r24, Y+41	; 0x29
     6c6:	9a a5       	ldd	r25, Y+42	; 0x2a
     6c8:	0e 94 00 09 	call	0x1200	; 0x1200 <dtostrf>
		sprintf(buffer,"%s, Xg \n",float_);
     6cc:	ff 92       	push	r15
     6ce:	ef 92       	push	r14
     6d0:	7f 92       	push	r7
     6d2:	6f 92       	push	r6
     6d4:	df 92       	push	r13
     6d6:	cf 92       	push	r12
     6d8:	0e 94 4a 0a 	call	0x1494	; 0x1494 <sprintf>
		USART_SendString(buffer);
     6dc:	c6 01       	movw	r24, r12
     6de:	0e 94 ae 03 	call	0x75c	; 0x75c <USART_SendString>
		
		dtostrf( Yg, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     6e2:	22 e0       	ldi	r18, 0x02	; 2
     6e4:	43 e0       	ldi	r20, 0x03	; 3
     6e6:	6b a5       	ldd	r22, Y+43	; 0x2b
     6e8:	7c a5       	ldd	r23, Y+44	; 0x2c
     6ea:	8d a5       	ldd	r24, Y+45	; 0x2d
     6ec:	9e a5       	ldd	r25, Y+46	; 0x2e
     6ee:	0e 94 00 09 	call	0x1200	; 0x1200 <dtostrf>
		sprintf(buffer,"%s, Yg \n",float_);
     6f2:	ff 92       	push	r15
     6f4:	ef 92       	push	r14
     6f6:	9f 92       	push	r9
     6f8:	8f 92       	push	r8
     6fa:	df 92       	push	r13
     6fc:	cf 92       	push	r12
     6fe:	0e 94 4a 0a 	call	0x1494	; 0x1494 <sprintf>
		USART_SendString(buffer);
     702:	c6 01       	movw	r24, r12
     704:	0e 94 ae 03 	call	0x75c	; 0x75c <USART_SendString>
		
		dtostrf( Zg, 3, 2, float_ );					/* Take values in buffer to send all parameters over USART */
     708:	22 e0       	ldi	r18, 0x02	; 2
     70a:	43 e0       	ldi	r20, 0x03	; 3
     70c:	6f a5       	ldd	r22, Y+47	; 0x2f
     70e:	78 a9       	ldd	r23, Y+48	; 0x30
     710:	89 a9       	ldd	r24, Y+49	; 0x31
     712:	9a a9       	ldd	r25, Y+50	; 0x32
     714:	0e 94 00 09 	call	0x1200	; 0x1200 <dtostrf>
		sprintf(buffer,"%s, Zg \n",float_);
     718:	ff 92       	push	r15
     71a:	ef 92       	push	r14
     71c:	bf 92       	push	r11
     71e:	af 92       	push	r10
     720:	df 92       	push	r13
     722:	cf 92       	push	r12
     724:	0e 94 4a 0a 	call	0x1494	; 0x1494 <sprintf>
		USART_SendString(buffer);
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	f8 94       	cli
     72c:	de bf       	out	0x3e, r29	; 62
     72e:	0f be       	out	0x3f, r0	; 63
     730:	cd bf       	out	0x3d, r28	; 61
     732:	c6 01       	movw	r24, r12
     734:	0e 94 ae 03 	call	0x75c	; 0x75c <USART_SendString>
     738:	9f ef       	ldi	r25, 0xFF	; 255
     73a:	23 ed       	ldi	r18, 0xD3	; 211
     73c:	80 e3       	ldi	r24, 0x30	; 48
     73e:	91 50       	subi	r25, 0x01	; 1
     740:	20 40       	sbci	r18, 0x00	; 0
     742:	80 40       	sbci	r24, 0x00	; 0
     744:	e1 f7       	brne	.-8      	; 0x73e <main+0x258>
     746:	00 c0       	rjmp	.+0      	; 0x748 <main+0x262>
     748:	00 00       	nop
     74a:	0d cf       	rjmp	.-486    	; 0x566 <main+0x80>

0000074c <USART_TxChar>:
	return(UDR0);									/* Get and return received data */ 
}

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;										/* Write data to be transmitting in UDR */
     74c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
     750:	e0 ec       	ldi	r30, 0xC0	; 192
     752:	f0 e0       	ldi	r31, 0x00	; 0
     754:	80 81       	ld	r24, Z
     756:	85 ff       	sbrs	r24, 5
     758:	fd cf       	rjmp	.-6      	; 0x754 <USART_TxChar+0x8>
}
     75a:	08 95       	ret

0000075c <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
     75c:	cf 93       	push	r28
     75e:	df 93       	push	r29
     760:	ec 01       	movw	r28, r24
	int i=0;																	
	while (str[i]!=0)
     762:	88 81       	ld	r24, Y
     764:	88 23       	and	r24, r24
     766:	31 f0       	breq	.+12     	; 0x774 <USART_SendString+0x18>
     768:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     76a:	0e 94 a6 03 	call	0x74c	; 0x74c <USART_TxChar>
}

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
	int i=0;																	
	while (str[i]!=0)
     76e:	89 91       	ld	r24, Y+
     770:	81 11       	cpse	r24, r1
     772:	fb cf       	rjmp	.-10     	; 0x76a <USART_SendString+0xe>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
     774:	df 91       	pop	r29
     776:	cf 91       	pop	r28
     778:	08 95       	ret

0000077a <__divsf3>:
     77a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__divsf3x>
     77e:	0c 94 83 04 	jmp	0x906	; 0x906 <__fp_round>
     782:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <__fp_pscB>
     786:	58 f0       	brcs	.+22     	; 0x79e <__divsf3+0x24>
     788:	0e 94 75 04 	call	0x8ea	; 0x8ea <__fp_pscA>
     78c:	40 f0       	brcs	.+16     	; 0x79e <__divsf3+0x24>
     78e:	29 f4       	brne	.+10     	; 0x79a <__divsf3+0x20>
     790:	5f 3f       	cpi	r21, 0xFF	; 255
     792:	29 f0       	breq	.+10     	; 0x79e <__divsf3+0x24>
     794:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_inf>
     798:	51 11       	cpse	r21, r1
     79a:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__fp_szero>
     79e:	0c 94 72 04 	jmp	0x8e4	; 0x8e4 <__fp_nan>

000007a2 <__divsf3x>:
     7a2:	0e 94 94 04 	call	0x928	; 0x928 <__fp_split3>
     7a6:	68 f3       	brcs	.-38     	; 0x782 <__divsf3+0x8>

000007a8 <__divsf3_pse>:
     7a8:	99 23       	and	r25, r25
     7aa:	b1 f3       	breq	.-20     	; 0x798 <__divsf3+0x1e>
     7ac:	55 23       	and	r21, r21
     7ae:	91 f3       	breq	.-28     	; 0x794 <__divsf3+0x1a>
     7b0:	95 1b       	sub	r25, r21
     7b2:	55 0b       	sbc	r21, r21
     7b4:	bb 27       	eor	r27, r27
     7b6:	aa 27       	eor	r26, r26
     7b8:	62 17       	cp	r22, r18
     7ba:	73 07       	cpc	r23, r19
     7bc:	84 07       	cpc	r24, r20
     7be:	38 f0       	brcs	.+14     	; 0x7ce <__divsf3_pse+0x26>
     7c0:	9f 5f       	subi	r25, 0xFF	; 255
     7c2:	5f 4f       	sbci	r21, 0xFF	; 255
     7c4:	22 0f       	add	r18, r18
     7c6:	33 1f       	adc	r19, r19
     7c8:	44 1f       	adc	r20, r20
     7ca:	aa 1f       	adc	r26, r26
     7cc:	a9 f3       	breq	.-22     	; 0x7b8 <__divsf3_pse+0x10>
     7ce:	35 d0       	rcall	.+106    	; 0x83a <__divsf3_pse+0x92>
     7d0:	0e 2e       	mov	r0, r30
     7d2:	3a f0       	brmi	.+14     	; 0x7e2 <__divsf3_pse+0x3a>
     7d4:	e0 e8       	ldi	r30, 0x80	; 128
     7d6:	32 d0       	rcall	.+100    	; 0x83c <__divsf3_pse+0x94>
     7d8:	91 50       	subi	r25, 0x01	; 1
     7da:	50 40       	sbci	r21, 0x00	; 0
     7dc:	e6 95       	lsr	r30
     7de:	00 1c       	adc	r0, r0
     7e0:	ca f7       	brpl	.-14     	; 0x7d4 <__divsf3_pse+0x2c>
     7e2:	2b d0       	rcall	.+86     	; 0x83a <__divsf3_pse+0x92>
     7e4:	fe 2f       	mov	r31, r30
     7e6:	29 d0       	rcall	.+82     	; 0x83a <__divsf3_pse+0x92>
     7e8:	66 0f       	add	r22, r22
     7ea:	77 1f       	adc	r23, r23
     7ec:	88 1f       	adc	r24, r24
     7ee:	bb 1f       	adc	r27, r27
     7f0:	26 17       	cp	r18, r22
     7f2:	37 07       	cpc	r19, r23
     7f4:	48 07       	cpc	r20, r24
     7f6:	ab 07       	cpc	r26, r27
     7f8:	b0 e8       	ldi	r27, 0x80	; 128
     7fa:	09 f0       	breq	.+2      	; 0x7fe <__divsf3_pse+0x56>
     7fc:	bb 0b       	sbc	r27, r27
     7fe:	80 2d       	mov	r24, r0
     800:	bf 01       	movw	r22, r30
     802:	ff 27       	eor	r31, r31
     804:	93 58       	subi	r25, 0x83	; 131
     806:	5f 4f       	sbci	r21, 0xFF	; 255
     808:	3a f0       	brmi	.+14     	; 0x818 <__divsf3_pse+0x70>
     80a:	9e 3f       	cpi	r25, 0xFE	; 254
     80c:	51 05       	cpc	r21, r1
     80e:	78 f0       	brcs	.+30     	; 0x82e <__divsf3_pse+0x86>
     810:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_inf>
     814:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__fp_szero>
     818:	5f 3f       	cpi	r21, 0xFF	; 255
     81a:	e4 f3       	brlt	.-8      	; 0x814 <__divsf3_pse+0x6c>
     81c:	98 3e       	cpi	r25, 0xE8	; 232
     81e:	d4 f3       	brlt	.-12     	; 0x814 <__divsf3_pse+0x6c>
     820:	86 95       	lsr	r24
     822:	77 95       	ror	r23
     824:	67 95       	ror	r22
     826:	b7 95       	ror	r27
     828:	f7 95       	ror	r31
     82a:	9f 5f       	subi	r25, 0xFF	; 255
     82c:	c9 f7       	brne	.-14     	; 0x820 <__divsf3_pse+0x78>
     82e:	88 0f       	add	r24, r24
     830:	91 1d       	adc	r25, r1
     832:	96 95       	lsr	r25
     834:	87 95       	ror	r24
     836:	97 f9       	bld	r25, 7
     838:	08 95       	ret
     83a:	e1 e0       	ldi	r30, 0x01	; 1
     83c:	66 0f       	add	r22, r22
     83e:	77 1f       	adc	r23, r23
     840:	88 1f       	adc	r24, r24
     842:	bb 1f       	adc	r27, r27
     844:	62 17       	cp	r22, r18
     846:	73 07       	cpc	r23, r19
     848:	84 07       	cpc	r24, r20
     84a:	ba 07       	cpc	r27, r26
     84c:	20 f0       	brcs	.+8      	; 0x856 <__divsf3_pse+0xae>
     84e:	62 1b       	sub	r22, r18
     850:	73 0b       	sbc	r23, r19
     852:	84 0b       	sbc	r24, r20
     854:	ba 0b       	sbc	r27, r26
     856:	ee 1f       	adc	r30, r30
     858:	88 f7       	brcc	.-30     	; 0x83c <__divsf3_pse+0x94>
     85a:	e0 95       	com	r30
     85c:	08 95       	ret

0000085e <__floatunsisf>:
     85e:	e8 94       	clt
     860:	09 c0       	rjmp	.+18     	; 0x874 <__floatsisf+0x12>

00000862 <__floatsisf>:
     862:	97 fb       	bst	r25, 7
     864:	3e f4       	brtc	.+14     	; 0x874 <__floatsisf+0x12>
     866:	90 95       	com	r25
     868:	80 95       	com	r24
     86a:	70 95       	com	r23
     86c:	61 95       	neg	r22
     86e:	7f 4f       	sbci	r23, 0xFF	; 255
     870:	8f 4f       	sbci	r24, 0xFF	; 255
     872:	9f 4f       	sbci	r25, 0xFF	; 255
     874:	99 23       	and	r25, r25
     876:	a9 f0       	breq	.+42     	; 0x8a2 <__floatsisf+0x40>
     878:	f9 2f       	mov	r31, r25
     87a:	96 e9       	ldi	r25, 0x96	; 150
     87c:	bb 27       	eor	r27, r27
     87e:	93 95       	inc	r25
     880:	f6 95       	lsr	r31
     882:	87 95       	ror	r24
     884:	77 95       	ror	r23
     886:	67 95       	ror	r22
     888:	b7 95       	ror	r27
     88a:	f1 11       	cpse	r31, r1
     88c:	f8 cf       	rjmp	.-16     	; 0x87e <__floatsisf+0x1c>
     88e:	fa f4       	brpl	.+62     	; 0x8ce <__floatsisf+0x6c>
     890:	bb 0f       	add	r27, r27
     892:	11 f4       	brne	.+4      	; 0x898 <__floatsisf+0x36>
     894:	60 ff       	sbrs	r22, 0
     896:	1b c0       	rjmp	.+54     	; 0x8ce <__floatsisf+0x6c>
     898:	6f 5f       	subi	r22, 0xFF	; 255
     89a:	7f 4f       	sbci	r23, 0xFF	; 255
     89c:	8f 4f       	sbci	r24, 0xFF	; 255
     89e:	9f 4f       	sbci	r25, 0xFF	; 255
     8a0:	16 c0       	rjmp	.+44     	; 0x8ce <__floatsisf+0x6c>
     8a2:	88 23       	and	r24, r24
     8a4:	11 f0       	breq	.+4      	; 0x8aa <__floatsisf+0x48>
     8a6:	96 e9       	ldi	r25, 0x96	; 150
     8a8:	11 c0       	rjmp	.+34     	; 0x8cc <__floatsisf+0x6a>
     8aa:	77 23       	and	r23, r23
     8ac:	21 f0       	breq	.+8      	; 0x8b6 <__floatsisf+0x54>
     8ae:	9e e8       	ldi	r25, 0x8E	; 142
     8b0:	87 2f       	mov	r24, r23
     8b2:	76 2f       	mov	r23, r22
     8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <__floatsisf+0x5e>
     8b6:	66 23       	and	r22, r22
     8b8:	71 f0       	breq	.+28     	; 0x8d6 <__floatsisf+0x74>
     8ba:	96 e8       	ldi	r25, 0x86	; 134
     8bc:	86 2f       	mov	r24, r22
     8be:	70 e0       	ldi	r23, 0x00	; 0
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	2a f0       	brmi	.+10     	; 0x8ce <__floatsisf+0x6c>
     8c4:	9a 95       	dec	r25
     8c6:	66 0f       	add	r22, r22
     8c8:	77 1f       	adc	r23, r23
     8ca:	88 1f       	adc	r24, r24
     8cc:	da f7       	brpl	.-10     	; 0x8c4 <__floatsisf+0x62>
     8ce:	88 0f       	add	r24, r24
     8d0:	96 95       	lsr	r25
     8d2:	87 95       	ror	r24
     8d4:	97 f9       	bld	r25, 7
     8d6:	08 95       	ret

000008d8 <__fp_inf>:
     8d8:	97 f9       	bld	r25, 7
     8da:	9f 67       	ori	r25, 0x7F	; 127
     8dc:	80 e8       	ldi	r24, 0x80	; 128
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	08 95       	ret

000008e4 <__fp_nan>:
     8e4:	9f ef       	ldi	r25, 0xFF	; 255
     8e6:	80 ec       	ldi	r24, 0xC0	; 192
     8e8:	08 95       	ret

000008ea <__fp_pscA>:
     8ea:	00 24       	eor	r0, r0
     8ec:	0a 94       	dec	r0
     8ee:	16 16       	cp	r1, r22
     8f0:	17 06       	cpc	r1, r23
     8f2:	18 06       	cpc	r1, r24
     8f4:	09 06       	cpc	r0, r25
     8f6:	08 95       	ret

000008f8 <__fp_pscB>:
     8f8:	00 24       	eor	r0, r0
     8fa:	0a 94       	dec	r0
     8fc:	12 16       	cp	r1, r18
     8fe:	13 06       	cpc	r1, r19
     900:	14 06       	cpc	r1, r20
     902:	05 06       	cpc	r0, r21
     904:	08 95       	ret

00000906 <__fp_round>:
     906:	09 2e       	mov	r0, r25
     908:	03 94       	inc	r0
     90a:	00 0c       	add	r0, r0
     90c:	11 f4       	brne	.+4      	; 0x912 <__fp_round+0xc>
     90e:	88 23       	and	r24, r24
     910:	52 f0       	brmi	.+20     	; 0x926 <__fp_round+0x20>
     912:	bb 0f       	add	r27, r27
     914:	40 f4       	brcc	.+16     	; 0x926 <__fp_round+0x20>
     916:	bf 2b       	or	r27, r31
     918:	11 f4       	brne	.+4      	; 0x91e <__fp_round+0x18>
     91a:	60 ff       	sbrs	r22, 0
     91c:	04 c0       	rjmp	.+8      	; 0x926 <__fp_round+0x20>
     91e:	6f 5f       	subi	r22, 0xFF	; 255
     920:	7f 4f       	sbci	r23, 0xFF	; 255
     922:	8f 4f       	sbci	r24, 0xFF	; 255
     924:	9f 4f       	sbci	r25, 0xFF	; 255
     926:	08 95       	ret

00000928 <__fp_split3>:
     928:	57 fd       	sbrc	r21, 7
     92a:	90 58       	subi	r25, 0x80	; 128
     92c:	44 0f       	add	r20, r20
     92e:	55 1f       	adc	r21, r21
     930:	59 f0       	breq	.+22     	; 0x948 <__fp_splitA+0x10>
     932:	5f 3f       	cpi	r21, 0xFF	; 255
     934:	71 f0       	breq	.+28     	; 0x952 <__fp_splitA+0x1a>
     936:	47 95       	ror	r20

00000938 <__fp_splitA>:
     938:	88 0f       	add	r24, r24
     93a:	97 fb       	bst	r25, 7
     93c:	99 1f       	adc	r25, r25
     93e:	61 f0       	breq	.+24     	; 0x958 <__fp_splitA+0x20>
     940:	9f 3f       	cpi	r25, 0xFF	; 255
     942:	79 f0       	breq	.+30     	; 0x962 <__fp_splitA+0x2a>
     944:	87 95       	ror	r24
     946:	08 95       	ret
     948:	12 16       	cp	r1, r18
     94a:	13 06       	cpc	r1, r19
     94c:	14 06       	cpc	r1, r20
     94e:	55 1f       	adc	r21, r21
     950:	f2 cf       	rjmp	.-28     	; 0x936 <__fp_split3+0xe>
     952:	46 95       	lsr	r20
     954:	f1 df       	rcall	.-30     	; 0x938 <__fp_splitA>
     956:	08 c0       	rjmp	.+16     	; 0x968 <__fp_splitA+0x30>
     958:	16 16       	cp	r1, r22
     95a:	17 06       	cpc	r1, r23
     95c:	18 06       	cpc	r1, r24
     95e:	99 1f       	adc	r25, r25
     960:	f1 cf       	rjmp	.-30     	; 0x944 <__fp_splitA+0xc>
     962:	86 95       	lsr	r24
     964:	71 05       	cpc	r23, r1
     966:	61 05       	cpc	r22, r1
     968:	08 94       	sec
     96a:	08 95       	ret

0000096c <__fp_zero>:
     96c:	e8 94       	clt

0000096e <__fp_szero>:
     96e:	bb 27       	eor	r27, r27
     970:	66 27       	eor	r22, r22
     972:	77 27       	eor	r23, r23
     974:	cb 01       	movw	r24, r22
     976:	97 f9       	bld	r25, 7
     978:	08 95       	ret

0000097a <__mulsf3>:
     97a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__mulsf3x>
     97e:	0c 94 83 04 	jmp	0x906	; 0x906 <__fp_round>
     982:	0e 94 75 04 	call	0x8ea	; 0x8ea <__fp_pscA>
     986:	38 f0       	brcs	.+14     	; 0x996 <__mulsf3+0x1c>
     988:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <__fp_pscB>
     98c:	20 f0       	brcs	.+8      	; 0x996 <__mulsf3+0x1c>
     98e:	95 23       	and	r25, r21
     990:	11 f0       	breq	.+4      	; 0x996 <__mulsf3+0x1c>
     992:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_inf>
     996:	0c 94 72 04 	jmp	0x8e4	; 0x8e4 <__fp_nan>
     99a:	11 24       	eor	r1, r1
     99c:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__fp_szero>

000009a0 <__mulsf3x>:
     9a0:	0e 94 94 04 	call	0x928	; 0x928 <__fp_split3>
     9a4:	70 f3       	brcs	.-36     	; 0x982 <__mulsf3+0x8>

000009a6 <__mulsf3_pse>:
     9a6:	95 9f       	mul	r25, r21
     9a8:	c1 f3       	breq	.-16     	; 0x99a <__mulsf3+0x20>
     9aa:	95 0f       	add	r25, r21
     9ac:	50 e0       	ldi	r21, 0x00	; 0
     9ae:	55 1f       	adc	r21, r21
     9b0:	62 9f       	mul	r22, r18
     9b2:	f0 01       	movw	r30, r0
     9b4:	72 9f       	mul	r23, r18
     9b6:	bb 27       	eor	r27, r27
     9b8:	f0 0d       	add	r31, r0
     9ba:	b1 1d       	adc	r27, r1
     9bc:	63 9f       	mul	r22, r19
     9be:	aa 27       	eor	r26, r26
     9c0:	f0 0d       	add	r31, r0
     9c2:	b1 1d       	adc	r27, r1
     9c4:	aa 1f       	adc	r26, r26
     9c6:	64 9f       	mul	r22, r20
     9c8:	66 27       	eor	r22, r22
     9ca:	b0 0d       	add	r27, r0
     9cc:	a1 1d       	adc	r26, r1
     9ce:	66 1f       	adc	r22, r22
     9d0:	82 9f       	mul	r24, r18
     9d2:	22 27       	eor	r18, r18
     9d4:	b0 0d       	add	r27, r0
     9d6:	a1 1d       	adc	r26, r1
     9d8:	62 1f       	adc	r22, r18
     9da:	73 9f       	mul	r23, r19
     9dc:	b0 0d       	add	r27, r0
     9de:	a1 1d       	adc	r26, r1
     9e0:	62 1f       	adc	r22, r18
     9e2:	83 9f       	mul	r24, r19
     9e4:	a0 0d       	add	r26, r0
     9e6:	61 1d       	adc	r22, r1
     9e8:	22 1f       	adc	r18, r18
     9ea:	74 9f       	mul	r23, r20
     9ec:	33 27       	eor	r19, r19
     9ee:	a0 0d       	add	r26, r0
     9f0:	61 1d       	adc	r22, r1
     9f2:	23 1f       	adc	r18, r19
     9f4:	84 9f       	mul	r24, r20
     9f6:	60 0d       	add	r22, r0
     9f8:	21 1d       	adc	r18, r1
     9fa:	82 2f       	mov	r24, r18
     9fc:	76 2f       	mov	r23, r22
     9fe:	6a 2f       	mov	r22, r26
     a00:	11 24       	eor	r1, r1
     a02:	9f 57       	subi	r25, 0x7F	; 127
     a04:	50 40       	sbci	r21, 0x00	; 0
     a06:	9a f0       	brmi	.+38     	; 0xa2e <__mulsf3_pse+0x88>
     a08:	f1 f0       	breq	.+60     	; 0xa46 <__mulsf3_pse+0xa0>
     a0a:	88 23       	and	r24, r24
     a0c:	4a f0       	brmi	.+18     	; 0xa20 <__mulsf3_pse+0x7a>
     a0e:	ee 0f       	add	r30, r30
     a10:	ff 1f       	adc	r31, r31
     a12:	bb 1f       	adc	r27, r27
     a14:	66 1f       	adc	r22, r22
     a16:	77 1f       	adc	r23, r23
     a18:	88 1f       	adc	r24, r24
     a1a:	91 50       	subi	r25, 0x01	; 1
     a1c:	50 40       	sbci	r21, 0x00	; 0
     a1e:	a9 f7       	brne	.-22     	; 0xa0a <__mulsf3_pse+0x64>
     a20:	9e 3f       	cpi	r25, 0xFE	; 254
     a22:	51 05       	cpc	r21, r1
     a24:	80 f0       	brcs	.+32     	; 0xa46 <__mulsf3_pse+0xa0>
     a26:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_inf>
     a2a:	0c 94 b7 04 	jmp	0x96e	; 0x96e <__fp_szero>
     a2e:	5f 3f       	cpi	r21, 0xFF	; 255
     a30:	e4 f3       	brlt	.-8      	; 0xa2a <__mulsf3_pse+0x84>
     a32:	98 3e       	cpi	r25, 0xE8	; 232
     a34:	d4 f3       	brlt	.-12     	; 0xa2a <__mulsf3_pse+0x84>
     a36:	86 95       	lsr	r24
     a38:	77 95       	ror	r23
     a3a:	67 95       	ror	r22
     a3c:	b7 95       	ror	r27
     a3e:	f7 95       	ror	r31
     a40:	e7 95       	ror	r30
     a42:	9f 5f       	subi	r25, 0xFF	; 255
     a44:	c1 f7       	brne	.-16     	; 0xa36 <__mulsf3_pse+0x90>
     a46:	fe 2b       	or	r31, r30
     a48:	88 0f       	add	r24, r24
     a4a:	91 1d       	adc	r25, r1
     a4c:	96 95       	lsr	r25
     a4e:	87 95       	ror	r24
     a50:	97 f9       	bld	r25, 7
     a52:	08 95       	ret

00000a54 <vfprintf>:
     a54:	a0 e1       	ldi	r26, 0x10	; 16
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	e0 e3       	ldi	r30, 0x30	; 48
     a5a:	f5 e0       	ldi	r31, 0x05	; 5
     a5c:	0c 94 c9 08 	jmp	0x1192	; 0x1192 <__prologue_saves__>
     a60:	7c 01       	movw	r14, r24
     a62:	1b 01       	movw	r2, r22
     a64:	6a 01       	movw	r12, r20
     a66:	fc 01       	movw	r30, r24
     a68:	17 82       	std	Z+7, r1	; 0x07
     a6a:	16 82       	std	Z+6, r1	; 0x06
     a6c:	83 81       	ldd	r24, Z+3	; 0x03
     a6e:	81 ff       	sbrs	r24, 1
     a70:	44 c3       	rjmp	.+1672   	; 0x10fa <vfprintf+0x6a6>
     a72:	9e 01       	movw	r18, r28
     a74:	2f 5f       	subi	r18, 0xFF	; 255
     a76:	3f 4f       	sbci	r19, 0xFF	; 255
     a78:	39 01       	movw	r6, r18
     a7a:	f7 01       	movw	r30, r14
     a7c:	93 81       	ldd	r25, Z+3	; 0x03
     a7e:	f1 01       	movw	r30, r2
     a80:	93 fd       	sbrc	r25, 3
     a82:	85 91       	lpm	r24, Z+
     a84:	93 ff       	sbrs	r25, 3
     a86:	81 91       	ld	r24, Z+
     a88:	1f 01       	movw	r2, r30
     a8a:	88 23       	and	r24, r24
     a8c:	09 f4       	brne	.+2      	; 0xa90 <vfprintf+0x3c>
     a8e:	31 c3       	rjmp	.+1634   	; 0x10f2 <vfprintf+0x69e>
     a90:	85 32       	cpi	r24, 0x25	; 37
     a92:	39 f4       	brne	.+14     	; 0xaa2 <vfprintf+0x4e>
     a94:	93 fd       	sbrc	r25, 3
     a96:	85 91       	lpm	r24, Z+
     a98:	93 ff       	sbrs	r25, 3
     a9a:	81 91       	ld	r24, Z+
     a9c:	1f 01       	movw	r2, r30
     a9e:	85 32       	cpi	r24, 0x25	; 37
     aa0:	39 f4       	brne	.+14     	; 0xab0 <vfprintf+0x5c>
     aa2:	b7 01       	movw	r22, r14
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     aaa:	56 01       	movw	r10, r12
     aac:	65 01       	movw	r12, r10
     aae:	e5 cf       	rjmp	.-54     	; 0xa7a <vfprintf+0x26>
     ab0:	10 e0       	ldi	r17, 0x00	; 0
     ab2:	51 2c       	mov	r5, r1
     ab4:	91 2c       	mov	r9, r1
     ab6:	ff e1       	ldi	r31, 0x1F	; 31
     ab8:	f9 15       	cp	r31, r9
     aba:	d8 f0       	brcs	.+54     	; 0xaf2 <vfprintf+0x9e>
     abc:	8b 32       	cpi	r24, 0x2B	; 43
     abe:	79 f0       	breq	.+30     	; 0xade <vfprintf+0x8a>
     ac0:	38 f4       	brcc	.+14     	; 0xad0 <vfprintf+0x7c>
     ac2:	80 32       	cpi	r24, 0x20	; 32
     ac4:	79 f0       	breq	.+30     	; 0xae4 <vfprintf+0x90>
     ac6:	83 32       	cpi	r24, 0x23	; 35
     ac8:	a1 f4       	brne	.+40     	; 0xaf2 <vfprintf+0x9e>
     aca:	f9 2d       	mov	r31, r9
     acc:	f0 61       	ori	r31, 0x10	; 16
     ace:	2e c0       	rjmp	.+92     	; 0xb2c <vfprintf+0xd8>
     ad0:	8d 32       	cpi	r24, 0x2D	; 45
     ad2:	61 f0       	breq	.+24     	; 0xaec <vfprintf+0x98>
     ad4:	80 33       	cpi	r24, 0x30	; 48
     ad6:	69 f4       	brne	.+26     	; 0xaf2 <vfprintf+0x9e>
     ad8:	29 2d       	mov	r18, r9
     ada:	21 60       	ori	r18, 0x01	; 1
     adc:	2d c0       	rjmp	.+90     	; 0xb38 <vfprintf+0xe4>
     ade:	39 2d       	mov	r19, r9
     ae0:	32 60       	ori	r19, 0x02	; 2
     ae2:	93 2e       	mov	r9, r19
     ae4:	89 2d       	mov	r24, r9
     ae6:	84 60       	ori	r24, 0x04	; 4
     ae8:	98 2e       	mov	r9, r24
     aea:	2a c0       	rjmp	.+84     	; 0xb40 <vfprintf+0xec>
     aec:	e9 2d       	mov	r30, r9
     aee:	e8 60       	ori	r30, 0x08	; 8
     af0:	15 c0       	rjmp	.+42     	; 0xb1c <vfprintf+0xc8>
     af2:	97 fc       	sbrc	r9, 7
     af4:	2d c0       	rjmp	.+90     	; 0xb50 <vfprintf+0xfc>
     af6:	20 ed       	ldi	r18, 0xD0	; 208
     af8:	28 0f       	add	r18, r24
     afa:	2a 30       	cpi	r18, 0x0A	; 10
     afc:	88 f4       	brcc	.+34     	; 0xb20 <vfprintf+0xcc>
     afe:	96 fe       	sbrs	r9, 6
     b00:	06 c0       	rjmp	.+12     	; 0xb0e <vfprintf+0xba>
     b02:	3a e0       	ldi	r19, 0x0A	; 10
     b04:	13 9f       	mul	r17, r19
     b06:	20 0d       	add	r18, r0
     b08:	11 24       	eor	r1, r1
     b0a:	12 2f       	mov	r17, r18
     b0c:	19 c0       	rjmp	.+50     	; 0xb40 <vfprintf+0xec>
     b0e:	8a e0       	ldi	r24, 0x0A	; 10
     b10:	58 9e       	mul	r5, r24
     b12:	20 0d       	add	r18, r0
     b14:	11 24       	eor	r1, r1
     b16:	52 2e       	mov	r5, r18
     b18:	e9 2d       	mov	r30, r9
     b1a:	e0 62       	ori	r30, 0x20	; 32
     b1c:	9e 2e       	mov	r9, r30
     b1e:	10 c0       	rjmp	.+32     	; 0xb40 <vfprintf+0xec>
     b20:	8e 32       	cpi	r24, 0x2E	; 46
     b22:	31 f4       	brne	.+12     	; 0xb30 <vfprintf+0xdc>
     b24:	96 fc       	sbrc	r9, 6
     b26:	e5 c2       	rjmp	.+1482   	; 0x10f2 <vfprintf+0x69e>
     b28:	f9 2d       	mov	r31, r9
     b2a:	f0 64       	ori	r31, 0x40	; 64
     b2c:	9f 2e       	mov	r9, r31
     b2e:	08 c0       	rjmp	.+16     	; 0xb40 <vfprintf+0xec>
     b30:	8c 36       	cpi	r24, 0x6C	; 108
     b32:	21 f4       	brne	.+8      	; 0xb3c <vfprintf+0xe8>
     b34:	29 2d       	mov	r18, r9
     b36:	20 68       	ori	r18, 0x80	; 128
     b38:	92 2e       	mov	r9, r18
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <vfprintf+0xec>
     b3c:	88 36       	cpi	r24, 0x68	; 104
     b3e:	41 f4       	brne	.+16     	; 0xb50 <vfprintf+0xfc>
     b40:	f1 01       	movw	r30, r2
     b42:	93 fd       	sbrc	r25, 3
     b44:	85 91       	lpm	r24, Z+
     b46:	93 ff       	sbrs	r25, 3
     b48:	81 91       	ld	r24, Z+
     b4a:	1f 01       	movw	r2, r30
     b4c:	81 11       	cpse	r24, r1
     b4e:	b3 cf       	rjmp	.-154    	; 0xab6 <vfprintf+0x62>
     b50:	9b eb       	ldi	r25, 0xBB	; 187
     b52:	98 0f       	add	r25, r24
     b54:	93 30       	cpi	r25, 0x03	; 3
     b56:	20 f4       	brcc	.+8      	; 0xb60 <vfprintf+0x10c>
     b58:	99 2d       	mov	r25, r9
     b5a:	90 61       	ori	r25, 0x10	; 16
     b5c:	80 5e       	subi	r24, 0xE0	; 224
     b5e:	07 c0       	rjmp	.+14     	; 0xb6e <vfprintf+0x11a>
     b60:	9b e9       	ldi	r25, 0x9B	; 155
     b62:	98 0f       	add	r25, r24
     b64:	93 30       	cpi	r25, 0x03	; 3
     b66:	08 f0       	brcs	.+2      	; 0xb6a <vfprintf+0x116>
     b68:	66 c1       	rjmp	.+716    	; 0xe36 <vfprintf+0x3e2>
     b6a:	99 2d       	mov	r25, r9
     b6c:	9f 7e       	andi	r25, 0xEF	; 239
     b6e:	96 ff       	sbrs	r25, 6
     b70:	16 e0       	ldi	r17, 0x06	; 6
     b72:	9f 73       	andi	r25, 0x3F	; 63
     b74:	99 2e       	mov	r9, r25
     b76:	85 36       	cpi	r24, 0x65	; 101
     b78:	19 f4       	brne	.+6      	; 0xb80 <vfprintf+0x12c>
     b7a:	90 64       	ori	r25, 0x40	; 64
     b7c:	99 2e       	mov	r9, r25
     b7e:	08 c0       	rjmp	.+16     	; 0xb90 <vfprintf+0x13c>
     b80:	86 36       	cpi	r24, 0x66	; 102
     b82:	21 f4       	brne	.+8      	; 0xb8c <vfprintf+0x138>
     b84:	39 2f       	mov	r19, r25
     b86:	30 68       	ori	r19, 0x80	; 128
     b88:	93 2e       	mov	r9, r19
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <vfprintf+0x13c>
     b8c:	11 11       	cpse	r17, r1
     b8e:	11 50       	subi	r17, 0x01	; 1
     b90:	97 fe       	sbrs	r9, 7
     b92:	07 c0       	rjmp	.+14     	; 0xba2 <vfprintf+0x14e>
     b94:	1c 33       	cpi	r17, 0x3C	; 60
     b96:	50 f4       	brcc	.+20     	; 0xbac <vfprintf+0x158>
     b98:	44 24       	eor	r4, r4
     b9a:	43 94       	inc	r4
     b9c:	41 0e       	add	r4, r17
     b9e:	27 e0       	ldi	r18, 0x07	; 7
     ba0:	0b c0       	rjmp	.+22     	; 0xbb8 <vfprintf+0x164>
     ba2:	18 30       	cpi	r17, 0x08	; 8
     ba4:	38 f0       	brcs	.+14     	; 0xbb4 <vfprintf+0x160>
     ba6:	27 e0       	ldi	r18, 0x07	; 7
     ba8:	17 e0       	ldi	r17, 0x07	; 7
     baa:	05 c0       	rjmp	.+10     	; 0xbb6 <vfprintf+0x162>
     bac:	27 e0       	ldi	r18, 0x07	; 7
     bae:	9c e3       	ldi	r25, 0x3C	; 60
     bb0:	49 2e       	mov	r4, r25
     bb2:	02 c0       	rjmp	.+4      	; 0xbb8 <vfprintf+0x164>
     bb4:	21 2f       	mov	r18, r17
     bb6:	41 2c       	mov	r4, r1
     bb8:	56 01       	movw	r10, r12
     bba:	84 e0       	ldi	r24, 0x04	; 4
     bbc:	a8 0e       	add	r10, r24
     bbe:	b1 1c       	adc	r11, r1
     bc0:	f6 01       	movw	r30, r12
     bc2:	60 81       	ld	r22, Z
     bc4:	71 81       	ldd	r23, Z+1	; 0x01
     bc6:	82 81       	ldd	r24, Z+2	; 0x02
     bc8:	93 81       	ldd	r25, Z+3	; 0x03
     bca:	04 2d       	mov	r16, r4
     bcc:	a3 01       	movw	r20, r6
     bce:	0e 94 20 09 	call	0x1240	; 0x1240 <__ftoa_engine>
     bd2:	6c 01       	movw	r12, r24
     bd4:	f9 81       	ldd	r31, Y+1	; 0x01
     bd6:	fc 87       	std	Y+12, r31	; 0x0c
     bd8:	f0 ff       	sbrs	r31, 0
     bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x18c>
     bdc:	f3 ff       	sbrs	r31, 3
     bde:	06 c0       	rjmp	.+12     	; 0xbec <vfprintf+0x198>
     be0:	91 fc       	sbrc	r9, 1
     be2:	06 c0       	rjmp	.+12     	; 0xbf0 <vfprintf+0x19c>
     be4:	92 fe       	sbrs	r9, 2
     be6:	06 c0       	rjmp	.+12     	; 0xbf4 <vfprintf+0x1a0>
     be8:	00 e2       	ldi	r16, 0x20	; 32
     bea:	05 c0       	rjmp	.+10     	; 0xbf6 <vfprintf+0x1a2>
     bec:	0d e2       	ldi	r16, 0x2D	; 45
     bee:	03 c0       	rjmp	.+6      	; 0xbf6 <vfprintf+0x1a2>
     bf0:	0b e2       	ldi	r16, 0x2B	; 43
     bf2:	01 c0       	rjmp	.+2      	; 0xbf6 <vfprintf+0x1a2>
     bf4:	00 e0       	ldi	r16, 0x00	; 0
     bf6:	8c 85       	ldd	r24, Y+12	; 0x0c
     bf8:	8c 70       	andi	r24, 0x0C	; 12
     bfa:	19 f0       	breq	.+6      	; 0xc02 <vfprintf+0x1ae>
     bfc:	01 11       	cpse	r16, r1
     bfe:	5a c2       	rjmp	.+1204   	; 0x10b4 <vfprintf+0x660>
     c00:	9b c2       	rjmp	.+1334   	; 0x1138 <vfprintf+0x6e4>
     c02:	97 fe       	sbrs	r9, 7
     c04:	10 c0       	rjmp	.+32     	; 0xc26 <vfprintf+0x1d2>
     c06:	4c 0c       	add	r4, r12
     c08:	fc 85       	ldd	r31, Y+12	; 0x0c
     c0a:	f4 ff       	sbrs	r31, 4
     c0c:	04 c0       	rjmp	.+8      	; 0xc16 <vfprintf+0x1c2>
     c0e:	8a 81       	ldd	r24, Y+2	; 0x02
     c10:	81 33       	cpi	r24, 0x31	; 49
     c12:	09 f4       	brne	.+2      	; 0xc16 <vfprintf+0x1c2>
     c14:	4a 94       	dec	r4
     c16:	14 14       	cp	r1, r4
     c18:	74 f5       	brge	.+92     	; 0xc76 <vfprintf+0x222>
     c1a:	28 e0       	ldi	r18, 0x08	; 8
     c1c:	24 15       	cp	r18, r4
     c1e:	78 f5       	brcc	.+94     	; 0xc7e <vfprintf+0x22a>
     c20:	88 e0       	ldi	r24, 0x08	; 8
     c22:	48 2e       	mov	r4, r24
     c24:	2c c0       	rjmp	.+88     	; 0xc7e <vfprintf+0x22a>
     c26:	96 fc       	sbrc	r9, 6
     c28:	2a c0       	rjmp	.+84     	; 0xc7e <vfprintf+0x22a>
     c2a:	81 2f       	mov	r24, r17
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	8c 15       	cp	r24, r12
     c30:	9d 05       	cpc	r25, r13
     c32:	9c f0       	brlt	.+38     	; 0xc5a <vfprintf+0x206>
     c34:	3c ef       	ldi	r19, 0xFC	; 252
     c36:	c3 16       	cp	r12, r19
     c38:	3f ef       	ldi	r19, 0xFF	; 255
     c3a:	d3 06       	cpc	r13, r19
     c3c:	74 f0       	brlt	.+28     	; 0xc5a <vfprintf+0x206>
     c3e:	89 2d       	mov	r24, r9
     c40:	80 68       	ori	r24, 0x80	; 128
     c42:	98 2e       	mov	r9, r24
     c44:	0a c0       	rjmp	.+20     	; 0xc5a <vfprintf+0x206>
     c46:	e2 e0       	ldi	r30, 0x02	; 2
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	ec 0f       	add	r30, r28
     c4c:	fd 1f       	adc	r31, r29
     c4e:	e1 0f       	add	r30, r17
     c50:	f1 1d       	adc	r31, r1
     c52:	80 81       	ld	r24, Z
     c54:	80 33       	cpi	r24, 0x30	; 48
     c56:	19 f4       	brne	.+6      	; 0xc5e <vfprintf+0x20a>
     c58:	11 50       	subi	r17, 0x01	; 1
     c5a:	11 11       	cpse	r17, r1
     c5c:	f4 cf       	rjmp	.-24     	; 0xc46 <vfprintf+0x1f2>
     c5e:	97 fe       	sbrs	r9, 7
     c60:	0e c0       	rjmp	.+28     	; 0xc7e <vfprintf+0x22a>
     c62:	44 24       	eor	r4, r4
     c64:	43 94       	inc	r4
     c66:	41 0e       	add	r4, r17
     c68:	81 2f       	mov	r24, r17
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	c8 16       	cp	r12, r24
     c6e:	d9 06       	cpc	r13, r25
     c70:	2c f4       	brge	.+10     	; 0xc7c <vfprintf+0x228>
     c72:	1c 19       	sub	r17, r12
     c74:	04 c0       	rjmp	.+8      	; 0xc7e <vfprintf+0x22a>
     c76:	44 24       	eor	r4, r4
     c78:	43 94       	inc	r4
     c7a:	01 c0       	rjmp	.+2      	; 0xc7e <vfprintf+0x22a>
     c7c:	10 e0       	ldi	r17, 0x00	; 0
     c7e:	97 fe       	sbrs	r9, 7
     c80:	06 c0       	rjmp	.+12     	; 0xc8e <vfprintf+0x23a>
     c82:	1c 14       	cp	r1, r12
     c84:	1d 04       	cpc	r1, r13
     c86:	34 f4       	brge	.+12     	; 0xc94 <vfprintf+0x240>
     c88:	c6 01       	movw	r24, r12
     c8a:	01 96       	adiw	r24, 0x01	; 1
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <vfprintf+0x244>
     c8e:	85 e0       	ldi	r24, 0x05	; 5
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <vfprintf+0x244>
     c94:	81 e0       	ldi	r24, 0x01	; 1
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	01 11       	cpse	r16, r1
     c9a:	01 96       	adiw	r24, 0x01	; 1
     c9c:	11 23       	and	r17, r17
     c9e:	31 f0       	breq	.+12     	; 0xcac <vfprintf+0x258>
     ca0:	21 2f       	mov	r18, r17
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	2f 5f       	subi	r18, 0xFF	; 255
     ca6:	3f 4f       	sbci	r19, 0xFF	; 255
     ca8:	82 0f       	add	r24, r18
     caa:	93 1f       	adc	r25, r19
     cac:	25 2d       	mov	r18, r5
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	82 17       	cp	r24, r18
     cb2:	93 07       	cpc	r25, r19
     cb4:	14 f4       	brge	.+4      	; 0xcba <vfprintf+0x266>
     cb6:	58 1a       	sub	r5, r24
     cb8:	01 c0       	rjmp	.+2      	; 0xcbc <vfprintf+0x268>
     cba:	51 2c       	mov	r5, r1
     cbc:	89 2d       	mov	r24, r9
     cbe:	89 70       	andi	r24, 0x09	; 9
     cc0:	49 f4       	brne	.+18     	; 0xcd4 <vfprintf+0x280>
     cc2:	55 20       	and	r5, r5
     cc4:	39 f0       	breq	.+14     	; 0xcd4 <vfprintf+0x280>
     cc6:	b7 01       	movw	r22, r14
     cc8:	80 e2       	ldi	r24, 0x20	; 32
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     cd0:	5a 94       	dec	r5
     cd2:	f7 cf       	rjmp	.-18     	; 0xcc2 <vfprintf+0x26e>
     cd4:	00 23       	and	r16, r16
     cd6:	29 f0       	breq	.+10     	; 0xce2 <vfprintf+0x28e>
     cd8:	b7 01       	movw	r22, r14
     cda:	80 2f       	mov	r24, r16
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     ce2:	93 fc       	sbrc	r9, 3
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <vfprintf+0x2a4>
     ce6:	55 20       	and	r5, r5
     ce8:	39 f0       	breq	.+14     	; 0xcf8 <vfprintf+0x2a4>
     cea:	b7 01       	movw	r22, r14
     cec:	80 e3       	ldi	r24, 0x30	; 48
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     cf4:	5a 94       	dec	r5
     cf6:	f7 cf       	rjmp	.-18     	; 0xce6 <vfprintf+0x292>
     cf8:	97 fe       	sbrs	r9, 7
     cfa:	4c c0       	rjmp	.+152    	; 0xd94 <vfprintf+0x340>
     cfc:	46 01       	movw	r8, r12
     cfe:	d7 fe       	sbrs	r13, 7
     d00:	02 c0       	rjmp	.+4      	; 0xd06 <vfprintf+0x2b2>
     d02:	81 2c       	mov	r8, r1
     d04:	91 2c       	mov	r9, r1
     d06:	c6 01       	movw	r24, r12
     d08:	88 19       	sub	r24, r8
     d0a:	99 09       	sbc	r25, r9
     d0c:	f3 01       	movw	r30, r6
     d0e:	e8 0f       	add	r30, r24
     d10:	f9 1f       	adc	r31, r25
     d12:	fe 87       	std	Y+14, r31	; 0x0e
     d14:	ed 87       	std	Y+13, r30	; 0x0d
     d16:	96 01       	movw	r18, r12
     d18:	24 19       	sub	r18, r4
     d1a:	31 09       	sbc	r19, r1
     d1c:	38 8b       	std	Y+16, r19	; 0x10
     d1e:	2f 87       	std	Y+15, r18	; 0x0f
     d20:	01 2f       	mov	r16, r17
     d22:	10 e0       	ldi	r17, 0x00	; 0
     d24:	11 95       	neg	r17
     d26:	01 95       	neg	r16
     d28:	11 09       	sbc	r17, r1
     d2a:	3f ef       	ldi	r19, 0xFF	; 255
     d2c:	83 16       	cp	r8, r19
     d2e:	93 06       	cpc	r9, r19
     d30:	29 f4       	brne	.+10     	; 0xd3c <vfprintf+0x2e8>
     d32:	b7 01       	movw	r22, r14
     d34:	8e e2       	ldi	r24, 0x2E	; 46
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     d3c:	c8 14       	cp	r12, r8
     d3e:	d9 04       	cpc	r13, r9
     d40:	4c f0       	brlt	.+18     	; 0xd54 <vfprintf+0x300>
     d42:	8f 85       	ldd	r24, Y+15	; 0x0f
     d44:	98 89       	ldd	r25, Y+16	; 0x10
     d46:	88 15       	cp	r24, r8
     d48:	99 05       	cpc	r25, r9
     d4a:	24 f4       	brge	.+8      	; 0xd54 <vfprintf+0x300>
     d4c:	ed 85       	ldd	r30, Y+13	; 0x0d
     d4e:	fe 85       	ldd	r31, Y+14	; 0x0e
     d50:	81 81       	ldd	r24, Z+1	; 0x01
     d52:	01 c0       	rjmp	.+2      	; 0xd56 <vfprintf+0x302>
     d54:	80 e3       	ldi	r24, 0x30	; 48
     d56:	f1 e0       	ldi	r31, 0x01	; 1
     d58:	8f 1a       	sub	r8, r31
     d5a:	91 08       	sbc	r9, r1
     d5c:	2d 85       	ldd	r18, Y+13	; 0x0d
     d5e:	3e 85       	ldd	r19, Y+14	; 0x0e
     d60:	2f 5f       	subi	r18, 0xFF	; 255
     d62:	3f 4f       	sbci	r19, 0xFF	; 255
     d64:	3e 87       	std	Y+14, r19	; 0x0e
     d66:	2d 87       	std	Y+13, r18	; 0x0d
     d68:	80 16       	cp	r8, r16
     d6a:	91 06       	cpc	r9, r17
     d6c:	2c f0       	brlt	.+10     	; 0xd78 <vfprintf+0x324>
     d6e:	b7 01       	movw	r22, r14
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     d76:	d9 cf       	rjmp	.-78     	; 0xd2a <vfprintf+0x2d6>
     d78:	c8 14       	cp	r12, r8
     d7a:	d9 04       	cpc	r13, r9
     d7c:	41 f4       	brne	.+16     	; 0xd8e <vfprintf+0x33a>
     d7e:	9a 81       	ldd	r25, Y+2	; 0x02
     d80:	96 33       	cpi	r25, 0x36	; 54
     d82:	20 f4       	brcc	.+8      	; 0xd8c <vfprintf+0x338>
     d84:	95 33       	cpi	r25, 0x35	; 53
     d86:	19 f4       	brne	.+6      	; 0xd8e <vfprintf+0x33a>
     d88:	3c 85       	ldd	r19, Y+12	; 0x0c
     d8a:	34 ff       	sbrs	r19, 4
     d8c:	81 e3       	ldi	r24, 0x31	; 49
     d8e:	b7 01       	movw	r22, r14
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	4e c0       	rjmp	.+156    	; 0xe30 <vfprintf+0x3dc>
     d94:	8a 81       	ldd	r24, Y+2	; 0x02
     d96:	81 33       	cpi	r24, 0x31	; 49
     d98:	19 f0       	breq	.+6      	; 0xda0 <vfprintf+0x34c>
     d9a:	9c 85       	ldd	r25, Y+12	; 0x0c
     d9c:	9f 7e       	andi	r25, 0xEF	; 239
     d9e:	9c 87       	std	Y+12, r25	; 0x0c
     da0:	b7 01       	movw	r22, r14
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     da8:	11 11       	cpse	r17, r1
     daa:	05 c0       	rjmp	.+10     	; 0xdb6 <vfprintf+0x362>
     dac:	94 fc       	sbrc	r9, 4
     dae:	18 c0       	rjmp	.+48     	; 0xde0 <vfprintf+0x38c>
     db0:	85 e6       	ldi	r24, 0x65	; 101
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	17 c0       	rjmp	.+46     	; 0xde4 <vfprintf+0x390>
     db6:	b7 01       	movw	r22, r14
     db8:	8e e2       	ldi	r24, 0x2E	; 46
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     dc0:	1e 5f       	subi	r17, 0xFE	; 254
     dc2:	82 e0       	ldi	r24, 0x02	; 2
     dc4:	01 e0       	ldi	r16, 0x01	; 1
     dc6:	08 0f       	add	r16, r24
     dc8:	f3 01       	movw	r30, r6
     dca:	e8 0f       	add	r30, r24
     dcc:	f1 1d       	adc	r31, r1
     dce:	80 81       	ld	r24, Z
     dd0:	b7 01       	movw	r22, r14
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     dd8:	80 2f       	mov	r24, r16
     dda:	01 13       	cpse	r16, r17
     ddc:	f3 cf       	rjmp	.-26     	; 0xdc4 <vfprintf+0x370>
     dde:	e6 cf       	rjmp	.-52     	; 0xdac <vfprintf+0x358>
     de0:	85 e4       	ldi	r24, 0x45	; 69
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	b7 01       	movw	r22, r14
     de6:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     dea:	d7 fc       	sbrc	r13, 7
     dec:	06 c0       	rjmp	.+12     	; 0xdfa <vfprintf+0x3a6>
     dee:	c1 14       	cp	r12, r1
     df0:	d1 04       	cpc	r13, r1
     df2:	41 f4       	brne	.+16     	; 0xe04 <vfprintf+0x3b0>
     df4:	ec 85       	ldd	r30, Y+12	; 0x0c
     df6:	e4 ff       	sbrs	r30, 4
     df8:	05 c0       	rjmp	.+10     	; 0xe04 <vfprintf+0x3b0>
     dfa:	d1 94       	neg	r13
     dfc:	c1 94       	neg	r12
     dfe:	d1 08       	sbc	r13, r1
     e00:	8d e2       	ldi	r24, 0x2D	; 45
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <vfprintf+0x3b2>
     e04:	8b e2       	ldi	r24, 0x2B	; 43
     e06:	b7 01       	movw	r22, r14
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     e0e:	80 e3       	ldi	r24, 0x30	; 48
     e10:	2a e0       	ldi	r18, 0x0A	; 10
     e12:	c2 16       	cp	r12, r18
     e14:	d1 04       	cpc	r13, r1
     e16:	2c f0       	brlt	.+10     	; 0xe22 <vfprintf+0x3ce>
     e18:	8f 5f       	subi	r24, 0xFF	; 255
     e1a:	fa e0       	ldi	r31, 0x0A	; 10
     e1c:	cf 1a       	sub	r12, r31
     e1e:	d1 08       	sbc	r13, r1
     e20:	f7 cf       	rjmp	.-18     	; 0xe10 <vfprintf+0x3bc>
     e22:	b7 01       	movw	r22, r14
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     e2a:	b7 01       	movw	r22, r14
     e2c:	c6 01       	movw	r24, r12
     e2e:	c0 96       	adiw	r24, 0x30	; 48
     e30:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     e34:	54 c1       	rjmp	.+680    	; 0x10de <vfprintf+0x68a>
     e36:	83 36       	cpi	r24, 0x63	; 99
     e38:	31 f0       	breq	.+12     	; 0xe46 <vfprintf+0x3f2>
     e3a:	83 37       	cpi	r24, 0x73	; 115
     e3c:	79 f0       	breq	.+30     	; 0xe5c <vfprintf+0x408>
     e3e:	83 35       	cpi	r24, 0x53	; 83
     e40:	09 f0       	breq	.+2      	; 0xe44 <vfprintf+0x3f0>
     e42:	56 c0       	rjmp	.+172    	; 0xef0 <vfprintf+0x49c>
     e44:	20 c0       	rjmp	.+64     	; 0xe86 <vfprintf+0x432>
     e46:	56 01       	movw	r10, r12
     e48:	32 e0       	ldi	r19, 0x02	; 2
     e4a:	a3 0e       	add	r10, r19
     e4c:	b1 1c       	adc	r11, r1
     e4e:	f6 01       	movw	r30, r12
     e50:	80 81       	ld	r24, Z
     e52:	89 83       	std	Y+1, r24	; 0x01
     e54:	01 e0       	ldi	r16, 0x01	; 1
     e56:	10 e0       	ldi	r17, 0x00	; 0
     e58:	63 01       	movw	r12, r6
     e5a:	12 c0       	rjmp	.+36     	; 0xe80 <vfprintf+0x42c>
     e5c:	56 01       	movw	r10, r12
     e5e:	f2 e0       	ldi	r31, 0x02	; 2
     e60:	af 0e       	add	r10, r31
     e62:	b1 1c       	adc	r11, r1
     e64:	f6 01       	movw	r30, r12
     e66:	c0 80       	ld	r12, Z
     e68:	d1 80       	ldd	r13, Z+1	; 0x01
     e6a:	96 fe       	sbrs	r9, 6
     e6c:	03 c0       	rjmp	.+6      	; 0xe74 <vfprintf+0x420>
     e6e:	61 2f       	mov	r22, r17
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x424>
     e74:	6f ef       	ldi	r22, 0xFF	; 255
     e76:	7f ef       	ldi	r23, 0xFF	; 255
     e78:	c6 01       	movw	r24, r12
     e7a:	0e 94 03 0a 	call	0x1406	; 0x1406 <strnlen>
     e7e:	8c 01       	movw	r16, r24
     e80:	f9 2d       	mov	r31, r9
     e82:	ff 77       	andi	r31, 0x7F	; 127
     e84:	14 c0       	rjmp	.+40     	; 0xeae <vfprintf+0x45a>
     e86:	56 01       	movw	r10, r12
     e88:	22 e0       	ldi	r18, 0x02	; 2
     e8a:	a2 0e       	add	r10, r18
     e8c:	b1 1c       	adc	r11, r1
     e8e:	f6 01       	movw	r30, r12
     e90:	c0 80       	ld	r12, Z
     e92:	d1 80       	ldd	r13, Z+1	; 0x01
     e94:	96 fe       	sbrs	r9, 6
     e96:	03 c0       	rjmp	.+6      	; 0xe9e <vfprintf+0x44a>
     e98:	61 2f       	mov	r22, r17
     e9a:	70 e0       	ldi	r23, 0x00	; 0
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0x44e>
     e9e:	6f ef       	ldi	r22, 0xFF	; 255
     ea0:	7f ef       	ldi	r23, 0xFF	; 255
     ea2:	c6 01       	movw	r24, r12
     ea4:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <strnlen_P>
     ea8:	8c 01       	movw	r16, r24
     eaa:	f9 2d       	mov	r31, r9
     eac:	f0 68       	ori	r31, 0x80	; 128
     eae:	9f 2e       	mov	r9, r31
     eb0:	f3 fd       	sbrc	r31, 3
     eb2:	1a c0       	rjmp	.+52     	; 0xee8 <vfprintf+0x494>
     eb4:	85 2d       	mov	r24, r5
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	08 17       	cp	r16, r24
     eba:	19 07       	cpc	r17, r25
     ebc:	a8 f4       	brcc	.+42     	; 0xee8 <vfprintf+0x494>
     ebe:	b7 01       	movw	r22, r14
     ec0:	80 e2       	ldi	r24, 0x20	; 32
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     ec8:	5a 94       	dec	r5
     eca:	f4 cf       	rjmp	.-24     	; 0xeb4 <vfprintf+0x460>
     ecc:	f6 01       	movw	r30, r12
     ece:	97 fc       	sbrc	r9, 7
     ed0:	85 91       	lpm	r24, Z+
     ed2:	97 fe       	sbrs	r9, 7
     ed4:	81 91       	ld	r24, Z+
     ed6:	6f 01       	movw	r12, r30
     ed8:	b7 01       	movw	r22, r14
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
     ee0:	51 10       	cpse	r5, r1
     ee2:	5a 94       	dec	r5
     ee4:	01 50       	subi	r16, 0x01	; 1
     ee6:	11 09       	sbc	r17, r1
     ee8:	01 15       	cp	r16, r1
     eea:	11 05       	cpc	r17, r1
     eec:	79 f7       	brne	.-34     	; 0xecc <vfprintf+0x478>
     eee:	f7 c0       	rjmp	.+494    	; 0x10de <vfprintf+0x68a>
     ef0:	84 36       	cpi	r24, 0x64	; 100
     ef2:	11 f0       	breq	.+4      	; 0xef8 <vfprintf+0x4a4>
     ef4:	89 36       	cpi	r24, 0x69	; 105
     ef6:	61 f5       	brne	.+88     	; 0xf50 <vfprintf+0x4fc>
     ef8:	56 01       	movw	r10, r12
     efa:	97 fe       	sbrs	r9, 7
     efc:	09 c0       	rjmp	.+18     	; 0xf10 <vfprintf+0x4bc>
     efe:	24 e0       	ldi	r18, 0x04	; 4
     f00:	a2 0e       	add	r10, r18
     f02:	b1 1c       	adc	r11, r1
     f04:	f6 01       	movw	r30, r12
     f06:	60 81       	ld	r22, Z
     f08:	71 81       	ldd	r23, Z+1	; 0x01
     f0a:	82 81       	ldd	r24, Z+2	; 0x02
     f0c:	93 81       	ldd	r25, Z+3	; 0x03
     f0e:	0a c0       	rjmp	.+20     	; 0xf24 <vfprintf+0x4d0>
     f10:	f2 e0       	ldi	r31, 0x02	; 2
     f12:	af 0e       	add	r10, r31
     f14:	b1 1c       	adc	r11, r1
     f16:	f6 01       	movw	r30, r12
     f18:	60 81       	ld	r22, Z
     f1a:	71 81       	ldd	r23, Z+1	; 0x01
     f1c:	07 2e       	mov	r0, r23
     f1e:	00 0c       	add	r0, r0
     f20:	88 0b       	sbc	r24, r24
     f22:	99 0b       	sbc	r25, r25
     f24:	f9 2d       	mov	r31, r9
     f26:	ff 76       	andi	r31, 0x6F	; 111
     f28:	9f 2e       	mov	r9, r31
     f2a:	97 ff       	sbrs	r25, 7
     f2c:	09 c0       	rjmp	.+18     	; 0xf40 <vfprintf+0x4ec>
     f2e:	90 95       	com	r25
     f30:	80 95       	com	r24
     f32:	70 95       	com	r23
     f34:	61 95       	neg	r22
     f36:	7f 4f       	sbci	r23, 0xFF	; 255
     f38:	8f 4f       	sbci	r24, 0xFF	; 255
     f3a:	9f 4f       	sbci	r25, 0xFF	; 255
     f3c:	f0 68       	ori	r31, 0x80	; 128
     f3e:	9f 2e       	mov	r9, r31
     f40:	2a e0       	ldi	r18, 0x0A	; 10
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	a3 01       	movw	r20, r6
     f46:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__ultoa_invert>
     f4a:	c8 2e       	mov	r12, r24
     f4c:	c6 18       	sub	r12, r6
     f4e:	3f c0       	rjmp	.+126    	; 0xfce <vfprintf+0x57a>
     f50:	09 2d       	mov	r16, r9
     f52:	85 37       	cpi	r24, 0x75	; 117
     f54:	21 f4       	brne	.+8      	; 0xf5e <vfprintf+0x50a>
     f56:	0f 7e       	andi	r16, 0xEF	; 239
     f58:	2a e0       	ldi	r18, 0x0A	; 10
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	1d c0       	rjmp	.+58     	; 0xf98 <vfprintf+0x544>
     f5e:	09 7f       	andi	r16, 0xF9	; 249
     f60:	8f 36       	cpi	r24, 0x6F	; 111
     f62:	91 f0       	breq	.+36     	; 0xf88 <vfprintf+0x534>
     f64:	18 f4       	brcc	.+6      	; 0xf6c <vfprintf+0x518>
     f66:	88 35       	cpi	r24, 0x58	; 88
     f68:	59 f0       	breq	.+22     	; 0xf80 <vfprintf+0x52c>
     f6a:	c3 c0       	rjmp	.+390    	; 0x10f2 <vfprintf+0x69e>
     f6c:	80 37       	cpi	r24, 0x70	; 112
     f6e:	19 f0       	breq	.+6      	; 0xf76 <vfprintf+0x522>
     f70:	88 37       	cpi	r24, 0x78	; 120
     f72:	11 f0       	breq	.+4      	; 0xf78 <vfprintf+0x524>
     f74:	be c0       	rjmp	.+380    	; 0x10f2 <vfprintf+0x69e>
     f76:	00 61       	ori	r16, 0x10	; 16
     f78:	04 ff       	sbrs	r16, 4
     f7a:	09 c0       	rjmp	.+18     	; 0xf8e <vfprintf+0x53a>
     f7c:	04 60       	ori	r16, 0x04	; 4
     f7e:	07 c0       	rjmp	.+14     	; 0xf8e <vfprintf+0x53a>
     f80:	94 fe       	sbrs	r9, 4
     f82:	08 c0       	rjmp	.+16     	; 0xf94 <vfprintf+0x540>
     f84:	06 60       	ori	r16, 0x06	; 6
     f86:	06 c0       	rjmp	.+12     	; 0xf94 <vfprintf+0x540>
     f88:	28 e0       	ldi	r18, 0x08	; 8
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	05 c0       	rjmp	.+10     	; 0xf98 <vfprintf+0x544>
     f8e:	20 e1       	ldi	r18, 0x10	; 16
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <vfprintf+0x544>
     f94:	20 e1       	ldi	r18, 0x10	; 16
     f96:	32 e0       	ldi	r19, 0x02	; 2
     f98:	56 01       	movw	r10, r12
     f9a:	07 ff       	sbrs	r16, 7
     f9c:	09 c0       	rjmp	.+18     	; 0xfb0 <vfprintf+0x55c>
     f9e:	84 e0       	ldi	r24, 0x04	; 4
     fa0:	a8 0e       	add	r10, r24
     fa2:	b1 1c       	adc	r11, r1
     fa4:	f6 01       	movw	r30, r12
     fa6:	60 81       	ld	r22, Z
     fa8:	71 81       	ldd	r23, Z+1	; 0x01
     faa:	82 81       	ldd	r24, Z+2	; 0x02
     fac:	93 81       	ldd	r25, Z+3	; 0x03
     fae:	08 c0       	rjmp	.+16     	; 0xfc0 <vfprintf+0x56c>
     fb0:	f2 e0       	ldi	r31, 0x02	; 2
     fb2:	af 0e       	add	r10, r31
     fb4:	b1 1c       	adc	r11, r1
     fb6:	f6 01       	movw	r30, r12
     fb8:	60 81       	ld	r22, Z
     fba:	71 81       	ldd	r23, Z+1	; 0x01
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	a3 01       	movw	r20, r6
     fc2:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__ultoa_invert>
     fc6:	c8 2e       	mov	r12, r24
     fc8:	c6 18       	sub	r12, r6
     fca:	0f 77       	andi	r16, 0x7F	; 127
     fcc:	90 2e       	mov	r9, r16
     fce:	96 fe       	sbrs	r9, 6
     fd0:	0b c0       	rjmp	.+22     	; 0xfe8 <vfprintf+0x594>
     fd2:	09 2d       	mov	r16, r9
     fd4:	0e 7f       	andi	r16, 0xFE	; 254
     fd6:	c1 16       	cp	r12, r17
     fd8:	50 f4       	brcc	.+20     	; 0xfee <vfprintf+0x59a>
     fda:	94 fe       	sbrs	r9, 4
     fdc:	0a c0       	rjmp	.+20     	; 0xff2 <vfprintf+0x59e>
     fde:	92 fc       	sbrc	r9, 2
     fe0:	08 c0       	rjmp	.+16     	; 0xff2 <vfprintf+0x59e>
     fe2:	09 2d       	mov	r16, r9
     fe4:	0e 7e       	andi	r16, 0xEE	; 238
     fe6:	05 c0       	rjmp	.+10     	; 0xff2 <vfprintf+0x59e>
     fe8:	dc 2c       	mov	r13, r12
     fea:	09 2d       	mov	r16, r9
     fec:	03 c0       	rjmp	.+6      	; 0xff4 <vfprintf+0x5a0>
     fee:	dc 2c       	mov	r13, r12
     ff0:	01 c0       	rjmp	.+2      	; 0xff4 <vfprintf+0x5a0>
     ff2:	d1 2e       	mov	r13, r17
     ff4:	04 ff       	sbrs	r16, 4
     ff6:	0d c0       	rjmp	.+26     	; 0x1012 <vfprintf+0x5be>
     ff8:	fe 01       	movw	r30, r28
     ffa:	ec 0d       	add	r30, r12
     ffc:	f1 1d       	adc	r31, r1
     ffe:	80 81       	ld	r24, Z
    1000:	80 33       	cpi	r24, 0x30	; 48
    1002:	11 f4       	brne	.+4      	; 0x1008 <vfprintf+0x5b4>
    1004:	09 7e       	andi	r16, 0xE9	; 233
    1006:	09 c0       	rjmp	.+18     	; 0x101a <vfprintf+0x5c6>
    1008:	02 ff       	sbrs	r16, 2
    100a:	06 c0       	rjmp	.+12     	; 0x1018 <vfprintf+0x5c4>
    100c:	d3 94       	inc	r13
    100e:	d3 94       	inc	r13
    1010:	04 c0       	rjmp	.+8      	; 0x101a <vfprintf+0x5c6>
    1012:	80 2f       	mov	r24, r16
    1014:	86 78       	andi	r24, 0x86	; 134
    1016:	09 f0       	breq	.+2      	; 0x101a <vfprintf+0x5c6>
    1018:	d3 94       	inc	r13
    101a:	03 fd       	sbrc	r16, 3
    101c:	11 c0       	rjmp	.+34     	; 0x1040 <vfprintf+0x5ec>
    101e:	00 ff       	sbrs	r16, 0
    1020:	06 c0       	rjmp	.+12     	; 0x102e <vfprintf+0x5da>
    1022:	1c 2d       	mov	r17, r12
    1024:	d5 14       	cp	r13, r5
    1026:	80 f4       	brcc	.+32     	; 0x1048 <vfprintf+0x5f4>
    1028:	15 0d       	add	r17, r5
    102a:	1d 19       	sub	r17, r13
    102c:	0d c0       	rjmp	.+26     	; 0x1048 <vfprintf+0x5f4>
    102e:	d5 14       	cp	r13, r5
    1030:	58 f4       	brcc	.+22     	; 0x1048 <vfprintf+0x5f4>
    1032:	b7 01       	movw	r22, r14
    1034:	80 e2       	ldi	r24, 0x20	; 32
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    103c:	d3 94       	inc	r13
    103e:	f7 cf       	rjmp	.-18     	; 0x102e <vfprintf+0x5da>
    1040:	d5 14       	cp	r13, r5
    1042:	10 f4       	brcc	.+4      	; 0x1048 <vfprintf+0x5f4>
    1044:	5d 18       	sub	r5, r13
    1046:	01 c0       	rjmp	.+2      	; 0x104a <vfprintf+0x5f6>
    1048:	51 2c       	mov	r5, r1
    104a:	04 ff       	sbrs	r16, 4
    104c:	10 c0       	rjmp	.+32     	; 0x106e <vfprintf+0x61a>
    104e:	b7 01       	movw	r22, r14
    1050:	80 e3       	ldi	r24, 0x30	; 48
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    1058:	02 ff       	sbrs	r16, 2
    105a:	17 c0       	rjmp	.+46     	; 0x108a <vfprintf+0x636>
    105c:	01 fd       	sbrc	r16, 1
    105e:	03 c0       	rjmp	.+6      	; 0x1066 <vfprintf+0x612>
    1060:	88 e7       	ldi	r24, 0x78	; 120
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	02 c0       	rjmp	.+4      	; 0x106a <vfprintf+0x616>
    1066:	88 e5       	ldi	r24, 0x58	; 88
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	b7 01       	movw	r22, r14
    106c:	0c c0       	rjmp	.+24     	; 0x1086 <vfprintf+0x632>
    106e:	80 2f       	mov	r24, r16
    1070:	86 78       	andi	r24, 0x86	; 134
    1072:	59 f0       	breq	.+22     	; 0x108a <vfprintf+0x636>
    1074:	01 ff       	sbrs	r16, 1
    1076:	02 c0       	rjmp	.+4      	; 0x107c <vfprintf+0x628>
    1078:	8b e2       	ldi	r24, 0x2B	; 43
    107a:	01 c0       	rjmp	.+2      	; 0x107e <vfprintf+0x62a>
    107c:	80 e2       	ldi	r24, 0x20	; 32
    107e:	07 fd       	sbrc	r16, 7
    1080:	8d e2       	ldi	r24, 0x2D	; 45
    1082:	b7 01       	movw	r22, r14
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    108a:	c1 16       	cp	r12, r17
    108c:	38 f4       	brcc	.+14     	; 0x109c <vfprintf+0x648>
    108e:	b7 01       	movw	r22, r14
    1090:	80 e3       	ldi	r24, 0x30	; 48
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    1098:	11 50       	subi	r17, 0x01	; 1
    109a:	f7 cf       	rjmp	.-18     	; 0x108a <vfprintf+0x636>
    109c:	ca 94       	dec	r12
    109e:	f3 01       	movw	r30, r6
    10a0:	ec 0d       	add	r30, r12
    10a2:	f1 1d       	adc	r31, r1
    10a4:	80 81       	ld	r24, Z
    10a6:	b7 01       	movw	r22, r14
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    10ae:	c1 10       	cpse	r12, r1
    10b0:	f5 cf       	rjmp	.-22     	; 0x109c <vfprintf+0x648>
    10b2:	15 c0       	rjmp	.+42     	; 0x10de <vfprintf+0x68a>
    10b4:	f4 e0       	ldi	r31, 0x04	; 4
    10b6:	f5 15       	cp	r31, r5
    10b8:	60 f5       	brcc	.+88     	; 0x1112 <vfprintf+0x6be>
    10ba:	84 e0       	ldi	r24, 0x04	; 4
    10bc:	58 1a       	sub	r5, r24
    10be:	93 fe       	sbrs	r9, 3
    10c0:	1f c0       	rjmp	.+62     	; 0x1100 <vfprintf+0x6ac>
    10c2:	01 11       	cpse	r16, r1
    10c4:	27 c0       	rjmp	.+78     	; 0x1114 <vfprintf+0x6c0>
    10c6:	2c 85       	ldd	r18, Y+12	; 0x0c
    10c8:	23 ff       	sbrs	r18, 3
    10ca:	2a c0       	rjmp	.+84     	; 0x1120 <vfprintf+0x6cc>
    10cc:	08 e6       	ldi	r16, 0x68	; 104
    10ce:	10 e0       	ldi	r17, 0x00	; 0
    10d0:	39 2d       	mov	r19, r9
    10d2:	30 71       	andi	r19, 0x10	; 16
    10d4:	93 2e       	mov	r9, r19
    10d6:	f8 01       	movw	r30, r16
    10d8:	84 91       	lpm	r24, Z
    10da:	81 11       	cpse	r24, r1
    10dc:	24 c0       	rjmp	.+72     	; 0x1126 <vfprintf+0x6d2>
    10de:	55 20       	and	r5, r5
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <vfprintf+0x690>
    10e2:	e4 cc       	rjmp	.-1592   	; 0xaac <vfprintf+0x58>
    10e4:	b7 01       	movw	r22, r14
    10e6:	80 e2       	ldi	r24, 0x20	; 32
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    10ee:	5a 94       	dec	r5
    10f0:	f6 cf       	rjmp	.-20     	; 0x10de <vfprintf+0x68a>
    10f2:	f7 01       	movw	r30, r14
    10f4:	86 81       	ldd	r24, Z+6	; 0x06
    10f6:	97 81       	ldd	r25, Z+7	; 0x07
    10f8:	26 c0       	rjmp	.+76     	; 0x1146 <vfprintf+0x6f2>
    10fa:	8f ef       	ldi	r24, 0xFF	; 255
    10fc:	9f ef       	ldi	r25, 0xFF	; 255
    10fe:	23 c0       	rjmp	.+70     	; 0x1146 <vfprintf+0x6f2>
    1100:	b7 01       	movw	r22, r14
    1102:	80 e2       	ldi	r24, 0x20	; 32
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    110a:	5a 94       	dec	r5
    110c:	51 10       	cpse	r5, r1
    110e:	f8 cf       	rjmp	.-16     	; 0x1100 <vfprintf+0x6ac>
    1110:	d8 cf       	rjmp	.-80     	; 0x10c2 <vfprintf+0x66e>
    1112:	51 2c       	mov	r5, r1
    1114:	b7 01       	movw	r22, r14
    1116:	80 2f       	mov	r24, r16
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    111e:	d3 cf       	rjmp	.-90     	; 0x10c6 <vfprintf+0x672>
    1120:	0c e6       	ldi	r16, 0x6C	; 108
    1122:	10 e0       	ldi	r17, 0x00	; 0
    1124:	d5 cf       	rjmp	.-86     	; 0x10d0 <vfprintf+0x67c>
    1126:	91 10       	cpse	r9, r1
    1128:	80 52       	subi	r24, 0x20	; 32
    112a:	b7 01       	movw	r22, r14
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 0e 0a 	call	0x141c	; 0x141c <fputc>
    1132:	0f 5f       	subi	r16, 0xFF	; 255
    1134:	1f 4f       	sbci	r17, 0xFF	; 255
    1136:	cf cf       	rjmp	.-98     	; 0x10d6 <vfprintf+0x682>
    1138:	23 e0       	ldi	r18, 0x03	; 3
    113a:	25 15       	cp	r18, r5
    113c:	10 f4       	brcc	.+4      	; 0x1142 <vfprintf+0x6ee>
    113e:	83 e0       	ldi	r24, 0x03	; 3
    1140:	bd cf       	rjmp	.-134    	; 0x10bc <vfprintf+0x668>
    1142:	51 2c       	mov	r5, r1
    1144:	c0 cf       	rjmp	.-128    	; 0x10c6 <vfprintf+0x672>
    1146:	60 96       	adiw	r28, 0x10	; 16
    1148:	e2 e1       	ldi	r30, 0x12	; 18
    114a:	0c 94 e5 08 	jmp	0x11ca	; 0x11ca <__epilogue_restores__>

0000114e <__udivmodsi4>:
    114e:	a1 e2       	ldi	r26, 0x21	; 33
    1150:	1a 2e       	mov	r1, r26
    1152:	aa 1b       	sub	r26, r26
    1154:	bb 1b       	sub	r27, r27
    1156:	fd 01       	movw	r30, r26
    1158:	0d c0       	rjmp	.+26     	; 0x1174 <__udivmodsi4_ep>

0000115a <__udivmodsi4_loop>:
    115a:	aa 1f       	adc	r26, r26
    115c:	bb 1f       	adc	r27, r27
    115e:	ee 1f       	adc	r30, r30
    1160:	ff 1f       	adc	r31, r31
    1162:	a2 17       	cp	r26, r18
    1164:	b3 07       	cpc	r27, r19
    1166:	e4 07       	cpc	r30, r20
    1168:	f5 07       	cpc	r31, r21
    116a:	20 f0       	brcs	.+8      	; 0x1174 <__udivmodsi4_ep>
    116c:	a2 1b       	sub	r26, r18
    116e:	b3 0b       	sbc	r27, r19
    1170:	e4 0b       	sbc	r30, r20
    1172:	f5 0b       	sbc	r31, r21

00001174 <__udivmodsi4_ep>:
    1174:	66 1f       	adc	r22, r22
    1176:	77 1f       	adc	r23, r23
    1178:	88 1f       	adc	r24, r24
    117a:	99 1f       	adc	r25, r25
    117c:	1a 94       	dec	r1
    117e:	69 f7       	brne	.-38     	; 0x115a <__udivmodsi4_loop>
    1180:	60 95       	com	r22
    1182:	70 95       	com	r23
    1184:	80 95       	com	r24
    1186:	90 95       	com	r25
    1188:	9b 01       	movw	r18, r22
    118a:	ac 01       	movw	r20, r24
    118c:	bd 01       	movw	r22, r26
    118e:	cf 01       	movw	r24, r30
    1190:	08 95       	ret

00001192 <__prologue_saves__>:
    1192:	2f 92       	push	r2
    1194:	3f 92       	push	r3
    1196:	4f 92       	push	r4
    1198:	5f 92       	push	r5
    119a:	6f 92       	push	r6
    119c:	7f 92       	push	r7
    119e:	8f 92       	push	r8
    11a0:	9f 92       	push	r9
    11a2:	af 92       	push	r10
    11a4:	bf 92       	push	r11
    11a6:	cf 92       	push	r12
    11a8:	df 92       	push	r13
    11aa:	ef 92       	push	r14
    11ac:	ff 92       	push	r15
    11ae:	0f 93       	push	r16
    11b0:	1f 93       	push	r17
    11b2:	cf 93       	push	r28
    11b4:	df 93       	push	r29
    11b6:	cd b7       	in	r28, 0x3d	; 61
    11b8:	de b7       	in	r29, 0x3e	; 62
    11ba:	ca 1b       	sub	r28, r26
    11bc:	db 0b       	sbc	r29, r27
    11be:	0f b6       	in	r0, 0x3f	; 63
    11c0:	f8 94       	cli
    11c2:	de bf       	out	0x3e, r29	; 62
    11c4:	0f be       	out	0x3f, r0	; 63
    11c6:	cd bf       	out	0x3d, r28	; 61
    11c8:	09 94       	ijmp

000011ca <__epilogue_restores__>:
    11ca:	2a 88       	ldd	r2, Y+18	; 0x12
    11cc:	39 88       	ldd	r3, Y+17	; 0x11
    11ce:	48 88       	ldd	r4, Y+16	; 0x10
    11d0:	5f 84       	ldd	r5, Y+15	; 0x0f
    11d2:	6e 84       	ldd	r6, Y+14	; 0x0e
    11d4:	7d 84       	ldd	r7, Y+13	; 0x0d
    11d6:	8c 84       	ldd	r8, Y+12	; 0x0c
    11d8:	9b 84       	ldd	r9, Y+11	; 0x0b
    11da:	aa 84       	ldd	r10, Y+10	; 0x0a
    11dc:	b9 84       	ldd	r11, Y+9	; 0x09
    11de:	c8 84       	ldd	r12, Y+8	; 0x08
    11e0:	df 80       	ldd	r13, Y+7	; 0x07
    11e2:	ee 80       	ldd	r14, Y+6	; 0x06
    11e4:	fd 80       	ldd	r15, Y+5	; 0x05
    11e6:	0c 81       	ldd	r16, Y+4	; 0x04
    11e8:	1b 81       	ldd	r17, Y+3	; 0x03
    11ea:	aa 81       	ldd	r26, Y+2	; 0x02
    11ec:	b9 81       	ldd	r27, Y+1	; 0x01
    11ee:	ce 0f       	add	r28, r30
    11f0:	d1 1d       	adc	r29, r1
    11f2:	0f b6       	in	r0, 0x3f	; 63
    11f4:	f8 94       	cli
    11f6:	de bf       	out	0x3e, r29	; 62
    11f8:	0f be       	out	0x3f, r0	; 63
    11fa:	cd bf       	out	0x3d, r28	; 61
    11fc:	ed 01       	movw	r28, r26
    11fe:	08 95       	ret

00001200 <dtostrf>:
    1200:	ef 92       	push	r14
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	cf 93       	push	r28
    1208:	df 93       	push	r29
    120a:	e8 01       	movw	r28, r16
    120c:	47 fd       	sbrc	r20, 7
    120e:	02 c0       	rjmp	.+4      	; 0x1214 <dtostrf+0x14>
    1210:	34 e0       	ldi	r19, 0x04	; 4
    1212:	01 c0       	rjmp	.+2      	; 0x1216 <dtostrf+0x16>
    1214:	34 e1       	ldi	r19, 0x14	; 20
    1216:	04 2e       	mov	r0, r20
    1218:	00 0c       	add	r0, r0
    121a:	55 0b       	sbc	r21, r21
    121c:	57 ff       	sbrs	r21, 7
    121e:	03 c0       	rjmp	.+6      	; 0x1226 <dtostrf+0x26>
    1220:	51 95       	neg	r21
    1222:	41 95       	neg	r20
    1224:	51 09       	sbc	r21, r1
    1226:	e3 2e       	mov	r14, r19
    1228:	02 2f       	mov	r16, r18
    122a:	24 2f       	mov	r18, r20
    122c:	ae 01       	movw	r20, r28
    122e:	0e 94 ca 0a 	call	0x1594	; 0x1594 <dtoa_prf>
    1232:	ce 01       	movw	r24, r28
    1234:	df 91       	pop	r29
    1236:	cf 91       	pop	r28
    1238:	1f 91       	pop	r17
    123a:	0f 91       	pop	r16
    123c:	ef 90       	pop	r14
    123e:	08 95       	ret

00001240 <__ftoa_engine>:
    1240:	28 30       	cpi	r18, 0x08	; 8
    1242:	08 f0       	brcs	.+2      	; 0x1246 <__ftoa_engine+0x6>
    1244:	27 e0       	ldi	r18, 0x07	; 7
    1246:	33 27       	eor	r19, r19
    1248:	da 01       	movw	r26, r20
    124a:	99 0f       	add	r25, r25
    124c:	31 1d       	adc	r19, r1
    124e:	87 fd       	sbrc	r24, 7
    1250:	91 60       	ori	r25, 0x01	; 1
    1252:	00 96       	adiw	r24, 0x00	; 0
    1254:	61 05       	cpc	r22, r1
    1256:	71 05       	cpc	r23, r1
    1258:	39 f4       	brne	.+14     	; 0x1268 <__ftoa_engine+0x28>
    125a:	32 60       	ori	r19, 0x02	; 2
    125c:	2e 5f       	subi	r18, 0xFE	; 254
    125e:	3d 93       	st	X+, r19
    1260:	30 e3       	ldi	r19, 0x30	; 48
    1262:	2a 95       	dec	r18
    1264:	e1 f7       	brne	.-8      	; 0x125e <__ftoa_engine+0x1e>
    1266:	08 95       	ret
    1268:	9f 3f       	cpi	r25, 0xFF	; 255
    126a:	30 f0       	brcs	.+12     	; 0x1278 <__ftoa_engine+0x38>
    126c:	80 38       	cpi	r24, 0x80	; 128
    126e:	71 05       	cpc	r23, r1
    1270:	61 05       	cpc	r22, r1
    1272:	09 f0       	breq	.+2      	; 0x1276 <__ftoa_engine+0x36>
    1274:	3c 5f       	subi	r19, 0xFC	; 252
    1276:	3c 5f       	subi	r19, 0xFC	; 252
    1278:	3d 93       	st	X+, r19
    127a:	91 30       	cpi	r25, 0x01	; 1
    127c:	08 f0       	brcs	.+2      	; 0x1280 <__ftoa_engine+0x40>
    127e:	80 68       	ori	r24, 0x80	; 128
    1280:	91 1d       	adc	r25, r1
    1282:	df 93       	push	r29
    1284:	cf 93       	push	r28
    1286:	1f 93       	push	r17
    1288:	0f 93       	push	r16
    128a:	ff 92       	push	r15
    128c:	ef 92       	push	r14
    128e:	19 2f       	mov	r17, r25
    1290:	98 7f       	andi	r25, 0xF8	; 248
    1292:	96 95       	lsr	r25
    1294:	e9 2f       	mov	r30, r25
    1296:	96 95       	lsr	r25
    1298:	96 95       	lsr	r25
    129a:	e9 0f       	add	r30, r25
    129c:	ff 27       	eor	r31, r31
    129e:	e6 53       	subi	r30, 0x36	; 54
    12a0:	ff 4f       	sbci	r31, 0xFF	; 255
    12a2:	99 27       	eor	r25, r25
    12a4:	33 27       	eor	r19, r19
    12a6:	ee 24       	eor	r14, r14
    12a8:	ff 24       	eor	r15, r15
    12aa:	a7 01       	movw	r20, r14
    12ac:	e7 01       	movw	r28, r14
    12ae:	05 90       	lpm	r0, Z+
    12b0:	08 94       	sec
    12b2:	07 94       	ror	r0
    12b4:	28 f4       	brcc	.+10     	; 0x12c0 <__ftoa_engine+0x80>
    12b6:	36 0f       	add	r19, r22
    12b8:	e7 1e       	adc	r14, r23
    12ba:	f8 1e       	adc	r15, r24
    12bc:	49 1f       	adc	r20, r25
    12be:	51 1d       	adc	r21, r1
    12c0:	66 0f       	add	r22, r22
    12c2:	77 1f       	adc	r23, r23
    12c4:	88 1f       	adc	r24, r24
    12c6:	99 1f       	adc	r25, r25
    12c8:	06 94       	lsr	r0
    12ca:	a1 f7       	brne	.-24     	; 0x12b4 <__ftoa_engine+0x74>
    12cc:	05 90       	lpm	r0, Z+
    12ce:	07 94       	ror	r0
    12d0:	28 f4       	brcc	.+10     	; 0x12dc <__ftoa_engine+0x9c>
    12d2:	e7 0e       	add	r14, r23
    12d4:	f8 1e       	adc	r15, r24
    12d6:	49 1f       	adc	r20, r25
    12d8:	56 1f       	adc	r21, r22
    12da:	c1 1d       	adc	r28, r1
    12dc:	77 0f       	add	r23, r23
    12de:	88 1f       	adc	r24, r24
    12e0:	99 1f       	adc	r25, r25
    12e2:	66 1f       	adc	r22, r22
    12e4:	06 94       	lsr	r0
    12e6:	a1 f7       	brne	.-24     	; 0x12d0 <__ftoa_engine+0x90>
    12e8:	05 90       	lpm	r0, Z+
    12ea:	07 94       	ror	r0
    12ec:	28 f4       	brcc	.+10     	; 0x12f8 <__ftoa_engine+0xb8>
    12ee:	f8 0e       	add	r15, r24
    12f0:	49 1f       	adc	r20, r25
    12f2:	56 1f       	adc	r21, r22
    12f4:	c7 1f       	adc	r28, r23
    12f6:	d1 1d       	adc	r29, r1
    12f8:	88 0f       	add	r24, r24
    12fa:	99 1f       	adc	r25, r25
    12fc:	66 1f       	adc	r22, r22
    12fe:	77 1f       	adc	r23, r23
    1300:	06 94       	lsr	r0
    1302:	a1 f7       	brne	.-24     	; 0x12ec <__ftoa_engine+0xac>
    1304:	05 90       	lpm	r0, Z+
    1306:	07 94       	ror	r0
    1308:	20 f4       	brcc	.+8      	; 0x1312 <__ftoa_engine+0xd2>
    130a:	49 0f       	add	r20, r25
    130c:	56 1f       	adc	r21, r22
    130e:	c7 1f       	adc	r28, r23
    1310:	d8 1f       	adc	r29, r24
    1312:	99 0f       	add	r25, r25
    1314:	66 1f       	adc	r22, r22
    1316:	77 1f       	adc	r23, r23
    1318:	88 1f       	adc	r24, r24
    131a:	06 94       	lsr	r0
    131c:	a9 f7       	brne	.-22     	; 0x1308 <__ftoa_engine+0xc8>
    131e:	84 91       	lpm	r24, Z
    1320:	10 95       	com	r17
    1322:	17 70       	andi	r17, 0x07	; 7
    1324:	41 f0       	breq	.+16     	; 0x1336 <__ftoa_engine+0xf6>
    1326:	d6 95       	lsr	r29
    1328:	c7 95       	ror	r28
    132a:	57 95       	ror	r21
    132c:	47 95       	ror	r20
    132e:	f7 94       	ror	r15
    1330:	e7 94       	ror	r14
    1332:	1a 95       	dec	r17
    1334:	c1 f7       	brne	.-16     	; 0x1326 <__ftoa_engine+0xe6>
    1336:	e0 e7       	ldi	r30, 0x70	; 112
    1338:	f0 e0       	ldi	r31, 0x00	; 0
    133a:	68 94       	set
    133c:	15 90       	lpm	r1, Z+
    133e:	15 91       	lpm	r17, Z+
    1340:	35 91       	lpm	r19, Z+
    1342:	65 91       	lpm	r22, Z+
    1344:	95 91       	lpm	r25, Z+
    1346:	05 90       	lpm	r0, Z+
    1348:	7f e2       	ldi	r23, 0x2F	; 47
    134a:	73 95       	inc	r23
    134c:	e1 18       	sub	r14, r1
    134e:	f1 0a       	sbc	r15, r17
    1350:	43 0b       	sbc	r20, r19
    1352:	56 0b       	sbc	r21, r22
    1354:	c9 0b       	sbc	r28, r25
    1356:	d0 09       	sbc	r29, r0
    1358:	c0 f7       	brcc	.-16     	; 0x134a <__ftoa_engine+0x10a>
    135a:	e1 0c       	add	r14, r1
    135c:	f1 1e       	adc	r15, r17
    135e:	43 1f       	adc	r20, r19
    1360:	56 1f       	adc	r21, r22
    1362:	c9 1f       	adc	r28, r25
    1364:	d0 1d       	adc	r29, r0
    1366:	7e f4       	brtc	.+30     	; 0x1386 <__ftoa_engine+0x146>
    1368:	70 33       	cpi	r23, 0x30	; 48
    136a:	11 f4       	brne	.+4      	; 0x1370 <__ftoa_engine+0x130>
    136c:	8a 95       	dec	r24
    136e:	e6 cf       	rjmp	.-52     	; 0x133c <__ftoa_engine+0xfc>
    1370:	e8 94       	clt
    1372:	01 50       	subi	r16, 0x01	; 1
    1374:	30 f0       	brcs	.+12     	; 0x1382 <__ftoa_engine+0x142>
    1376:	08 0f       	add	r16, r24
    1378:	0a f4       	brpl	.+2      	; 0x137c <__ftoa_engine+0x13c>
    137a:	00 27       	eor	r16, r16
    137c:	02 17       	cp	r16, r18
    137e:	08 f4       	brcc	.+2      	; 0x1382 <__ftoa_engine+0x142>
    1380:	20 2f       	mov	r18, r16
    1382:	23 95       	inc	r18
    1384:	02 2f       	mov	r16, r18
    1386:	7a 33       	cpi	r23, 0x3A	; 58
    1388:	28 f0       	brcs	.+10     	; 0x1394 <__ftoa_engine+0x154>
    138a:	79 e3       	ldi	r23, 0x39	; 57
    138c:	7d 93       	st	X+, r23
    138e:	2a 95       	dec	r18
    1390:	e9 f7       	brne	.-6      	; 0x138c <__ftoa_engine+0x14c>
    1392:	10 c0       	rjmp	.+32     	; 0x13b4 <__ftoa_engine+0x174>
    1394:	7d 93       	st	X+, r23
    1396:	2a 95       	dec	r18
    1398:	89 f6       	brne	.-94     	; 0x133c <__ftoa_engine+0xfc>
    139a:	06 94       	lsr	r0
    139c:	97 95       	ror	r25
    139e:	67 95       	ror	r22
    13a0:	37 95       	ror	r19
    13a2:	17 95       	ror	r17
    13a4:	17 94       	ror	r1
    13a6:	e1 18       	sub	r14, r1
    13a8:	f1 0a       	sbc	r15, r17
    13aa:	43 0b       	sbc	r20, r19
    13ac:	56 0b       	sbc	r21, r22
    13ae:	c9 0b       	sbc	r28, r25
    13b0:	d0 09       	sbc	r29, r0
    13b2:	98 f0       	brcs	.+38     	; 0x13da <__ftoa_engine+0x19a>
    13b4:	23 95       	inc	r18
    13b6:	7e 91       	ld	r23, -X
    13b8:	73 95       	inc	r23
    13ba:	7a 33       	cpi	r23, 0x3A	; 58
    13bc:	08 f0       	brcs	.+2      	; 0x13c0 <__ftoa_engine+0x180>
    13be:	70 e3       	ldi	r23, 0x30	; 48
    13c0:	7c 93       	st	X, r23
    13c2:	20 13       	cpse	r18, r16
    13c4:	b8 f7       	brcc	.-18     	; 0x13b4 <__ftoa_engine+0x174>
    13c6:	7e 91       	ld	r23, -X
    13c8:	70 61       	ori	r23, 0x10	; 16
    13ca:	7d 93       	st	X+, r23
    13cc:	30 f0       	brcs	.+12     	; 0x13da <__ftoa_engine+0x19a>
    13ce:	83 95       	inc	r24
    13d0:	71 e3       	ldi	r23, 0x31	; 49
    13d2:	7d 93       	st	X+, r23
    13d4:	70 e3       	ldi	r23, 0x30	; 48
    13d6:	2a 95       	dec	r18
    13d8:	e1 f7       	brne	.-8      	; 0x13d2 <__ftoa_engine+0x192>
    13da:	11 24       	eor	r1, r1
    13dc:	ef 90       	pop	r14
    13de:	ff 90       	pop	r15
    13e0:	0f 91       	pop	r16
    13e2:	1f 91       	pop	r17
    13e4:	cf 91       	pop	r28
    13e6:	df 91       	pop	r29
    13e8:	99 27       	eor	r25, r25
    13ea:	87 fd       	sbrc	r24, 7
    13ec:	90 95       	com	r25
    13ee:	08 95       	ret

000013f0 <strnlen_P>:
    13f0:	fc 01       	movw	r30, r24
    13f2:	05 90       	lpm	r0, Z+
    13f4:	61 50       	subi	r22, 0x01	; 1
    13f6:	70 40       	sbci	r23, 0x00	; 0
    13f8:	01 10       	cpse	r0, r1
    13fa:	d8 f7       	brcc	.-10     	; 0x13f2 <strnlen_P+0x2>
    13fc:	80 95       	com	r24
    13fe:	90 95       	com	r25
    1400:	8e 0f       	add	r24, r30
    1402:	9f 1f       	adc	r25, r31
    1404:	08 95       	ret

00001406 <strnlen>:
    1406:	fc 01       	movw	r30, r24
    1408:	61 50       	subi	r22, 0x01	; 1
    140a:	70 40       	sbci	r23, 0x00	; 0
    140c:	01 90       	ld	r0, Z+
    140e:	01 10       	cpse	r0, r1
    1410:	d8 f7       	brcc	.-10     	; 0x1408 <strnlen+0x2>
    1412:	80 95       	com	r24
    1414:	90 95       	com	r25
    1416:	8e 0f       	add	r24, r30
    1418:	9f 1f       	adc	r25, r31
    141a:	08 95       	ret

0000141c <fputc>:
    141c:	0f 93       	push	r16
    141e:	1f 93       	push	r17
    1420:	cf 93       	push	r28
    1422:	df 93       	push	r29
    1424:	fb 01       	movw	r30, r22
    1426:	23 81       	ldd	r18, Z+3	; 0x03
    1428:	21 fd       	sbrc	r18, 1
    142a:	03 c0       	rjmp	.+6      	; 0x1432 <fputc+0x16>
    142c:	8f ef       	ldi	r24, 0xFF	; 255
    142e:	9f ef       	ldi	r25, 0xFF	; 255
    1430:	2c c0       	rjmp	.+88     	; 0x148a <fputc+0x6e>
    1432:	22 ff       	sbrs	r18, 2
    1434:	16 c0       	rjmp	.+44     	; 0x1462 <fputc+0x46>
    1436:	46 81       	ldd	r20, Z+6	; 0x06
    1438:	57 81       	ldd	r21, Z+7	; 0x07
    143a:	24 81       	ldd	r18, Z+4	; 0x04
    143c:	35 81       	ldd	r19, Z+5	; 0x05
    143e:	42 17       	cp	r20, r18
    1440:	53 07       	cpc	r21, r19
    1442:	44 f4       	brge	.+16     	; 0x1454 <fputc+0x38>
    1444:	a0 81       	ld	r26, Z
    1446:	b1 81       	ldd	r27, Z+1	; 0x01
    1448:	9d 01       	movw	r18, r26
    144a:	2f 5f       	subi	r18, 0xFF	; 255
    144c:	3f 4f       	sbci	r19, 0xFF	; 255
    144e:	31 83       	std	Z+1, r19	; 0x01
    1450:	20 83       	st	Z, r18
    1452:	8c 93       	st	X, r24
    1454:	26 81       	ldd	r18, Z+6	; 0x06
    1456:	37 81       	ldd	r19, Z+7	; 0x07
    1458:	2f 5f       	subi	r18, 0xFF	; 255
    145a:	3f 4f       	sbci	r19, 0xFF	; 255
    145c:	37 83       	std	Z+7, r19	; 0x07
    145e:	26 83       	std	Z+6, r18	; 0x06
    1460:	14 c0       	rjmp	.+40     	; 0x148a <fputc+0x6e>
    1462:	8b 01       	movw	r16, r22
    1464:	ec 01       	movw	r28, r24
    1466:	fb 01       	movw	r30, r22
    1468:	00 84       	ldd	r0, Z+8	; 0x08
    146a:	f1 85       	ldd	r31, Z+9	; 0x09
    146c:	e0 2d       	mov	r30, r0
    146e:	09 95       	icall
    1470:	89 2b       	or	r24, r25
    1472:	e1 f6       	brne	.-72     	; 0x142c <fputc+0x10>
    1474:	d8 01       	movw	r26, r16
    1476:	16 96       	adiw	r26, 0x06	; 6
    1478:	8d 91       	ld	r24, X+
    147a:	9c 91       	ld	r25, X
    147c:	17 97       	sbiw	r26, 0x07	; 7
    147e:	01 96       	adiw	r24, 0x01	; 1
    1480:	17 96       	adiw	r26, 0x07	; 7
    1482:	9c 93       	st	X, r25
    1484:	8e 93       	st	-X, r24
    1486:	16 97       	sbiw	r26, 0x06	; 6
    1488:	ce 01       	movw	r24, r28
    148a:	df 91       	pop	r29
    148c:	cf 91       	pop	r28
    148e:	1f 91       	pop	r17
    1490:	0f 91       	pop	r16
    1492:	08 95       	ret

00001494 <sprintf>:
    1494:	ae e0       	ldi	r26, 0x0E	; 14
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	e0 e5       	ldi	r30, 0x50	; 80
    149a:	fa e0       	ldi	r31, 0x0A	; 10
    149c:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__prologue_saves__+0x1c>
    14a0:	0d 89       	ldd	r16, Y+21	; 0x15
    14a2:	1e 89       	ldd	r17, Y+22	; 0x16
    14a4:	86 e0       	ldi	r24, 0x06	; 6
    14a6:	8c 83       	std	Y+4, r24	; 0x04
    14a8:	1a 83       	std	Y+2, r17	; 0x02
    14aa:	09 83       	std	Y+1, r16	; 0x01
    14ac:	8f ef       	ldi	r24, 0xFF	; 255
    14ae:	9f e7       	ldi	r25, 0x7F	; 127
    14b0:	9e 83       	std	Y+6, r25	; 0x06
    14b2:	8d 83       	std	Y+5, r24	; 0x05
    14b4:	ae 01       	movw	r20, r28
    14b6:	47 5e       	subi	r20, 0xE7	; 231
    14b8:	5f 4f       	sbci	r21, 0xFF	; 255
    14ba:	6f 89       	ldd	r22, Y+23	; 0x17
    14bc:	78 8d       	ldd	r23, Y+24	; 0x18
    14be:	ce 01       	movw	r24, r28
    14c0:	01 96       	adiw	r24, 0x01	; 1
    14c2:	0e 94 2a 05 	call	0xa54	; 0xa54 <vfprintf>
    14c6:	ef 81       	ldd	r30, Y+7	; 0x07
    14c8:	f8 85       	ldd	r31, Y+8	; 0x08
    14ca:	e0 0f       	add	r30, r16
    14cc:	f1 1f       	adc	r31, r17
    14ce:	10 82       	st	Z, r1
    14d0:	2e 96       	adiw	r28, 0x0e	; 14
    14d2:	e4 e0       	ldi	r30, 0x04	; 4
    14d4:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <__epilogue_restores__+0x1c>

000014d8 <__ultoa_invert>:
    14d8:	fa 01       	movw	r30, r20
    14da:	aa 27       	eor	r26, r26
    14dc:	28 30       	cpi	r18, 0x08	; 8
    14de:	51 f1       	breq	.+84     	; 0x1534 <__ultoa_invert+0x5c>
    14e0:	20 31       	cpi	r18, 0x10	; 16
    14e2:	81 f1       	breq	.+96     	; 0x1544 <__ultoa_invert+0x6c>
    14e4:	e8 94       	clt
    14e6:	6f 93       	push	r22
    14e8:	6e 7f       	andi	r22, 0xFE	; 254
    14ea:	6e 5f       	subi	r22, 0xFE	; 254
    14ec:	7f 4f       	sbci	r23, 0xFF	; 255
    14ee:	8f 4f       	sbci	r24, 0xFF	; 255
    14f0:	9f 4f       	sbci	r25, 0xFF	; 255
    14f2:	af 4f       	sbci	r26, 0xFF	; 255
    14f4:	b1 e0       	ldi	r27, 0x01	; 1
    14f6:	3e d0       	rcall	.+124    	; 0x1574 <__ultoa_invert+0x9c>
    14f8:	b4 e0       	ldi	r27, 0x04	; 4
    14fa:	3c d0       	rcall	.+120    	; 0x1574 <__ultoa_invert+0x9c>
    14fc:	67 0f       	add	r22, r23
    14fe:	78 1f       	adc	r23, r24
    1500:	89 1f       	adc	r24, r25
    1502:	9a 1f       	adc	r25, r26
    1504:	a1 1d       	adc	r26, r1
    1506:	68 0f       	add	r22, r24
    1508:	79 1f       	adc	r23, r25
    150a:	8a 1f       	adc	r24, r26
    150c:	91 1d       	adc	r25, r1
    150e:	a1 1d       	adc	r26, r1
    1510:	6a 0f       	add	r22, r26
    1512:	71 1d       	adc	r23, r1
    1514:	81 1d       	adc	r24, r1
    1516:	91 1d       	adc	r25, r1
    1518:	a1 1d       	adc	r26, r1
    151a:	20 d0       	rcall	.+64     	; 0x155c <__ultoa_invert+0x84>
    151c:	09 f4       	brne	.+2      	; 0x1520 <__ultoa_invert+0x48>
    151e:	68 94       	set
    1520:	3f 91       	pop	r19
    1522:	2a e0       	ldi	r18, 0x0A	; 10
    1524:	26 9f       	mul	r18, r22
    1526:	11 24       	eor	r1, r1
    1528:	30 19       	sub	r19, r0
    152a:	30 5d       	subi	r19, 0xD0	; 208
    152c:	31 93       	st	Z+, r19
    152e:	de f6       	brtc	.-74     	; 0x14e6 <__ultoa_invert+0xe>
    1530:	cf 01       	movw	r24, r30
    1532:	08 95       	ret
    1534:	46 2f       	mov	r20, r22
    1536:	47 70       	andi	r20, 0x07	; 7
    1538:	40 5d       	subi	r20, 0xD0	; 208
    153a:	41 93       	st	Z+, r20
    153c:	b3 e0       	ldi	r27, 0x03	; 3
    153e:	0f d0       	rcall	.+30     	; 0x155e <__ultoa_invert+0x86>
    1540:	c9 f7       	brne	.-14     	; 0x1534 <__ultoa_invert+0x5c>
    1542:	f6 cf       	rjmp	.-20     	; 0x1530 <__ultoa_invert+0x58>
    1544:	46 2f       	mov	r20, r22
    1546:	4f 70       	andi	r20, 0x0F	; 15
    1548:	40 5d       	subi	r20, 0xD0	; 208
    154a:	4a 33       	cpi	r20, 0x3A	; 58
    154c:	18 f0       	brcs	.+6      	; 0x1554 <__ultoa_invert+0x7c>
    154e:	49 5d       	subi	r20, 0xD9	; 217
    1550:	31 fd       	sbrc	r19, 1
    1552:	40 52       	subi	r20, 0x20	; 32
    1554:	41 93       	st	Z+, r20
    1556:	02 d0       	rcall	.+4      	; 0x155c <__ultoa_invert+0x84>
    1558:	a9 f7       	brne	.-22     	; 0x1544 <__ultoa_invert+0x6c>
    155a:	ea cf       	rjmp	.-44     	; 0x1530 <__ultoa_invert+0x58>
    155c:	b4 e0       	ldi	r27, 0x04	; 4
    155e:	a6 95       	lsr	r26
    1560:	97 95       	ror	r25
    1562:	87 95       	ror	r24
    1564:	77 95       	ror	r23
    1566:	67 95       	ror	r22
    1568:	ba 95       	dec	r27
    156a:	c9 f7       	brne	.-14     	; 0x155e <__ultoa_invert+0x86>
    156c:	00 97       	sbiw	r24, 0x00	; 0
    156e:	61 05       	cpc	r22, r1
    1570:	71 05       	cpc	r23, r1
    1572:	08 95       	ret
    1574:	9b 01       	movw	r18, r22
    1576:	ac 01       	movw	r20, r24
    1578:	0a 2e       	mov	r0, r26
    157a:	06 94       	lsr	r0
    157c:	57 95       	ror	r21
    157e:	47 95       	ror	r20
    1580:	37 95       	ror	r19
    1582:	27 95       	ror	r18
    1584:	ba 95       	dec	r27
    1586:	c9 f7       	brne	.-14     	; 0x157a <__ultoa_invert+0xa2>
    1588:	62 0f       	add	r22, r18
    158a:	73 1f       	adc	r23, r19
    158c:	84 1f       	adc	r24, r20
    158e:	95 1f       	adc	r25, r21
    1590:	a0 1d       	adc	r26, r0
    1592:	08 95       	ret

00001594 <dtoa_prf>:
    1594:	a9 e0       	ldi	r26, 0x09	; 9
    1596:	b0 e0       	ldi	r27, 0x00	; 0
    1598:	e0 ed       	ldi	r30, 0xD0	; 208
    159a:	fa e0       	ldi	r31, 0x0A	; 10
    159c:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__prologue_saves__+0xc>
    15a0:	6a 01       	movw	r12, r20
    15a2:	12 2f       	mov	r17, r18
    15a4:	b0 2e       	mov	r11, r16
    15a6:	2b e3       	ldi	r18, 0x3B	; 59
    15a8:	20 17       	cp	r18, r16
    15aa:	20 f0       	brcs	.+8      	; 0x15b4 <dtoa_prf+0x20>
    15ac:	ff 24       	eor	r15, r15
    15ae:	f3 94       	inc	r15
    15b0:	f0 0e       	add	r15, r16
    15b2:	02 c0       	rjmp	.+4      	; 0x15b8 <dtoa_prf+0x24>
    15b4:	2c e3       	ldi	r18, 0x3C	; 60
    15b6:	f2 2e       	mov	r15, r18
    15b8:	0f 2d       	mov	r16, r15
    15ba:	27 e0       	ldi	r18, 0x07	; 7
    15bc:	ae 01       	movw	r20, r28
    15be:	4f 5f       	subi	r20, 0xFF	; 255
    15c0:	5f 4f       	sbci	r21, 0xFF	; 255
    15c2:	0e 94 20 09 	call	0x1240	; 0x1240 <__ftoa_engine>
    15c6:	bc 01       	movw	r22, r24
    15c8:	49 81       	ldd	r20, Y+1	; 0x01
    15ca:	84 2f       	mov	r24, r20
    15cc:	89 70       	andi	r24, 0x09	; 9
    15ce:	81 30       	cpi	r24, 0x01	; 1
    15d0:	31 f0       	breq	.+12     	; 0x15de <dtoa_prf+0x4a>
    15d2:	e1 fc       	sbrc	r14, 1
    15d4:	06 c0       	rjmp	.+12     	; 0x15e2 <dtoa_prf+0x4e>
    15d6:	e0 fe       	sbrs	r14, 0
    15d8:	06 c0       	rjmp	.+12     	; 0x15e6 <dtoa_prf+0x52>
    15da:	90 e2       	ldi	r25, 0x20	; 32
    15dc:	05 c0       	rjmp	.+10     	; 0x15e8 <dtoa_prf+0x54>
    15de:	9d e2       	ldi	r25, 0x2D	; 45
    15e0:	03 c0       	rjmp	.+6      	; 0x15e8 <dtoa_prf+0x54>
    15e2:	9b e2       	ldi	r25, 0x2B	; 43
    15e4:	01 c0       	rjmp	.+2      	; 0x15e8 <dtoa_prf+0x54>
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	5e 2d       	mov	r21, r14
    15ea:	50 71       	andi	r21, 0x10	; 16
    15ec:	43 ff       	sbrs	r20, 3
    15ee:	3c c0       	rjmp	.+120    	; 0x1668 <dtoa_prf+0xd4>
    15f0:	91 11       	cpse	r25, r1
    15f2:	02 c0       	rjmp	.+4      	; 0x15f8 <dtoa_prf+0x64>
    15f4:	83 e0       	ldi	r24, 0x03	; 3
    15f6:	01 c0       	rjmp	.+2      	; 0x15fa <dtoa_prf+0x66>
    15f8:	84 e0       	ldi	r24, 0x04	; 4
    15fa:	81 17       	cp	r24, r17
    15fc:	18 f4       	brcc	.+6      	; 0x1604 <dtoa_prf+0x70>
    15fe:	21 2f       	mov	r18, r17
    1600:	28 1b       	sub	r18, r24
    1602:	01 c0       	rjmp	.+2      	; 0x1606 <dtoa_prf+0x72>
    1604:	20 e0       	ldi	r18, 0x00	; 0
    1606:	51 11       	cpse	r21, r1
    1608:	0b c0       	rjmp	.+22     	; 0x1620 <dtoa_prf+0x8c>
    160a:	f6 01       	movw	r30, r12
    160c:	82 2f       	mov	r24, r18
    160e:	30 e2       	ldi	r19, 0x20	; 32
    1610:	88 23       	and	r24, r24
    1612:	19 f0       	breq	.+6      	; 0x161a <dtoa_prf+0x86>
    1614:	31 93       	st	Z+, r19
    1616:	81 50       	subi	r24, 0x01	; 1
    1618:	fb cf       	rjmp	.-10     	; 0x1610 <dtoa_prf+0x7c>
    161a:	c2 0e       	add	r12, r18
    161c:	d1 1c       	adc	r13, r1
    161e:	20 e0       	ldi	r18, 0x00	; 0
    1620:	99 23       	and	r25, r25
    1622:	29 f0       	breq	.+10     	; 0x162e <dtoa_prf+0x9a>
    1624:	d6 01       	movw	r26, r12
    1626:	9c 93       	st	X, r25
    1628:	f6 01       	movw	r30, r12
    162a:	31 96       	adiw	r30, 0x01	; 1
    162c:	6f 01       	movw	r12, r30
    162e:	c6 01       	movw	r24, r12
    1630:	03 96       	adiw	r24, 0x03	; 3
    1632:	e2 fe       	sbrs	r14, 2
    1634:	0a c0       	rjmp	.+20     	; 0x164a <dtoa_prf+0xb6>
    1636:	3e e4       	ldi	r19, 0x4E	; 78
    1638:	d6 01       	movw	r26, r12
    163a:	3c 93       	st	X, r19
    163c:	41 e4       	ldi	r20, 0x41	; 65
    163e:	11 96       	adiw	r26, 0x01	; 1
    1640:	4c 93       	st	X, r20
    1642:	11 97       	sbiw	r26, 0x01	; 1
    1644:	12 96       	adiw	r26, 0x02	; 2
    1646:	3c 93       	st	X, r19
    1648:	06 c0       	rjmp	.+12     	; 0x1656 <dtoa_prf+0xc2>
    164a:	3e e6       	ldi	r19, 0x6E	; 110
    164c:	f6 01       	movw	r30, r12
    164e:	30 83       	st	Z, r19
    1650:	41 e6       	ldi	r20, 0x61	; 97
    1652:	41 83       	std	Z+1, r20	; 0x01
    1654:	32 83       	std	Z+2, r19	; 0x02
    1656:	fc 01       	movw	r30, r24
    1658:	32 2f       	mov	r19, r18
    165a:	40 e2       	ldi	r20, 0x20	; 32
    165c:	33 23       	and	r19, r19
    165e:	09 f4       	brne	.+2      	; 0x1662 <dtoa_prf+0xce>
    1660:	42 c0       	rjmp	.+132    	; 0x16e6 <dtoa_prf+0x152>
    1662:	41 93       	st	Z+, r20
    1664:	31 50       	subi	r19, 0x01	; 1
    1666:	fa cf       	rjmp	.-12     	; 0x165c <dtoa_prf+0xc8>
    1668:	42 ff       	sbrs	r20, 2
    166a:	44 c0       	rjmp	.+136    	; 0x16f4 <dtoa_prf+0x160>
    166c:	91 11       	cpse	r25, r1
    166e:	02 c0       	rjmp	.+4      	; 0x1674 <dtoa_prf+0xe0>
    1670:	83 e0       	ldi	r24, 0x03	; 3
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <dtoa_prf+0xe2>
    1674:	84 e0       	ldi	r24, 0x04	; 4
    1676:	81 17       	cp	r24, r17
    1678:	18 f4       	brcc	.+6      	; 0x1680 <dtoa_prf+0xec>
    167a:	21 2f       	mov	r18, r17
    167c:	28 1b       	sub	r18, r24
    167e:	01 c0       	rjmp	.+2      	; 0x1682 <dtoa_prf+0xee>
    1680:	20 e0       	ldi	r18, 0x00	; 0
    1682:	51 11       	cpse	r21, r1
    1684:	0b c0       	rjmp	.+22     	; 0x169c <dtoa_prf+0x108>
    1686:	f6 01       	movw	r30, r12
    1688:	82 2f       	mov	r24, r18
    168a:	30 e2       	ldi	r19, 0x20	; 32
    168c:	88 23       	and	r24, r24
    168e:	19 f0       	breq	.+6      	; 0x1696 <dtoa_prf+0x102>
    1690:	31 93       	st	Z+, r19
    1692:	81 50       	subi	r24, 0x01	; 1
    1694:	fb cf       	rjmp	.-10     	; 0x168c <dtoa_prf+0xf8>
    1696:	c2 0e       	add	r12, r18
    1698:	d1 1c       	adc	r13, r1
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	99 23       	and	r25, r25
    169e:	29 f0       	breq	.+10     	; 0x16aa <dtoa_prf+0x116>
    16a0:	d6 01       	movw	r26, r12
    16a2:	9c 93       	st	X, r25
    16a4:	f6 01       	movw	r30, r12
    16a6:	31 96       	adiw	r30, 0x01	; 1
    16a8:	6f 01       	movw	r12, r30
    16aa:	c6 01       	movw	r24, r12
    16ac:	03 96       	adiw	r24, 0x03	; 3
    16ae:	e2 fe       	sbrs	r14, 2
    16b0:	0b c0       	rjmp	.+22     	; 0x16c8 <dtoa_prf+0x134>
    16b2:	39 e4       	ldi	r19, 0x49	; 73
    16b4:	d6 01       	movw	r26, r12
    16b6:	3c 93       	st	X, r19
    16b8:	3e e4       	ldi	r19, 0x4E	; 78
    16ba:	11 96       	adiw	r26, 0x01	; 1
    16bc:	3c 93       	st	X, r19
    16be:	11 97       	sbiw	r26, 0x01	; 1
    16c0:	36 e4       	ldi	r19, 0x46	; 70
    16c2:	12 96       	adiw	r26, 0x02	; 2
    16c4:	3c 93       	st	X, r19
    16c6:	07 c0       	rjmp	.+14     	; 0x16d6 <dtoa_prf+0x142>
    16c8:	39 e6       	ldi	r19, 0x69	; 105
    16ca:	f6 01       	movw	r30, r12
    16cc:	30 83       	st	Z, r19
    16ce:	3e e6       	ldi	r19, 0x6E	; 110
    16d0:	31 83       	std	Z+1, r19	; 0x01
    16d2:	36 e6       	ldi	r19, 0x66	; 102
    16d4:	32 83       	std	Z+2, r19	; 0x02
    16d6:	fc 01       	movw	r30, r24
    16d8:	32 2f       	mov	r19, r18
    16da:	40 e2       	ldi	r20, 0x20	; 32
    16dc:	33 23       	and	r19, r19
    16de:	19 f0       	breq	.+6      	; 0x16e6 <dtoa_prf+0x152>
    16e0:	41 93       	st	Z+, r20
    16e2:	31 50       	subi	r19, 0x01	; 1
    16e4:	fb cf       	rjmp	.-10     	; 0x16dc <dtoa_prf+0x148>
    16e6:	fc 01       	movw	r30, r24
    16e8:	e2 0f       	add	r30, r18
    16ea:	f1 1d       	adc	r31, r1
    16ec:	10 82       	st	Z, r1
    16ee:	8e ef       	ldi	r24, 0xFE	; 254
    16f0:	9f ef       	ldi	r25, 0xFF	; 255
    16f2:	a6 c0       	rjmp	.+332    	; 0x1840 <dtoa_prf+0x2ac>
    16f4:	21 e0       	ldi	r18, 0x01	; 1
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	91 11       	cpse	r25, r1
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <dtoa_prf+0x16c>
    16fc:	20 e0       	ldi	r18, 0x00	; 0
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	16 16       	cp	r1, r22
    1702:	17 06       	cpc	r1, r23
    1704:	1c f4       	brge	.+6      	; 0x170c <dtoa_prf+0x178>
    1706:	fb 01       	movw	r30, r22
    1708:	31 96       	adiw	r30, 0x01	; 1
    170a:	02 c0       	rjmp	.+4      	; 0x1710 <dtoa_prf+0x17c>
    170c:	e1 e0       	ldi	r30, 0x01	; 1
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	2e 0f       	add	r18, r30
    1712:	3f 1f       	adc	r19, r31
    1714:	bb 20       	and	r11, r11
    1716:	21 f0       	breq	.+8      	; 0x1720 <dtoa_prf+0x18c>
    1718:	eb 2d       	mov	r30, r11
    171a:	f0 e0       	ldi	r31, 0x00	; 0
    171c:	31 96       	adiw	r30, 0x01	; 1
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <dtoa_prf+0x190>
    1720:	e0 e0       	ldi	r30, 0x00	; 0
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	2e 0f       	add	r18, r30
    1726:	3f 1f       	adc	r19, r31
    1728:	e1 2f       	mov	r30, r17
    172a:	f0 e0       	ldi	r31, 0x00	; 0
    172c:	2e 17       	cp	r18, r30
    172e:	3f 07       	cpc	r19, r31
    1730:	1c f4       	brge	.+6      	; 0x1738 <dtoa_prf+0x1a4>
    1732:	12 1b       	sub	r17, r18
    1734:	21 2f       	mov	r18, r17
    1736:	01 c0       	rjmp	.+2      	; 0x173a <dtoa_prf+0x1a6>
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	8e 2d       	mov	r24, r14
    173c:	88 71       	andi	r24, 0x18	; 24
    173e:	59 f4       	brne	.+22     	; 0x1756 <dtoa_prf+0x1c2>
    1740:	f6 01       	movw	r30, r12
    1742:	82 2f       	mov	r24, r18
    1744:	30 e2       	ldi	r19, 0x20	; 32
    1746:	88 23       	and	r24, r24
    1748:	19 f0       	breq	.+6      	; 0x1750 <dtoa_prf+0x1bc>
    174a:	31 93       	st	Z+, r19
    174c:	81 50       	subi	r24, 0x01	; 1
    174e:	fb cf       	rjmp	.-10     	; 0x1746 <dtoa_prf+0x1b2>
    1750:	c2 0e       	add	r12, r18
    1752:	d1 1c       	adc	r13, r1
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	99 23       	and	r25, r25
    1758:	29 f0       	breq	.+10     	; 0x1764 <dtoa_prf+0x1d0>
    175a:	d6 01       	movw	r26, r12
    175c:	9c 93       	st	X, r25
    175e:	f6 01       	movw	r30, r12
    1760:	31 96       	adiw	r30, 0x01	; 1
    1762:	6f 01       	movw	r12, r30
    1764:	51 11       	cpse	r21, r1
    1766:	0b c0       	rjmp	.+22     	; 0x177e <dtoa_prf+0x1ea>
    1768:	f6 01       	movw	r30, r12
    176a:	82 2f       	mov	r24, r18
    176c:	90 e3       	ldi	r25, 0x30	; 48
    176e:	88 23       	and	r24, r24
    1770:	19 f0       	breq	.+6      	; 0x1778 <dtoa_prf+0x1e4>
    1772:	91 93       	st	Z+, r25
    1774:	81 50       	subi	r24, 0x01	; 1
    1776:	fb cf       	rjmp	.-10     	; 0x176e <dtoa_prf+0x1da>
    1778:	c2 0e       	add	r12, r18
    177a:	d1 1c       	adc	r13, r1
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	0f 2d       	mov	r16, r15
    1780:	06 0f       	add	r16, r22
    1782:	9a 81       	ldd	r25, Y+2	; 0x02
    1784:	34 2f       	mov	r19, r20
    1786:	30 71       	andi	r19, 0x10	; 16
    1788:	44 ff       	sbrs	r20, 4
    178a:	03 c0       	rjmp	.+6      	; 0x1792 <dtoa_prf+0x1fe>
    178c:	91 33       	cpi	r25, 0x31	; 49
    178e:	09 f4       	brne	.+2      	; 0x1792 <dtoa_prf+0x1fe>
    1790:	01 50       	subi	r16, 0x01	; 1
    1792:	10 16       	cp	r1, r16
    1794:	24 f4       	brge	.+8      	; 0x179e <dtoa_prf+0x20a>
    1796:	09 30       	cpi	r16, 0x09	; 9
    1798:	18 f0       	brcs	.+6      	; 0x17a0 <dtoa_prf+0x20c>
    179a:	08 e0       	ldi	r16, 0x08	; 8
    179c:	01 c0       	rjmp	.+2      	; 0x17a0 <dtoa_prf+0x20c>
    179e:	01 e0       	ldi	r16, 0x01	; 1
    17a0:	ab 01       	movw	r20, r22
    17a2:	77 ff       	sbrs	r23, 7
    17a4:	02 c0       	rjmp	.+4      	; 0x17aa <dtoa_prf+0x216>
    17a6:	40 e0       	ldi	r20, 0x00	; 0
    17a8:	50 e0       	ldi	r21, 0x00	; 0
    17aa:	fb 01       	movw	r30, r22
    17ac:	e4 1b       	sub	r30, r20
    17ae:	f5 0b       	sbc	r31, r21
    17b0:	a1 e0       	ldi	r26, 0x01	; 1
    17b2:	b0 e0       	ldi	r27, 0x00	; 0
    17b4:	ac 0f       	add	r26, r28
    17b6:	bd 1f       	adc	r27, r29
    17b8:	ea 0f       	add	r30, r26
    17ba:	fb 1f       	adc	r31, r27
    17bc:	8e e2       	ldi	r24, 0x2E	; 46
    17be:	a8 2e       	mov	r10, r24
    17c0:	4b 01       	movw	r8, r22
    17c2:	80 1a       	sub	r8, r16
    17c4:	91 08       	sbc	r9, r1
    17c6:	0b 2d       	mov	r16, r11
    17c8:	10 e0       	ldi	r17, 0x00	; 0
    17ca:	11 95       	neg	r17
    17cc:	01 95       	neg	r16
    17ce:	11 09       	sbc	r17, r1
    17d0:	4f 3f       	cpi	r20, 0xFF	; 255
    17d2:	bf ef       	ldi	r27, 0xFF	; 255
    17d4:	5b 07       	cpc	r21, r27
    17d6:	21 f4       	brne	.+8      	; 0x17e0 <dtoa_prf+0x24c>
    17d8:	d6 01       	movw	r26, r12
    17da:	ac 92       	st	X, r10
    17dc:	11 96       	adiw	r26, 0x01	; 1
    17de:	6d 01       	movw	r12, r26
    17e0:	64 17       	cp	r22, r20
    17e2:	75 07       	cpc	r23, r21
    17e4:	2c f0       	brlt	.+10     	; 0x17f0 <dtoa_prf+0x25c>
    17e6:	84 16       	cp	r8, r20
    17e8:	95 06       	cpc	r9, r21
    17ea:	14 f4       	brge	.+4      	; 0x17f0 <dtoa_prf+0x25c>
    17ec:	81 81       	ldd	r24, Z+1	; 0x01
    17ee:	01 c0       	rjmp	.+2      	; 0x17f2 <dtoa_prf+0x25e>
    17f0:	80 e3       	ldi	r24, 0x30	; 48
    17f2:	41 50       	subi	r20, 0x01	; 1
    17f4:	51 09       	sbc	r21, r1
    17f6:	31 96       	adiw	r30, 0x01	; 1
    17f8:	d6 01       	movw	r26, r12
    17fa:	11 96       	adiw	r26, 0x01	; 1
    17fc:	7d 01       	movw	r14, r26
    17fe:	40 17       	cp	r20, r16
    1800:	51 07       	cpc	r21, r17
    1802:	24 f0       	brlt	.+8      	; 0x180c <dtoa_prf+0x278>
    1804:	d6 01       	movw	r26, r12
    1806:	8c 93       	st	X, r24
    1808:	67 01       	movw	r12, r14
    180a:	e2 cf       	rjmp	.-60     	; 0x17d0 <dtoa_prf+0x23c>
    180c:	64 17       	cp	r22, r20
    180e:	75 07       	cpc	r23, r21
    1810:	39 f4       	brne	.+14     	; 0x1820 <dtoa_prf+0x28c>
    1812:	96 33       	cpi	r25, 0x36	; 54
    1814:	20 f4       	brcc	.+8      	; 0x181e <dtoa_prf+0x28a>
    1816:	95 33       	cpi	r25, 0x35	; 53
    1818:	19 f4       	brne	.+6      	; 0x1820 <dtoa_prf+0x28c>
    181a:	31 11       	cpse	r19, r1
    181c:	01 c0       	rjmp	.+2      	; 0x1820 <dtoa_prf+0x28c>
    181e:	81 e3       	ldi	r24, 0x31	; 49
    1820:	f6 01       	movw	r30, r12
    1822:	80 83       	st	Z, r24
    1824:	f7 01       	movw	r30, r14
    1826:	82 2f       	mov	r24, r18
    1828:	90 e2       	ldi	r25, 0x20	; 32
    182a:	88 23       	and	r24, r24
    182c:	19 f0       	breq	.+6      	; 0x1834 <dtoa_prf+0x2a0>
    182e:	91 93       	st	Z+, r25
    1830:	81 50       	subi	r24, 0x01	; 1
    1832:	fb cf       	rjmp	.-10     	; 0x182a <dtoa_prf+0x296>
    1834:	f7 01       	movw	r30, r14
    1836:	e2 0f       	add	r30, r18
    1838:	f1 1d       	adc	r31, r1
    183a:	10 82       	st	Z, r1
    183c:	80 e0       	ldi	r24, 0x00	; 0
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	29 96       	adiw	r28, 0x09	; 9
    1842:	ec e0       	ldi	r30, 0x0C	; 12
    1844:	0c 94 eb 08 	jmp	0x11d6	; 0x11d6 <__epilogue_restores__+0xc>

00001848 <_exit>:
    1848:	f8 94       	cli

0000184a <__stop_program>:
    184a:	ff cf       	rjmp	.-2      	; 0x184a <__stop_program>
