
DA4a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000065e  000006f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000065e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080010e  0080010e  00000700  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000730  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009da  00000000  00000000  00000808  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a5  00000000  00000000  000011e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000437  00000000  00000000  00001987  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b4  00000000  00000000  00001dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000490  00000000  00000000  00001f74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000209  00000000  00000000  00002404  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000260d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__vector_4>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 17 01 	jmp	0x22e	; 0x22e <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 31       	cpi	r26, 0x1A	; 26
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 bb 00 	call	0x176	; 0x176 <main>
  9e:	0c 94 2d 03 	jmp	0x65a	; 0x65a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART0SendByte>:
//-----------------------------------------------------------------------------
//	*********Timer end function*********
//-----------------------------------------------------------------------------
void StopTimer0(void){
	TCCR0B &= ~(1<<CS01);
	TIMSK0 &= ~(1<<OCIE0A);
  a6:	e0 ec       	ldi	r30, 0xC0	; 192
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	90 81       	ld	r25, Z
  ac:	95 ff       	sbrs	r25, 5
  ae:	fd cf       	rjmp	.-6      	; 0xaa <USART0SendByte+0x4>
  b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	08 95       	ret

000000ba <InitPort>:
  ba:	87 b1       	in	r24, 0x07	; 7
  bc:	87 b9       	out	0x07, r24	; 7
  be:	88 b1       	in	r24, 0x08	; 8
  c0:	88 b9       	out	0x08, r24	; 8
  c2:	ee e7       	ldi	r30, 0x7E	; 126
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	80 83       	st	Z, r24
  cc:	41 9a       	sbi	0x08, 1	; 8
  ce:	e8 e6       	ldi	r30, 0x68	; 104
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	82 60       	ori	r24, 0x02	; 2
  d6:	80 83       	st	Z, r24
  d8:	ec e6       	ldi	r30, 0x6C	; 108
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	80 83       	st	Z, r24
  e2:	84 b1       	in	r24, 0x04	; 4
  e4:	86 60       	ori	r24, 0x06	; 6
  e6:	84 b9       	out	0x04, r24	; 4
  e8:	2a 98       	cbi	0x05, 2	; 5
  ea:	08 95       	ret

000000ec <InitADC>:
  ec:	ec e7       	ldi	r30, 0x7C	; 124
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	80 64       	ori	r24, 0x40	; 64
  f4:	80 83       	st	Z, r24
  f6:	ea e7       	ldi	r30, 0x7A	; 122
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	8f 6a       	ori	r24, 0xAF	; 175
  fe:	80 83       	st	Z, r24
 100:	eb e7       	ldi	r30, 0x7B	; 123
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	83 60       	ori	r24, 0x03	; 3
 108:	80 83       	st	Z, r24
 10a:	08 95       	ret

0000010c <SetADCChannel>:
 10c:	ec e7       	ldi	r30, 0x7C	; 124
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	90 81       	ld	r25, Z
 112:	90 7f       	andi	r25, 0xF0	; 240
 114:	8f 70       	andi	r24, 0x0F	; 15
 116:	89 2b       	or	r24, r25
 118:	80 83       	st	Z, r24
 11a:	08 95       	ret

0000011c <StartADC>:
 11c:	ea e7       	ldi	r30, 0x7A	; 122
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	80 64       	ori	r24, 0x40	; 64
 124:	80 83       	st	Z, r24
 126:	08 95       	ret

00000128 <USART0Init>:
 128:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 12c:	87 e6       	ldi	r24, 0x67	; 103
 12e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 132:	e2 ec       	ldi	r30, 0xC2	; 194
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	85 60       	ori	r24, 0x05	; 5
 13a:	80 83       	st	Z, r24
 13c:	e1 ec       	ldi	r30, 0xC1	; 193
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	88 61       	ori	r24, 0x18	; 24
 144:	80 83       	st	Z, r24
 146:	08 95       	ret

00000148 <InitTimer0>:
 148:	16 bc       	out	0x26, r1	; 38
 14a:	83 e6       	ldi	r24, 0x63	; 99
 14c:	87 bd       	out	0x27, r24	; 39
 14e:	84 b5       	in	r24, 0x24	; 36
 150:	82 64       	ori	r24, 0x42	; 66
 152:	84 bd       	out	0x24, r24	; 36
 154:	08 95       	ret

00000156 <InitTimer1>:
 156:	e0 e8       	ldi	r30, 0x80	; 128
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	81 6f       	ori	r24, 0xF1	; 241
 15e:	80 83       	st	Z, r24
 160:	08 95       	ret

00000162 <StartTimer0>:
 162:	85 b5       	in	r24, 0x25	; 37
 164:	82 60       	ori	r24, 0x02	; 2
 166:	85 bd       	out	0x25, r24	; 37
 168:	08 95       	ret

0000016a <StartTimer1>:
 16a:	e1 e8       	ldi	r30, 0x81	; 129
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	85 60       	ori	r24, 0x05	; 5
 172:	80 83       	st	Z, r24
 174:	08 95       	ret

00000176 <main>:
 176:	0e 94 94 00 	call	0x128	; 0x128 <USART0Init>
 17a:	0e 94 5d 00 	call	0xba	; 0xba <InitPort>
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__iob+0x3>
 186:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__iob+0x2>
 18a:	0e 94 76 00 	call	0xec	; 0xec <InitADC>
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	0e 94 86 00 	call	0x10c	; 0x10c <SetADCChannel>
 194:	0e 94 a4 00 	call	0x148	; 0x148 <InitTimer0>
 198:	0e 94 ab 00 	call	0x156	; 0x156 <InitTimer1>
 19c:	0e 94 b1 00 	call	0x162	; 0x162 <StartTimer0>
 1a0:	0e 94 b5 00 	call	0x16a	; 0x16a <StartTimer1>
 1a4:	0e 94 8e 00 	call	0x11c	; 0x11c <StartADC>
 1a8:	78 94       	sei
 1aa:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 1ae:	0e ef       	ldi	r16, 0xFE	; 254
 1b0:	11 e0       	ldi	r17, 0x01	; 1
 1b2:	c8 e8       	ldi	r28, 0x88	; 136
 1b4:	d0 e0       	ldi	r29, 0x00	; 0
 1b6:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end>
 1ba:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x1>
 1be:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x2>
 1c2:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x3>
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 ec       	ldi	r19, 0xC0	; 192
 1ca:	4f e7       	ldi	r20, 0x7F	; 127
 1cc:	54 e4       	ldi	r21, 0x44	; 68
 1ce:	0e 94 8a 01 	call	0x314	; 0x314 <__divsf3>
 1d2:	20 e0       	ldi	r18, 0x00	; 0
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	48 ec       	ldi	r20, 0xC8	; 200
 1d8:	52 e4       	ldi	r21, 0x42	; 66
 1da:	0e 94 c0 02 	call	0x580	; 0x580 <__mulsf3>
 1de:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__fixsfsi>
 1e2:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <DC+0x1>
 1e6:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <DC>
 1ea:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <DC>
 1ee:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <DC+0x1>
 1f2:	20 9f       	mul	r18, r16
 1f4:	c0 01       	movw	r24, r0
 1f6:	21 9f       	mul	r18, r17
 1f8:	90 0d       	add	r25, r0
 1fa:	30 9f       	mul	r19, r16
 1fc:	90 0d       	add	r25, r0
 1fe:	11 24       	eor	r1, r1
 200:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <DC+0x1>
 204:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <DC>
 208:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <DC>
 20c:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <DC+0x1>
 210:	0a 96       	adiw	r24, 0x0a	; 10
 212:	99 83       	std	Y+1, r25	; 0x01
 214:	88 83       	st	Y, r24
 216:	cf cf       	rjmp	.-98     	; 0x1b6 <main+0x40>

00000218 <ToggleTimer1>:
 218:	e1 e8       	ldi	r30, 0x81	; 129
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	90 81       	ld	r25, Z
 21e:	84 e0       	ldi	r24, 0x04	; 4
 220:	89 27       	eor	r24, r25
 222:	80 83       	st	Z, r24
 224:	90 81       	ld	r25, Z
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	89 27       	eor	r24, r25
 22a:	80 83       	st	Z, r24
 22c:	08 95       	ret

0000022e <__vector_21>:
}

//-----------------------------------------------------------------------------
//	*********ADC conversion complete ISR*********
//-----------------------------------------------------------------------------
ISR(ADC_vect){
 22e:	1f 92       	push	r1
 230:	0f 92       	push	r0
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	0f 92       	push	r0
 236:	11 24       	eor	r1, r1
 238:	2f 93       	push	r18
 23a:	3f 93       	push	r19
 23c:	4f 93       	push	r20
 23e:	5f 93       	push	r21
 240:	6f 93       	push	r22
 242:	7f 93       	push	r23
 244:	8f 93       	push	r24
 246:	9f 93       	push	r25
 248:	af 93       	push	r26
 24a:	bf 93       	push	r27
 24c:	ef 93       	push	r30
 24e:	ff 93       	push	r31
 250:	cf 93       	push	r28
 252:	df 93       	push	r29
 254:	00 d0       	rcall	.+0      	; 0x256 <__vector_21+0x28>
 256:	cd b7       	in	r28, 0x3d	; 61
 258:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t ADC_in_L = 0;
 25a:	19 82       	std	Y+1, r1	; 0x01
	volatile uint8_t ADC_in_H = 0;
 25c:	1a 82       	std	Y+2, r1	; 0x02
	// clear timer compare match flag
	TIFR0 = (1<<OCF0A);
 25e:	82 e0       	ldi	r24, 0x02	; 2
 260:	85 bb       	out	0x15, r24	; 21
	// Toggle pin PD2 to track the end of ADC conversion
	PIND = (1<<PIND2);
 262:	84 e0       	ldi	r24, 0x04	; 4
 264:	89 b9       	out	0x09, r24	; 9
	ADC_in_L = ADCL;
 266:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 26a:	89 83       	std	Y+1, r24	; 0x01
	ADC_in_H = ADCH;
 26c:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 270:	8a 83       	std	Y+2, r24	; 0x02
	ADC_in_Out = ((ADC_in_H << 8)|(ADC_in_L));
 272:	8a 81       	ldd	r24, Y+2	; 0x02
 274:	69 81       	ldd	r22, Y+1	; 0x01
 276:	70 e0       	ldi	r23, 0x00	; 0
 278:	78 2b       	or	r23, r24
 27a:	07 2e       	mov	r0, r23
 27c:	00 0c       	add	r0, r0
 27e:	88 0b       	sbc	r24, r24
 280:	99 0b       	sbc	r25, r25
 282:	0e 94 34 02 	call	0x468	; 0x468 <__floatsisf>
 286:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <__data_end>
 28a:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <__data_end+0x1>
 28e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>
 292:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
}
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	ff 91       	pop	r31
 2a0:	ef 91       	pop	r30
 2a2:	bf 91       	pop	r27
 2a4:	af 91       	pop	r26
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	7f 91       	pop	r23
 2ac:	6f 91       	pop	r22
 2ae:	5f 91       	pop	r21
 2b0:	4f 91       	pop	r20
 2b2:	3f 91       	pop	r19
 2b4:	2f 91       	pop	r18
 2b6:	0f 90       	pop	r0
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	0f 90       	pop	r0
 2bc:	1f 90       	pop	r1
 2be:	18 95       	reti

000002c0 <__vector_4>:

ISR(PCINT1_vect){
 2c0:	1f 92       	push	r1
 2c2:	0f 92       	push	r0
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	0f 92       	push	r0
 2c8:	11 24       	eor	r1, r1
 2ca:	2f 93       	push	r18
 2cc:	3f 93       	push	r19
 2ce:	4f 93       	push	r20
 2d0:	5f 93       	push	r21
 2d2:	6f 93       	push	r22
 2d4:	7f 93       	push	r23
 2d6:	8f 93       	push	r24
 2d8:	9f 93       	push	r25
 2da:	af 93       	push	r26
 2dc:	bf 93       	push	r27
 2de:	ef 93       	push	r30
 2e0:	ff 93       	push	r31
	if(!(PINC & (1 << PINC1))){
 2e2:	31 99       	sbic	0x06, 1	; 6
 2e4:	06 c0       	rjmp	.+12     	; 0x2f2 <__vector_4+0x32>
		OCR1A = 0;
 2e6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 2ea:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
		ToggleTimer1();
 2ee:	0e 94 0c 01 	call	0x218	; 0x218 <ToggleTimer1>
	}
 2f2:	ff 91       	pop	r31
 2f4:	ef 91       	pop	r30
 2f6:	bf 91       	pop	r27
 2f8:	af 91       	pop	r26
 2fa:	9f 91       	pop	r25
 2fc:	8f 91       	pop	r24
 2fe:	7f 91       	pop	r23
 300:	6f 91       	pop	r22
 302:	5f 91       	pop	r21
 304:	4f 91       	pop	r20
 306:	3f 91       	pop	r19
 308:	2f 91       	pop	r18
 30a:	0f 90       	pop	r0
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	0f 90       	pop	r0
 310:	1f 90       	pop	r1
 312:	18 95       	reti

00000314 <__divsf3>:
 314:	0e 94 9e 01 	call	0x33c	; 0x33c <__divsf3x>
 318:	0c 94 86 02 	jmp	0x50c	; 0x50c <__fp_round>
 31c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_pscB>
 320:	58 f0       	brcs	.+22     	; 0x338 <__divsf3+0x24>
 322:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fp_pscA>
 326:	40 f0       	brcs	.+16     	; 0x338 <__divsf3+0x24>
 328:	29 f4       	brne	.+10     	; 0x334 <__divsf3+0x20>
 32a:	5f 3f       	cpi	r21, 0xFF	; 255
 32c:	29 f0       	breq	.+10     	; 0x338 <__divsf3+0x24>
 32e:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_inf>
 332:	51 11       	cpse	r21, r1
 334:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_szero>
 338:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_nan>

0000033c <__divsf3x>:
 33c:	0e 94 97 02 	call	0x52e	; 0x52e <__fp_split3>
 340:	68 f3       	brcs	.-38     	; 0x31c <__divsf3+0x8>

00000342 <__divsf3_pse>:
 342:	99 23       	and	r25, r25
 344:	b1 f3       	breq	.-20     	; 0x332 <__divsf3+0x1e>
 346:	55 23       	and	r21, r21
 348:	91 f3       	breq	.-28     	; 0x32e <__divsf3+0x1a>
 34a:	95 1b       	sub	r25, r21
 34c:	55 0b       	sbc	r21, r21
 34e:	bb 27       	eor	r27, r27
 350:	aa 27       	eor	r26, r26
 352:	62 17       	cp	r22, r18
 354:	73 07       	cpc	r23, r19
 356:	84 07       	cpc	r24, r20
 358:	38 f0       	brcs	.+14     	; 0x368 <__divsf3_pse+0x26>
 35a:	9f 5f       	subi	r25, 0xFF	; 255
 35c:	5f 4f       	sbci	r21, 0xFF	; 255
 35e:	22 0f       	add	r18, r18
 360:	33 1f       	adc	r19, r19
 362:	44 1f       	adc	r20, r20
 364:	aa 1f       	adc	r26, r26
 366:	a9 f3       	breq	.-22     	; 0x352 <__divsf3_pse+0x10>
 368:	35 d0       	rcall	.+106    	; 0x3d4 <__divsf3_pse+0x92>
 36a:	0e 2e       	mov	r0, r30
 36c:	3a f0       	brmi	.+14     	; 0x37c <__divsf3_pse+0x3a>
 36e:	e0 e8       	ldi	r30, 0x80	; 128
 370:	32 d0       	rcall	.+100    	; 0x3d6 <__divsf3_pse+0x94>
 372:	91 50       	subi	r25, 0x01	; 1
 374:	50 40       	sbci	r21, 0x00	; 0
 376:	e6 95       	lsr	r30
 378:	00 1c       	adc	r0, r0
 37a:	ca f7       	brpl	.-14     	; 0x36e <__divsf3_pse+0x2c>
 37c:	2b d0       	rcall	.+86     	; 0x3d4 <__divsf3_pse+0x92>
 37e:	fe 2f       	mov	r31, r30
 380:	29 d0       	rcall	.+82     	; 0x3d4 <__divsf3_pse+0x92>
 382:	66 0f       	add	r22, r22
 384:	77 1f       	adc	r23, r23
 386:	88 1f       	adc	r24, r24
 388:	bb 1f       	adc	r27, r27
 38a:	26 17       	cp	r18, r22
 38c:	37 07       	cpc	r19, r23
 38e:	48 07       	cpc	r20, r24
 390:	ab 07       	cpc	r26, r27
 392:	b0 e8       	ldi	r27, 0x80	; 128
 394:	09 f0       	breq	.+2      	; 0x398 <__divsf3_pse+0x56>
 396:	bb 0b       	sbc	r27, r27
 398:	80 2d       	mov	r24, r0
 39a:	bf 01       	movw	r22, r30
 39c:	ff 27       	eor	r31, r31
 39e:	93 58       	subi	r25, 0x83	; 131
 3a0:	5f 4f       	sbci	r21, 0xFF	; 255
 3a2:	3a f0       	brmi	.+14     	; 0x3b2 <__divsf3_pse+0x70>
 3a4:	9e 3f       	cpi	r25, 0xFE	; 254
 3a6:	51 05       	cpc	r21, r1
 3a8:	78 f0       	brcs	.+30     	; 0x3c8 <__divsf3_pse+0x86>
 3aa:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_inf>
 3ae:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_szero>
 3b2:	5f 3f       	cpi	r21, 0xFF	; 255
 3b4:	e4 f3       	brlt	.-8      	; 0x3ae <__divsf3_pse+0x6c>
 3b6:	98 3e       	cpi	r25, 0xE8	; 232
 3b8:	d4 f3       	brlt	.-12     	; 0x3ae <__divsf3_pse+0x6c>
 3ba:	86 95       	lsr	r24
 3bc:	77 95       	ror	r23
 3be:	67 95       	ror	r22
 3c0:	b7 95       	ror	r27
 3c2:	f7 95       	ror	r31
 3c4:	9f 5f       	subi	r25, 0xFF	; 255
 3c6:	c9 f7       	brne	.-14     	; 0x3ba <__divsf3_pse+0x78>
 3c8:	88 0f       	add	r24, r24
 3ca:	91 1d       	adc	r25, r1
 3cc:	96 95       	lsr	r25
 3ce:	87 95       	ror	r24
 3d0:	97 f9       	bld	r25, 7
 3d2:	08 95       	ret
 3d4:	e1 e0       	ldi	r30, 0x01	; 1
 3d6:	66 0f       	add	r22, r22
 3d8:	77 1f       	adc	r23, r23
 3da:	88 1f       	adc	r24, r24
 3dc:	bb 1f       	adc	r27, r27
 3de:	62 17       	cp	r22, r18
 3e0:	73 07       	cpc	r23, r19
 3e2:	84 07       	cpc	r24, r20
 3e4:	ba 07       	cpc	r27, r26
 3e6:	20 f0       	brcs	.+8      	; 0x3f0 <__divsf3_pse+0xae>
 3e8:	62 1b       	sub	r22, r18
 3ea:	73 0b       	sbc	r23, r19
 3ec:	84 0b       	sbc	r24, r20
 3ee:	ba 0b       	sbc	r27, r26
 3f0:	ee 1f       	adc	r30, r30
 3f2:	88 f7       	brcc	.-30     	; 0x3d6 <__divsf3_pse+0x94>
 3f4:	e0 95       	com	r30
 3f6:	08 95       	ret

000003f8 <__fixsfsi>:
 3f8:	0e 94 03 02 	call	0x406	; 0x406 <__fixunssfsi>
 3fc:	68 94       	set
 3fe:	b1 11       	cpse	r27, r1
 400:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_szero>
 404:	08 95       	ret

00000406 <__fixunssfsi>:
 406:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_splitA>
 40a:	88 f0       	brcs	.+34     	; 0x42e <__fixunssfsi+0x28>
 40c:	9f 57       	subi	r25, 0x7F	; 127
 40e:	98 f0       	brcs	.+38     	; 0x436 <__fixunssfsi+0x30>
 410:	b9 2f       	mov	r27, r25
 412:	99 27       	eor	r25, r25
 414:	b7 51       	subi	r27, 0x17	; 23
 416:	b0 f0       	brcs	.+44     	; 0x444 <__fixunssfsi+0x3e>
 418:	e1 f0       	breq	.+56     	; 0x452 <__fixunssfsi+0x4c>
 41a:	66 0f       	add	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	88 1f       	adc	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	1a f0       	brmi	.+6      	; 0x42a <__fixunssfsi+0x24>
 424:	ba 95       	dec	r27
 426:	c9 f7       	brne	.-14     	; 0x41a <__fixunssfsi+0x14>
 428:	14 c0       	rjmp	.+40     	; 0x452 <__fixunssfsi+0x4c>
 42a:	b1 30       	cpi	r27, 0x01	; 1
 42c:	91 f0       	breq	.+36     	; 0x452 <__fixunssfsi+0x4c>
 42e:	0e 94 b9 02 	call	0x572	; 0x572 <__fp_zero>
 432:	b1 e0       	ldi	r27, 0x01	; 1
 434:	08 95       	ret
 436:	0c 94 b9 02 	jmp	0x572	; 0x572 <__fp_zero>
 43a:	67 2f       	mov	r22, r23
 43c:	78 2f       	mov	r23, r24
 43e:	88 27       	eor	r24, r24
 440:	b8 5f       	subi	r27, 0xF8	; 248
 442:	39 f0       	breq	.+14     	; 0x452 <__fixunssfsi+0x4c>
 444:	b9 3f       	cpi	r27, 0xF9	; 249
 446:	cc f3       	brlt	.-14     	; 0x43a <__fixunssfsi+0x34>
 448:	86 95       	lsr	r24
 44a:	77 95       	ror	r23
 44c:	67 95       	ror	r22
 44e:	b3 95       	inc	r27
 450:	d9 f7       	brne	.-10     	; 0x448 <__fixunssfsi+0x42>
 452:	3e f4       	brtc	.+14     	; 0x462 <__fixunssfsi+0x5c>
 454:	90 95       	com	r25
 456:	80 95       	com	r24
 458:	70 95       	com	r23
 45a:	61 95       	neg	r22
 45c:	7f 4f       	sbci	r23, 0xFF	; 255
 45e:	8f 4f       	sbci	r24, 0xFF	; 255
 460:	9f 4f       	sbci	r25, 0xFF	; 255
 462:	08 95       	ret

00000464 <__floatunsisf>:
 464:	e8 94       	clt
 466:	09 c0       	rjmp	.+18     	; 0x47a <__floatsisf+0x12>

00000468 <__floatsisf>:
 468:	97 fb       	bst	r25, 7
 46a:	3e f4       	brtc	.+14     	; 0x47a <__floatsisf+0x12>
 46c:	90 95       	com	r25
 46e:	80 95       	com	r24
 470:	70 95       	com	r23
 472:	61 95       	neg	r22
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	8f 4f       	sbci	r24, 0xFF	; 255
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	99 23       	and	r25, r25
 47c:	a9 f0       	breq	.+42     	; 0x4a8 <__floatsisf+0x40>
 47e:	f9 2f       	mov	r31, r25
 480:	96 e9       	ldi	r25, 0x96	; 150
 482:	bb 27       	eor	r27, r27
 484:	93 95       	inc	r25
 486:	f6 95       	lsr	r31
 488:	87 95       	ror	r24
 48a:	77 95       	ror	r23
 48c:	67 95       	ror	r22
 48e:	b7 95       	ror	r27
 490:	f1 11       	cpse	r31, r1
 492:	f8 cf       	rjmp	.-16     	; 0x484 <__floatsisf+0x1c>
 494:	fa f4       	brpl	.+62     	; 0x4d4 <__floatsisf+0x6c>
 496:	bb 0f       	add	r27, r27
 498:	11 f4       	brne	.+4      	; 0x49e <__floatsisf+0x36>
 49a:	60 ff       	sbrs	r22, 0
 49c:	1b c0       	rjmp	.+54     	; 0x4d4 <__floatsisf+0x6c>
 49e:	6f 5f       	subi	r22, 0xFF	; 255
 4a0:	7f 4f       	sbci	r23, 0xFF	; 255
 4a2:	8f 4f       	sbci	r24, 0xFF	; 255
 4a4:	9f 4f       	sbci	r25, 0xFF	; 255
 4a6:	16 c0       	rjmp	.+44     	; 0x4d4 <__floatsisf+0x6c>
 4a8:	88 23       	and	r24, r24
 4aa:	11 f0       	breq	.+4      	; 0x4b0 <__floatsisf+0x48>
 4ac:	96 e9       	ldi	r25, 0x96	; 150
 4ae:	11 c0       	rjmp	.+34     	; 0x4d2 <__floatsisf+0x6a>
 4b0:	77 23       	and	r23, r23
 4b2:	21 f0       	breq	.+8      	; 0x4bc <__floatsisf+0x54>
 4b4:	9e e8       	ldi	r25, 0x8E	; 142
 4b6:	87 2f       	mov	r24, r23
 4b8:	76 2f       	mov	r23, r22
 4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <__floatsisf+0x5e>
 4bc:	66 23       	and	r22, r22
 4be:	71 f0       	breq	.+28     	; 0x4dc <__floatsisf+0x74>
 4c0:	96 e8       	ldi	r25, 0x86	; 134
 4c2:	86 2f       	mov	r24, r22
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	60 e0       	ldi	r22, 0x00	; 0
 4c8:	2a f0       	brmi	.+10     	; 0x4d4 <__floatsisf+0x6c>
 4ca:	9a 95       	dec	r25
 4cc:	66 0f       	add	r22, r22
 4ce:	77 1f       	adc	r23, r23
 4d0:	88 1f       	adc	r24, r24
 4d2:	da f7       	brpl	.-10     	; 0x4ca <__floatsisf+0x62>
 4d4:	88 0f       	add	r24, r24
 4d6:	96 95       	lsr	r25
 4d8:	87 95       	ror	r24
 4da:	97 f9       	bld	r25, 7
 4dc:	08 95       	ret

000004de <__fp_inf>:
 4de:	97 f9       	bld	r25, 7
 4e0:	9f 67       	ori	r25, 0x7F	; 127
 4e2:	80 e8       	ldi	r24, 0x80	; 128
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	08 95       	ret

000004ea <__fp_nan>:
 4ea:	9f ef       	ldi	r25, 0xFF	; 255
 4ec:	80 ec       	ldi	r24, 0xC0	; 192
 4ee:	08 95       	ret

000004f0 <__fp_pscA>:
 4f0:	00 24       	eor	r0, r0
 4f2:	0a 94       	dec	r0
 4f4:	16 16       	cp	r1, r22
 4f6:	17 06       	cpc	r1, r23
 4f8:	18 06       	cpc	r1, r24
 4fa:	09 06       	cpc	r0, r25
 4fc:	08 95       	ret

000004fe <__fp_pscB>:
 4fe:	00 24       	eor	r0, r0
 500:	0a 94       	dec	r0
 502:	12 16       	cp	r1, r18
 504:	13 06       	cpc	r1, r19
 506:	14 06       	cpc	r1, r20
 508:	05 06       	cpc	r0, r21
 50a:	08 95       	ret

0000050c <__fp_round>:
 50c:	09 2e       	mov	r0, r25
 50e:	03 94       	inc	r0
 510:	00 0c       	add	r0, r0
 512:	11 f4       	brne	.+4      	; 0x518 <__fp_round+0xc>
 514:	88 23       	and	r24, r24
 516:	52 f0       	brmi	.+20     	; 0x52c <__fp_round+0x20>
 518:	bb 0f       	add	r27, r27
 51a:	40 f4       	brcc	.+16     	; 0x52c <__fp_round+0x20>
 51c:	bf 2b       	or	r27, r31
 51e:	11 f4       	brne	.+4      	; 0x524 <__fp_round+0x18>
 520:	60 ff       	sbrs	r22, 0
 522:	04 c0       	rjmp	.+8      	; 0x52c <__fp_round+0x20>
 524:	6f 5f       	subi	r22, 0xFF	; 255
 526:	7f 4f       	sbci	r23, 0xFF	; 255
 528:	8f 4f       	sbci	r24, 0xFF	; 255
 52a:	9f 4f       	sbci	r25, 0xFF	; 255
 52c:	08 95       	ret

0000052e <__fp_split3>:
 52e:	57 fd       	sbrc	r21, 7
 530:	90 58       	subi	r25, 0x80	; 128
 532:	44 0f       	add	r20, r20
 534:	55 1f       	adc	r21, r21
 536:	59 f0       	breq	.+22     	; 0x54e <__fp_splitA+0x10>
 538:	5f 3f       	cpi	r21, 0xFF	; 255
 53a:	71 f0       	breq	.+28     	; 0x558 <__fp_splitA+0x1a>
 53c:	47 95       	ror	r20

0000053e <__fp_splitA>:
 53e:	88 0f       	add	r24, r24
 540:	97 fb       	bst	r25, 7
 542:	99 1f       	adc	r25, r25
 544:	61 f0       	breq	.+24     	; 0x55e <__fp_splitA+0x20>
 546:	9f 3f       	cpi	r25, 0xFF	; 255
 548:	79 f0       	breq	.+30     	; 0x568 <__fp_splitA+0x2a>
 54a:	87 95       	ror	r24
 54c:	08 95       	ret
 54e:	12 16       	cp	r1, r18
 550:	13 06       	cpc	r1, r19
 552:	14 06       	cpc	r1, r20
 554:	55 1f       	adc	r21, r21
 556:	f2 cf       	rjmp	.-28     	; 0x53c <__fp_split3+0xe>
 558:	46 95       	lsr	r20
 55a:	f1 df       	rcall	.-30     	; 0x53e <__fp_splitA>
 55c:	08 c0       	rjmp	.+16     	; 0x56e <__fp_splitA+0x30>
 55e:	16 16       	cp	r1, r22
 560:	17 06       	cpc	r1, r23
 562:	18 06       	cpc	r1, r24
 564:	99 1f       	adc	r25, r25
 566:	f1 cf       	rjmp	.-30     	; 0x54a <__fp_splitA+0xc>
 568:	86 95       	lsr	r24
 56a:	71 05       	cpc	r23, r1
 56c:	61 05       	cpc	r22, r1
 56e:	08 94       	sec
 570:	08 95       	ret

00000572 <__fp_zero>:
 572:	e8 94       	clt

00000574 <__fp_szero>:
 574:	bb 27       	eor	r27, r27
 576:	66 27       	eor	r22, r22
 578:	77 27       	eor	r23, r23
 57a:	cb 01       	movw	r24, r22
 57c:	97 f9       	bld	r25, 7
 57e:	08 95       	ret

00000580 <__mulsf3>:
 580:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__mulsf3x>
 584:	0c 94 86 02 	jmp	0x50c	; 0x50c <__fp_round>
 588:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fp_pscA>
 58c:	38 f0       	brcs	.+14     	; 0x59c <__mulsf3+0x1c>
 58e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__fp_pscB>
 592:	20 f0       	brcs	.+8      	; 0x59c <__mulsf3+0x1c>
 594:	95 23       	and	r25, r21
 596:	11 f0       	breq	.+4      	; 0x59c <__mulsf3+0x1c>
 598:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_inf>
 59c:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_nan>
 5a0:	11 24       	eor	r1, r1
 5a2:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_szero>

000005a6 <__mulsf3x>:
 5a6:	0e 94 97 02 	call	0x52e	; 0x52e <__fp_split3>
 5aa:	70 f3       	brcs	.-36     	; 0x588 <__mulsf3+0x8>

000005ac <__mulsf3_pse>:
 5ac:	95 9f       	mul	r25, r21
 5ae:	c1 f3       	breq	.-16     	; 0x5a0 <__mulsf3+0x20>
 5b0:	95 0f       	add	r25, r21
 5b2:	50 e0       	ldi	r21, 0x00	; 0
 5b4:	55 1f       	adc	r21, r21
 5b6:	62 9f       	mul	r22, r18
 5b8:	f0 01       	movw	r30, r0
 5ba:	72 9f       	mul	r23, r18
 5bc:	bb 27       	eor	r27, r27
 5be:	f0 0d       	add	r31, r0
 5c0:	b1 1d       	adc	r27, r1
 5c2:	63 9f       	mul	r22, r19
 5c4:	aa 27       	eor	r26, r26
 5c6:	f0 0d       	add	r31, r0
 5c8:	b1 1d       	adc	r27, r1
 5ca:	aa 1f       	adc	r26, r26
 5cc:	64 9f       	mul	r22, r20
 5ce:	66 27       	eor	r22, r22
 5d0:	b0 0d       	add	r27, r0
 5d2:	a1 1d       	adc	r26, r1
 5d4:	66 1f       	adc	r22, r22
 5d6:	82 9f       	mul	r24, r18
 5d8:	22 27       	eor	r18, r18
 5da:	b0 0d       	add	r27, r0
 5dc:	a1 1d       	adc	r26, r1
 5de:	62 1f       	adc	r22, r18
 5e0:	73 9f       	mul	r23, r19
 5e2:	b0 0d       	add	r27, r0
 5e4:	a1 1d       	adc	r26, r1
 5e6:	62 1f       	adc	r22, r18
 5e8:	83 9f       	mul	r24, r19
 5ea:	a0 0d       	add	r26, r0
 5ec:	61 1d       	adc	r22, r1
 5ee:	22 1f       	adc	r18, r18
 5f0:	74 9f       	mul	r23, r20
 5f2:	33 27       	eor	r19, r19
 5f4:	a0 0d       	add	r26, r0
 5f6:	61 1d       	adc	r22, r1
 5f8:	23 1f       	adc	r18, r19
 5fa:	84 9f       	mul	r24, r20
 5fc:	60 0d       	add	r22, r0
 5fe:	21 1d       	adc	r18, r1
 600:	82 2f       	mov	r24, r18
 602:	76 2f       	mov	r23, r22
 604:	6a 2f       	mov	r22, r26
 606:	11 24       	eor	r1, r1
 608:	9f 57       	subi	r25, 0x7F	; 127
 60a:	50 40       	sbci	r21, 0x00	; 0
 60c:	9a f0       	brmi	.+38     	; 0x634 <__mulsf3_pse+0x88>
 60e:	f1 f0       	breq	.+60     	; 0x64c <__mulsf3_pse+0xa0>
 610:	88 23       	and	r24, r24
 612:	4a f0       	brmi	.+18     	; 0x626 <__mulsf3_pse+0x7a>
 614:	ee 0f       	add	r30, r30
 616:	ff 1f       	adc	r31, r31
 618:	bb 1f       	adc	r27, r27
 61a:	66 1f       	adc	r22, r22
 61c:	77 1f       	adc	r23, r23
 61e:	88 1f       	adc	r24, r24
 620:	91 50       	subi	r25, 0x01	; 1
 622:	50 40       	sbci	r21, 0x00	; 0
 624:	a9 f7       	brne	.-22     	; 0x610 <__mulsf3_pse+0x64>
 626:	9e 3f       	cpi	r25, 0xFE	; 254
 628:	51 05       	cpc	r21, r1
 62a:	80 f0       	brcs	.+32     	; 0x64c <__mulsf3_pse+0xa0>
 62c:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_inf>
 630:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_szero>
 634:	5f 3f       	cpi	r21, 0xFF	; 255
 636:	e4 f3       	brlt	.-8      	; 0x630 <__mulsf3_pse+0x84>
 638:	98 3e       	cpi	r25, 0xE8	; 232
 63a:	d4 f3       	brlt	.-12     	; 0x630 <__mulsf3_pse+0x84>
 63c:	86 95       	lsr	r24
 63e:	77 95       	ror	r23
 640:	67 95       	ror	r22
 642:	b7 95       	ror	r27
 644:	f7 95       	ror	r31
 646:	e7 95       	ror	r30
 648:	9f 5f       	subi	r25, 0xFF	; 255
 64a:	c1 f7       	brne	.-16     	; 0x63c <__mulsf3_pse+0x90>
 64c:	fe 2b       	or	r31, r30
 64e:	88 0f       	add	r24, r24
 650:	91 1d       	adc	r25, r1
 652:	96 95       	lsr	r25
 654:	87 95       	ror	r24
 656:	97 f9       	bld	r25, 7
 658:	08 95       	ret

0000065a <_exit>:
 65a:	f8 94       	cli

0000065c <__stop_program>:
 65c:	ff cf       	rjmp	.-2      	; 0x65c <__stop_program>
